{
  "Gloomysunday28/mcp-server": {
    "mcpServers": {
      "weather-server": {
        "command": "/path/to/weather-server/build/index.js"
      }
    }
  },
  "block/vscode-mcp": {
    "mcpServers": {
      "vscode-mcp-server": {
        "command": "npx",
        "args": [
          "vscode-mcp-server"
        ],
        "env": {}
      }
    }
  },
  "MCP-Mirror/hekmon8_Homeassistant-server-mcp": {
    "mcpServers": {
      "homeassistant": {
        "command": "node",
        "args": [
          "/path/to/homeassistant-mcp/homeassistant-server/build/index.js"
        ],
        "env": {
          "HA_URL": "http://your-homeassistant-url:8123",
          "HA_TOKEN": "your-long-lived-access-token"
        }
      }
    }
  },
  "MxIris-Reverse-Engineering/ida-mcp-server": {
    "mcpServers": {
      "git": {
        "command": "uv",
        "args": [
          "--directory",
          "/<path to mcp-server-ida>",
          "run",
          "mcp-server-ida"
        ]
      }
    }
  },
  "mixelpixx/Google-Search-MCP-Server": {
    "mcpServers": {
      "google-search": {
        "command": "C:\\Program Files\\odejs\\ode.exe",
        "args": [
          "C:\\path\\to\\google-search-mcp\\dist\\google-search.js"
        ],
        "cwd": "C:\\path\\to\\google-search-mcp",
        "env": {
          "GOOGLE_API_KEY": "your-google-api-key",
          "GOOGLE_SEARCH_ENGINE_ID": "your-custom-search-engine-id"
        },
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "alexatnordnet/mcp-google-custom-search-server": {
    "mcpServers": {
      "google-search": {
        "command": "node",
        "args": [
          "/absolute/path/to/mcp-google-custom-search-server/build/index.js"
        ],
        "env": {
          "GOOGLE_API_KEY": "your-api-key",
          "GOOGLE_SEARCH_ENGINE_ID": "your-search-engine-id"
        }
      }
    }
  },
  "imiborbas/pocketbase-mcp-server": {
    "mcpServers": {
      "pocketbase-mcp-server": {
        "command": "/path/to/pocketbase-mcp-server/build/index.js --pb-url=http://localhost:8090 --pb-admin-email=admin@example.com --pb-admin-password=your-secure-password"
      }
    }
  },
  "MCP-Mirror/f4ww4z_mcp-mysql-server": {
    "mcpServers": {
      "mysql": {
        "command": "npx",
        "args": [
          "-y",
          "@f4ww4z/mcp-mysql-server"
        ],
        "env": {
          "MYSQL_HOST": "your_host",
          "MYSQL_USER": "your_user",
          "MYSQL_PASSWORD": "your_password",
          "MYSQL_DATABASE": "your_database"
        }
      }
    }
  },
  "exoticknight/mcp-file-merger": {
    "mcpServers": {
      "file-merger": {
        "command": "npx",
        "args": [
          "-y",
          "@exoticknight/mcp-file-merger",
          "/path/to/allowed/dir"
        ]
      }
    }
  },
  "RyoJerryYu/mcp-server-memos-py": {
    "mcpServers": {
      "fetch": {
        "command": "uvx",
        "args": [
          "mcp-server-fetch"
        ]
      },
      "memos": {
        "command": "uvx",
        "args": [
          "--prerelease=allow",
          "mcp-server-memos",
          "--host",
          "localhost",
          "--port",
          "5230",
          "--token",
          "your-access-token-here"
        ]
      }
    }
  },
  "Zelaron/Pandoras-Shell": {
    "mcpServers": {
      "pandoras-shell": {
        "command": "/path/to/cloned/Pandoras-Shell/venv/bin/python",
        "args": [
          "/path/to/cloned/Pandoras-Shell/src/pandoras_shell/executor.py"
        ],
        "env": {
          "PYTHONPATH": "/path/to/cloned/Pandoras-Shell/src"
        }
      }
    }
  },
  "dragon1086/kospi-kosdaq-stock-server": {
    "mcpServers": {
      "kospi-kosdaq": {
        "command": "uvx",
        "gs": [
          "kospi_kosdaq_stock_server"
        ]
      }
    }
  },
  "JoshuaRileyDev/app-store-connect-mcp-server": {
    "mcpServers": {
      "app-store-connect": {
        "command": "npx",
        "args": [
          "-y",
          "@your-org/app-store-connect-mcp-server"
        ],
        "env": {
          "APP_STORE_CONNECT_KEY_ID": "YOUR_KEY_ID",
          "APP_STORE_CONNECT_ISSUER_ID": "YOUR_ISSUER_ID",
          "APP_STORE_CONNECT_P8_PATH": "/path/to/your/auth-key.p8"
        }
      }
    }
  },
  "GuoAccount/notepad-server": {
    "mcpServers": {
      "notepad-server": {
        "command": "/path/to/notepad-server/build/index.js"
      }
    }
  },
  "gnuhpc/rtc-mcp-server": {
    "mcpServers": {
      "rtc-mcp-server": {
        "command": "java",
        "args": [
          "-Dtransport.mode=stdio",
          "-Dspring.main.web-application-type=none",
          "-Dspring.main.banner-mode=off",
          "-Dlogging.file.name=/path/to/rtc-mcp-server/mcpserver.log",
          "-jar",
          "/path/to/rtc-mcp-server/target/rtc-mcp-server-1.0-SNAPSHOT.jar"
        ],
        "env": {
          "ALIYUN_ACCESS_KEY_ID": "your-access-key-id",
          "ALIYUN_ACCESS_KEY_SECRET": "your-access-key-secret"
        },
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "0xshellming/mcp-summarizer-server": {
    "mcpServers": {
      "mcp-server-firecrawl": {
        "command": "npx",
        "args": [
          "-y",
          "firecrawl-mcp"
        ],
        "env": {
          "FIRECRAWL_API_KEY": "YOUR_API_KEY_HERE",
          "FIRECRAWL_RETRY_MAX_ATTEMPTS": "5",
          "FIRECRAWL_RETRY_INITIAL_DELAY": "2000",
          "FIRECRAWL_RETRY_MAX_DELAY": "30000",
          "FIRECRAWL_RETRY_BACKOFF_FACTOR": "3",
          "FIRECRAWL_CREDIT_WARNING_THRESHOLD": "2000",
          "FIRECRAWL_CREDIT_CRITICAL_THRESHOLD": "500"
        }
      }
    }
  },
  "databutton/databutton-mcp": {
    "mcpServers": {
      "databutton": {
        "command": "/path/to/databutton/build/index.js"
      }
    }
  },
  "RossH121/perplexity-mcp": {
    "mcpServers": {
      "perplexity-server": {
        "command": "node",
        "args": [
          "/absolute/path/to/perplexity-mcp/build/index.js"
        ],
        "env": {
          "PERPLEXITY_API_KEY": "your-api-key-here",
          "PERPLEXITY_MODEL": "sonar"
        }
      }
    }
  },
  "MammothGrowth/dbt-cli-mcp": {
    "mcpServers": {
      "dbt": {
        "command": "uv",
        "args": [
          "--directory",
          "/path/to/dbt-cli-mcp",
          "run",
          "src/server.py"
        ],
        "env": {
          "DBT_PATH": "/absolute/path/to/dbt",
          "ENV_FILE": ".env"
        }
      }
    }
  },
  "MCP-Mirror/rezapex_shopify-mcp-server-main": {
    "mcpServers": {
      "shopify": {
        "command": "npx",
        "args": [
          "-y",
          "shopify-mcp-server"
        ],
        "env": {
          "SHOPIFY_ACCESS_TOKEN": "<YOUR_ACCESS_TOKEN>",
          "MYSHOPIFY_DOMAIN": "<YOUR_SHOP>.myshopify.com"
        }
      }
    }
  },
  "ben4mn/amadeus-mcp": {
    "mcpServers": {
      "amadeus": {
        "command": "python",
        "args": [
          "path/to/amadeus/server.py"
        ],
        "env": {
          "AMADEUS_API_KEY": "your_key",
          "AMADEUS_API_SECRET": "your_secret",
          "PYTHONPATH": "path/to/amadeus"
        }
      }
    }
  },
  "aliargun/mcp-server-gemini": {
    "mcpServers": {
      "gemini": {
        "command": "npx",
        "args": [
          "-y",
          "github:aliargun/mcp-server-gemini"
        ],
        "env": {
          "GEMINI_API_KEY": "your_api_key_here"
        }
      }
    }
  },
  "ucesys/minio-python-mcp": {
    "mcpServers": {
      "minio-mcp": {
        "command": "python",
        "args": [
          "path/to/minio-mcp/src/minio_mcp_server/server.py"
        ]
      }
    }
  },
  "MarcusJellinghaus/mcp_server_code_checker_python": {
    "mcpServers": {
      "code_checker": {
        "command": "C:\\path\\to\\mcp_code_checker\\.venv\\Scripts\\python.exe",
        "args": [
          "C:\\path\\to\\mcp_code_checker\\src\\main.py",
          "--project-dir",
          "C:\\path\\to\\your\\project"
        ],
        "env": {
          "PYTHONPATH": "C:\\path\\to\\mcp_code_checker\\"
        }
      }
    }
  },
  "kaichen/mcp-local-router": {
    "mcpServers": {
      "filesystem": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-filesystem",
          "/Users/username/Desktop"
        ],
        "env": {
          "LINEAR_ACCESS_TOKEN": "your_personal_access_token"
        }
      },
      "everything": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-everything"
        ],
        "env": {}
      }
    }
  },
  "bmorphism/krep-mcp-server": {
    "mcpServers": {
      "krep": {
        "command": "node",
        "args": [
          "/path/to/krep-mcp-server/src/index.js"
        ],
        "env": {
          "CLAUDE_MCP": "true",
          "KREP_PATH": "/path/to/krep-native/krep",
          "DEBUG": "true"
        },
        "description": "High-performance string search utility with unified interface",
        "disabled": false,
        "autoApprove": [
          "krep"
        ]
      }
    }
  },
  "T0UGH/mcp_server_my_lark_doc": {
    "mcpServers": {
      "lark_doc": {
        "command": "uvx",
        "args": [
          "mcp-server-my-lark-doc"
        ],
        "env": {
          "LARK_APP_ID": "your app id",
          "LARK_APP_SECRET": "your app secret",
          "OAUTH_HOST": "localhost",
          "OAUTH_PORT": "9997"
        }
      }
    }
  },
  "MCP-Mirror/tanevanwifferen_usescraper-mcp-server": {
    "mcpServers": {
      "usescraper-server": {
        "command": "node",
        "args": [
          "/path/to/usescraper-server/build/index.js"
        ],
        "env": {
          "USESCRAPER_API_KEY": "your-api-key-here"
        }
      }
    }
  },
  "apifox/apifox-mcp-server": {
    "mcpServers": {
      "API \u00e6\u0096\u0087\u00e6\u00a1\u00a3": {
        "command": "cmd",
        "args": [
          "/c",
          "npx",
          "-y",
          "apifox-mcp-server@latest",
          "--project-id=<project-id>"
        ],
        "env": {
          "APIFOX_ACCESS_TOKEN": "<access-token>"
        }
      }
    }
  },
  "situ2001/unplugin-mcp": {
    "mcpServers": {
      "rollup": {
        "url": "http://localhost:14514/mcp/sse"
      }
    }
  },
  "aindreyway/mcp-neurolora": {
    "mcpServers": {
      "aindreyway-mcp-neurolora": {
        "command": "npx",
        "args": [
          "-y",
          "@aindreyway/mcp-neurolora@latest"
        ],
        "env": {
          "NODE_OPTIONS": "--max-old-space-size=256",
          "OPENAI_API_KEY": "your_api_key_here"
        }
      }
    }
  },
  "MCP-Mirror/philgei_mcp_server_filesystem": {
    "mcpServers": {
      "myFiles": {
        "command": "mcp-server-filesystem",
        "args": [
          "D:/",
          "C:/Users/YourUsername/Documents",
          "~/Desktop"
        ]
      }
    }
  },
  "dwrtz/mcpterm": {
    "mcpServers": {
      "mcpterm": {
        "command": "mcpterm",
        "args": []
      }
    }
  },
  "AntanasMisiunas/mcp-server-delay-doomsday": {
    "mcpServers": {
      "mcp-server-delay-doomsday": {
        "command": "node",
        "args": [
          "/path/to/mcp-server-delay-doomsday/build/index.js"
        ]
      }
    }
  },
  "neka-nat/freecad-mcp": {
    "mcpServers": {
      "freecad": {
        "command": "uv",
        "args": [
          "--directory",
          "/path/to/freecad-mcp/",
          "run",
          "freecad-mcp"
        ]
      }
    }
  },
  "nahmanmate/better-auth-mcp-server": {
    "mcpServers": {
      "better-auth-mcp-server": {
        "command": "node",
        "args": [
          "/path/to/better-auth-mcp-server/build/index.js"
        ],
        "disabled": false,
        "alwaysAllow": []
      }
    }
  },
  "ahujasid/blender-mcp": {
    "mcpServers": {
      "blender": {
        "command": "uvx",
        "args": [
          "blender-mcp"
        ]
      }
    }
  },
  "bmorphism/hypernym-mcp-server": {
    "mcpServers": {
      "hypernym": {
        "type": "stdio",
        "command": "cd /path/to/hypernym-mcp-server && npm run start:stdio",
        "description": "Hypernym semantic analysis and compression tool",
        "tools": [
          "analyze_text",
          "semantic_compression"
        ]
      }
    }
  },
  "MissionSquad/mcp-github": {
    "mcpServers": {
      "github": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-github"
        ],
        "env": {
          "GITHUB_PERSONAL_ACCESS_TOKEN": "<YOUR_TOKEN>"
        }
      }
    }
  },
  "cyanheads/ntfy-mcp-server": {
    "mcpServers": {
      "ntfy": {
        "command": "node",
        "args": [
          "/path/to/ntfy-mcp-server/dist/index.js"
        ],
        "env": {
          "NTFY_BASE_URL": "https://ntfy.sh",
          "NTFY_DEFAULT_TOPIC": "your_default_topic",
          "LOG_LEVEL": "info",
          "NODE_ENV": "production"
        }
      }
    }
  },
  "Sunwood-ai-labs/github-kanban-mcp-server": {
    "mcpServers": {
      "github-kanban": {
        "command": "github-kanban-mcp-server",
        "env": {
          "GITHUB_TOKEN": "your_github_token",
          "GITHUB_OWNER": "your_github_username",
          "GITHUB_REPO": "your_repository_name"
        }
      }
    }
  },
  "unctad-ai/eregulations-mcp-server": {
    "mcpServers": {
      "eregulations": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "-e",
          "EREGULATIONS_API_URL",
          "ghcr.io/unctad-ai/eregulations-mcp-server:latest"
        ],
        "env": {
          "EREGULATIONS_API_URL": "https://your-eregulations-api.com"
        }
      }
    }
  },
  "Alesion30/my-mcp-server": {
    "mcpServers": {
      "myMcp": {
        "command": "node",
        "args": [
          "xxx/my-mcp-server/build/main.js"
        ]
      }
    }
  },
  "MCP-Mirror/dillip285_mcp-dev-server": {
    "mcpServers": {
      "dev": {
        "command": "mcp-dev-server",
        "args": []
      }
    }
  },
  "kevinwatt/mcp-server-searxng": {
    "mcpServers": {
      "searxng": {
        "name": "searxng",
        "command": "npx",
        "args": [
          "-y",
          "@kevinwatt/mcp-server-searxng"
        ],
        "env": {
          "SEARXNG_INSTANCES": "http://localhost:8080,https://searx.example.com",
          "SEARXNG_USER_AGENT": "CustomBot/1.0",
          "NODE_TLS_REJECT_UNAUTHORIZED": "0"
        }
      }
    }
  },
  "Fewsats/fewsats-mcp": {
    "mcpServers": {
      "Fewsats Server": {
        "command": "uvx",
        "args": [
          "fewsats-mcp"
        ],
        "env": {
          "FEWSATS_API_KEY": "YOUR_FEWSATS_API_KEY"
        }
      }
    }
  },
  "voska/hass-mcp": {
    "mcpServers": {
      "hass-mcp": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "-e",
          "HA_URL",
          "-e",
          "HA_TOKEN",
          "voska/hass-mcp"
        ],
        "env": {
          "HA_URL": "http://homeassistant.local:8123",
          "HA_TOKEN": "YOUR_LONG_LIVED_TOKEN"
        }
      }
    }
  },
  "apimatic/apimatic-validator-mcp": {
    "mcpServers": {
      "APIMatic": {
        "command": "node",
        "args": [
          "C:\\PATH\\TO\\PARENT\\FOLDER\\build\\index.js"
        ],
        "env": {
          "APIMATIC_API_KEY": "<Add your APIMatic token here>"
        }
      }
    }
  },
  "ckz/flux-schnell-mcp": {
    "mcpServers": {
      "flux-schnell": {
        "command": "node",
        "args": [
          "/path/to/flux-schnell-mcp/build/index.js"
        ],
        "env": {
          "REPLICATE_API_TOKEN": "your-replicate-api-token"
        },
        "disabled": false,
        "alwaysAllow": []
      }
    }
  },
  "apappascs/tavily-search-mcp-server": {
    "mcpServers": {
      "tavily-search-server": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "-e",
          "TAVILY_API_KEY",
          "-v",
          "/Users/<username>/<FULL_PATH...>/tavily-search-mcp-server:/app",
          "tavily-search-mcp-server"
        ],
        "env": {
          "TAVILY_API_KEY": "your_api_key_here"
        }
      }
    }
  },
  "kbyk004/playwright-lighthouse-mcp": {
    "mcpServers": {
      "playwright-lighthouse": {
        "command": "node",
        "args": [
          "/path-to/playwright-lighthouse-mcp/build/index.js"
        ]
      }
    }
  },
  "FreePeak/db-mcp-server": {
    "mcpServers": {
      "multidb": {
        "command": "/path/to/db-mcp-server/server",
        "args": [
          "-t",
          "stdio",
          "-c",
          "/path/to/database_config.json"
        ]
      }
    }
  },
  "raw391/coin_daemon_mcp": {
    "mcpServers": {
      "cryptocurrency": {
        "command": "npx",
        "args": [
          "-y",
          "@raw391/coin-daemon-mcp"
        ],
        "env": {
          "CONFIG_PATH": "C:/CryptoConfig/daemon-config.json"
        }
      },
      "filesystem": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-filesystem",
          "C:/CryptoData"
        ]
      }
    }
  },
  "Msparihar/mcp-server-firecrawl": {
    "mcpServers": {
      "firecrawl": {
        "command": "mcp-server-firecrawl",
        "env": {
          "FIRECRAWL_API_KEY": "your-api-key"
        }
      }
    }
  },
  "r3-yamauchi/mcp-server-blastengine-mailer": {
    "mcpServers": {
      "blastengine-mailer": {
        "command": "node",
        "env": {
          "BLASTENGINE_USER_ID": "userid-of-blastengine",
          "BLASTENGINE_API_KEY": "apikey-of-blastengine"
        },
        "args": [
          "/path/to/blastengine-mailer/server.js"
        ]
      }
    }
  },
  "ivo-toby/mcp-openapi-server": {
    "mcpServers": {
      "openapi": {
        "command": "npx",
        "args": [
          "-y",
          "@ivotoby/openapi-mcp-server"
        ],
        "env": {
          "API_BASE_URL": "https://api.example.com",
          "OPENAPI_SPEC_PATH": "https://api.example.com/openapi.json",
          "API_HEADERS": "Authorization:Bearer token123,X-API-Key:your-api-key"
        }
      }
    }
  },
  "peakmojo/mcp-server-peakmojo": {
    "mcpServers": {
      "peakmojo": {
        "command": "python",
        "args": [
          "-m",
          "mcp_server_peakmojo",
          "--api-key",
          "your_api_key_here",
          "--base-url",
          "https://api.staging.readymojo.com"
        ]
      }
    }
  },
  "Cactusinhand/mcp_server_notify": {
    "mcpServers": {
      "NotificationServer": {
        "command": "uv",
        "args": [
          "--directory",
          "path/to/your/mcp_server_notify project",
          "run",
          "mcp-server-notify"
        ]
      }
    }
  },
  "Fibery-inc/fibery-mcp-server": {
    "mcpServers": {
      "arxiv-mcp-server": {
        "command": "uv",
        "args": [
          "--directory",
          "path/to/cloned/fibery-mcp-server",
          "run",
          "fibery-mcp-server",
          "--fibery-host",
          "your-domain.fibery.io",
          "--fibery-api-token",
          "your-api-token"
        ]
      }
    }
  },
  "hymnk/cline-mcp-server-sample": {
    "mcpServers": {
      "example-server": {
        "command": "/root/.bun/bin/bun",
        "args": [
          "run",
          "/workspace/mcp-server/index.ts"
        ],
        "env": {}
      }
    }
  },
  "pab1it0/adx-mcp-server": {
    "mcpServers": {
      "adx": {
        "command": "docker",
        "args": [
          "run",
          "--rm",
          "-i",
          "-e",
          "ADX_CLUSTER_URL",
          "-e",
          "ADX_DATABASE",
          "adx-mcp-server"
        ],
        "env": {
          "ADX_CLUSTER_URL": "https://yourcluster.region.kusto.windows.net",
          "ADX_DATABASE": "your_database"
        }
      }
    }
  },
  "brianshin22/youtube-translate-mcp": {
    "mcpServers": {
      "youtube-translate": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "-e",
          "YOUTUBE_TRANSLATE_API_KEY",
          "youtube-translate-mcp"
        ],
        "env": {
          "YOUTUBE_TRANSLATE_API_KEY": "YOUR_API_KEY"
        }
      }
    }
  },
  "base/base-mcp": {
    "mcpServers": {
      "base-mcp": {
        "command": "npx",
        "args": [
          "-y",
          "base-mcp@latest"
        ],
        "env": {
          "COINBASE_API_KEY_NAME": "your_api_key_name",
          "COINBASE_API_PRIVATE_KEY": "your_private_key",
          "SEED_PHRASE": "your seed phrase here",
          "COINBASE_PROJECT_ID": "your_project_id",
          "ALCHEMY_API_KEY": "your_alchemy_api_key",
          "PINATA_JWT": "your_pinata_jwt",
          "OPENROUTER_API_KEY": "your_openrouter_api_key",
          "CHAIN_ID": "optional_for_base_sepolia_testnet"
        },
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "Garoth/wolframalpha-llm-mcp": {
    "mcpServers": {
      "wolframalpha": {
        "command": "node",
        "args": [
          "/path/to/wolframalpha-mcp-server/build/index.js"
        ],
        "env": {
          "WOLFRAM_LLM_APP_ID": "your-api-key-here"
        },
        "disabled": false,
        "autoApprove": [
          "ask_llm",
          "get_simple_answer",
          "validate_key"
        ]
      }
    }
  },
  "MCP-Mirror/cr7258_elasticsearch-mcp-server": {
    "mcpServers": {
      "elasticsearch": {
        "command": "uv",
        "args": [
          "--directory",
          "path/to/elasticsearch_mcp_server/src",
          "run",
          "server.py"
        ],
        "env": {
          "ELASTIC_HOST": "<your_elastic_url>",
          "ELASTIC_USERNAME": "<your_elastic_username>",
          "ELASTIC_PASSWORD": "<your_elastic_password>>"
        }
      }
    }
  },
  "MFYDev/ghost-mcp": {
    "mcpServers": {
      "ghost": {
        "command": "/Users/username/.local/bin/uv",
        "args": [
          "--directory",
          "/path/to/ghost-mcp",
          "run",
          "src/main.py"
        ],
        "env": {
          "GHOST_API_URL": "your_ghost_api_url",
          "GHOST_STAFF_API_KEY": "your_staff_api_key"
        }
      }
    }
  },
  "open-strategy-partners/osp_marketing_tools": {
    "mcpServers": {
      "osp_marketing_tools": {
        "command": "uvx",
        "args": [
          "--from",
          "git+https://github.com/open-strategy-partners/osp_marketing_tools@main",
          "osp_marketing_tools"
        ]
      }
    }
  },
  "QuantGeekDev/coincap-mcp": {
    "mcpServers": {
      "coincap-mcp": {
        "command": "/path/to/coincap-mcp/build/index.js"
      }
    }
  },
  "MCP-Mirror/pythonpete32_mcp-server-template": {
    "mcpServers": {
      "evm-server": {
        "command": "/path/to/evm-server/build/index.js"
      }
    }
  },
  "y7ut/mcp-tavily-search": {
    "mcpServers": {
      "tavily": {
        "command": "docker",
        "args": [
          "run",
          "--rm",
          "-i",
          "docker.ijiwei.com/mcp/mcp-tavily-search:latest",
          "run",
          "tvly-*******************"
        ]
      }
    }
  },
  "ethangillani/connectwise-mcp-server": {
    "mcpServers": {
      "connectwise": {
        "command": "npx",
        "args": [
          "-y",
          "connectwise-mcp-server"
        ],
        "env": {
          "CW_COMPANY_ID": "your_company_id",
          "CW_PUBLIC_KEY": "your_public_key",
          "CW_PRIVATE_KEY": "your_private_key",
          "CW_URL": "api-na.myconnectwise.net"
        },
        "options": {
          "autoStart": true,
          "logLevel": "info"
        }
      }
    }
  },
  "Tritlo/lsp-mcp": {
    "mcpServers": {
      "lsp-mcp": {
        "type": "stdio",
        "command": "npx",
        "args": [
          "tritlo/lsp-mcp",
          "<language-id>",
          "<path-to-lsp>",
          "<lsp-args>"
        ]
      }
    }
  },
  "EnesCinr/market-fiyatlari-mcp-server": {
    "mcpServers": {
      "marketfiyati": {
        "command": "npx",
        "args": [
          "-y @enescinar/market-fiyati-mcp"
        ]
      }
    }
  },
  "Cleversoft-IT/drupal-tools-mcp": {
    "mcpServers": {
      "drupal-modules-mcp": {
        "command": "/path/to/drupal-modules-mcp/build/index.js"
      }
    }
  },
  "robertheadley/chrome-debug-mcp": {
    "mcpServers": {
      "chrome-debug": {
        "command": "node",
        "args": [
          "path/to/chrome-debug-mcp/build/index.js"
        ],
        "disabled": false,
        "alwaysAllow": []
      }
    }
  },
  "xenoailimited/mcp-mavae": {
    "mcpServers": {
      "mavae": {
        "command": "node",
        "args": [
          "***/dist/index.js"
        ],
        "env": {
          "MAVAE_API_KEY": "MAVAE_API_KEY"
        }
      }
    }
  },
  "bjorndavidhansen/google-ads-mcp-server": {
    "mcpServers": {
      "google-ads": {
        "command": "python",
        "args": [
          "/absolute/path/to/server.py"
        ]
      }
    }
  },
  "Sjotie/notionMCP": {
    "mcpServers": {
      "notion": {
        "command": "node",
        "args": [
          "C:\\path\\to\\otion-mcp-server\\server.js"
        ],
        "env": {
          "NOTION_API_KEY": "your_notion_api_key_here"
        }
      }
    }
  },
  "vignesh-codes/ai-agents-mcp-pg": {
    "mcpServers": {
      "postgres": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "mcp/postgres",
          "postgresql://username:password@host.docker.internal:5432/mydatabase"
        ]
      }
    }
  },
  "philgei/mcp_server_filesystem": {
    "mcpServers": {
      "myFiles": {
        "command": "mcp-server-filesystem",
        "args": [
          "D:/",
          "C:/Users/YourUsername/Documents",
          "~/Desktop"
        ]
      }
    }
  },
  "mcollina/mcp-ripgrep": {
    "mcpServers": {
      "ripgrep": {
        "command": "npx",
        "args": [
          "-y",
          "mcp-ripgrep@latest"
        ]
      }
    }
  },
  "wangtsiao/mcp-weibohot-server": {
    "mcpServers": {
      "tavily": {
        "command": "npx",
        "args": [
          "/path/to/tavily-mcp/build/index.js"
        ],
        "env": {
          "TAVILY_API_KEY": "your-api-key-here"
        }
      }
    }
  },
  "magarcia/mcp-server-giphy": {
    "mcpServers": {
      "giphy": {
        "command": "npx",
        "args": [
          "-y",
          "mcp-server-giphy"
        ],
        "env": {
          "GIPHY_API_KEY": "<YOUR_API_KEY>"
        }
      }
    }
  },
  "thirdstrandstudio/mcp-tool-chainer": {
    "mcpServers": {
      "mcp_tool_chainer": {
        "command": "node",
        "args": [
          "/path/to/mcp-tool-chainer/index.js",
          "`claude_desktop_config.json` or `mcp.json`"
        ],
        "env": {}
      }
    }
  },
  "MCP-Mirror/integration-app_mcp-server": {
    "mcpServers": {
      "integration-app-hubspot": {
        "command": "npx",
        "args": [
          "-y",
          "@integration-app/mcp-server"
        ],
        "env": {
          "INTEGRATION_APP_TOKEN": "<your-integration-app-token>",
          "INTEGRATION_KEY": "hubspot"
        }
      }
    }
  },
  "blake365/usgs-quakes-mcp": {
    "mcpServers": {
      "usgs-quakes": {
        "command": "node",
        "args": [
          "/Full/Route/to/Folder/usgs-quakes/build/index.js"
        ]
      }
    }
  },
  "MCP-Mirror/tadasant_mcp-server-ssh-rails-runner": {
    "mcpServers": {
      "ssh-rails-runner": {
        "command": "npx",
        "args": [
          "mcp-server-ssh-rails-runner"
        ],
        "env": {
          "SSH_HOST": "your.remote.host",
          "SSH_USER": "your_ssh_user",
          "SSH_PRIVATE_KEY_PATH": "your_SSH_PRIVATE_KEY_PATH",
          "RAILS_WORKING_DIR": "/path/to/rails/app/root"
        }
      }
    }
  },
  "bazinga012/mcp_code_executor": {
    "mcpServers": {
      "mcp-code-executor": {
        "command": "node",
        "args": [
          "/path/to/mcp_code_executor/build/index.js"
        ],
        "env": {
          "CODE_STORAGE_DIR": "/path/to/code/storage",
          "CONDA_ENV_NAME": "your-conda-env"
        }
      }
    }
  },
  "rusiaaman/wcgw": {
    "mcpServers": {
      "w": {
        "command": "wsl.exe",
        "args": [
          "uv",
          "tool",
          "run",
          "--from",
          "wcgw@latest",
          "--python",
          "3.12",
          "wcgw_mcp"
        ]
      }
    }
  },
  "hanweg/mcp-tool-builder": {
    "mcpServers": {
      "tool-builder": {
        "command": "uv",
        "args": [
          "--directory",
          "PATH_TO\\mcp-tool-builder",
          "run",
          "tool-builder"
        ]
      }
    }
  },
  "alxspiker/ai-meta-mcp-server": {
    "mcpServers": {
      "ai-meta-mcp": {
        "command": "npx",
        "args": [
          "-y",
          "ai-meta-mcp-server"
        ],
        "env": {
          "ALLOW_JS_EXECUTION": "true",
          "ALLOW_PYTHON_EXECUTION": "false",
          "ALLOW_SHELL_EXECUTION": "false"
        }
      }
    }
  },
  "bharathvaj-ganesan/whois-mcp": {
    "mcpServers": {
      "whois": {
        "command": "npx",
        "args": [
          "-y",
          "@bharathvaj/whois-mcp@latest"
        ]
      }
    }
  },
  "MCP-Mirror/tatn_mcp-server-fetch-python": {
    "mcpServers": {
      "mcp-server-fetch-python": {
        "command": "uv",
        "args": [
          "--directory",
          "path\\to\\mcp-server-fetch-python",
          "run",
          "mcp-server-fetch-python"
        ]
      }
    }
  },
  "jagan-shanmugam/climatiq-mcp-server": {
    "mcpServers": {
      "climatiq-mcp-server": {
        "command": "climatiq-mcp-server",
        "env": {
          "CLIMATIQ_API_KEY": "your_climatiq_api_key"
        }
      }
    }
  },
  "FradSer/mcp-server-apple-reminders": {
    "mcpServers": {
      "apple-reminders": {
        "command": "mcp-server-apple-reminders",
        "args": []
      }
    }
  },
  "MCP-Mirror/peterparker57_clarion-builder-mcp-server": {
    "mcpServers": {
      "clarion-builder": {
        "command": "node",
        "args": [
          "path/to/clarion-builder-mcp-server/dist/index.js"
        ],
        "env": {}
      }
    }
  },
  "y86/ex-mcp-test": {
    "mcpServers": {
      "ex-mcp-test": {
        "command": "path/to/your/realease/bin/my_app",
        "args": [
          "start"
        ]
      }
    }
  },
  "zhaoxin34/mcp-server-mysql": {
    "mcpServers": {
      "mcp_server_mysql": {
        "command": "/path/to/npx/binary/npx",
        "args": [
          "-y",
          "@benborla29/mcp-server-mysql"
        ],
        "env": {
          "MYSQL_HOST": "127.0.0.1",
          "MYSQL_PORT": "3306",
          "MYSQL_USER": "root",
          "MYSQL_PASS": "",
          "MYSQL_DB": "db_name",
          "PATH": "/path/to/node/bin:/usr/bin:/bin",
          "MYSQL_POOL_SIZE": "10",
          "MYSQL_QUERY_TIMEOUT": "30000",
          "MYSQL_CACHE_TTL": "60000",
          "MYSQL_RATE_LIMIT": "100",
          "MYSQL_MAX_QUERY_COMPLEXITY": "1000",
          "MYSQL_SSL": "true",
          "MYSQL_ENABLE_LOGGING": "true",
          "MYSQL_LOG_LEVEL": "info",
          "MYSQL_METRICS_ENABLED": "true"
        }
      }
    }
  },
  "qpd-v/mcp-delete": {
    "mcpServers": {
      "mcp-delete": {
        "command": "npx",
        "args": [
          "@qpd-v/mcp-delete"
        ]
      }
    }
  },
  "okooo5km/zipic-mcp-server": {
    "mcpServers": {
      "zipic": {
        "command": "zipic-mcp-server"
      }
    }
  },
  "thrashr888/terraform-mcp-server": {
    "mcpServers": {
      "terraform-registry": {
        "command": "npx",
        "args": [
          "-y",
          "terraform-mcp-server"
        ]
      }
    }
  },
  "yiGmMk/mcp-server": {
    "mcpServers": {
      "yiGmMk/mcp-server": {
        "command": "uv",
        "args": [
          "run",
          "/path/to/your/mcp-server/main.py"
        ],
        "env": {
          "VIRTUAL_ENV": "/path/to/your/mcp-server/.venv",
          "JINA_API_KEY": "jina_api_key,\u00e8\u00af\u00b7\u00e4\u00bb\u008ehttps://jina.ai/reader\u00e8\u008e\u00b7\u00e5\u008f\u0096",
          "PYTHONIOENCODING": "utf-8"
        },
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "arbuthnot-eth/PayPal-MCP": {
    "mcpServers": {
      "paypal": {
        "command": "node",
        "args": [
          "path/to/paypal-mcp/build/index.js"
        ],
        "env": {
          "PAYPAL_CLIENT_ID": "your_client_id",
          "PAYPAL_CLIENT_SECRET": "your_client_secret",
          "PAYPAL_ENVIRONMENT": "sandbox"
        },
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "speakeasy-api/mistral-mcp-server-example": {
    "mcpServers": {
      "Mistral MCP Server": {
        "command": "node",
        "args": [
          "/Users/speakeasy/server-mistral/build/index.js"
        ],
        "env": {
          "MISTRAL_API_KEY": "YOUR_MISTRAL_API_KEY"
        }
      }
    }
  },
  "tadata-org/fastapi_mcp": {
    "mcpServers": {
      "my-api-mcp-proxy": {
        "command": "/Full/Path/To/Your/Executable/mcp-proxy",
        "args": [
          "http://127.0.0.1:8000/mcp"
        ]
      }
    }
  },
  "nattyraz/youtube-mcp": {
    "mcpServers": {
      "youtube": {
        "command": "node",
        "args": [
          "path/to/youtube-mcp/build/index.js"
        ],
        "env": {
          "YOUTUBE_API_KEY": "your_api_key",
          "YOUTUBE_CLIENT_ID": "your_client_id",
          "YOUTUBE_CLIENT_SECRET": "your_client_secret"
        },
        "disabled": false,
        "alwaysAllow": []
      }
    }
  },
  "memohib/Web_Search_MCP": {
    "mcpServers": {
      "Mcp_Demo": {
        "command": "uv",
        "args": [
          "--directory",
          "path/Web_Search_MCP",
          "run",
          "main.py"
        ]
      }
    }
  },
  "ahonn/mcp-server-gsc": {
    "mcpServers": {
      "gsc": {
        "command": "npx",
        "args": [
          "-y",
          "mcp-server-gsc"
        ],
        "env": {
          "GOOGLE_APPLICATION_CREDENTIALS": "/path/to/credentials.json"
        }
      }
    }
  },
  "Siddhant-K-code/mcp-apple-notes": {
    "mcpServers": {
      "apple-notes": {
        "command": "yarn",
        "args": [
          "start"
        ],
        "cwd": "/path/to/mcp-apple-notes"
      }
    }
  },
  "singlestore-labs/mcp-server-singlestore": {
    "mcpServers": {
      "singlestore-mcp-server": {
        "command": "pipx",
        "args": [
          "run",
          "singlestore-mcp-server"
        ],
        "env": {
          "SINGLESTORE_DB_USERNAME": "your-database-username",
          "SINGLESTORE_DB_PASSWORD": "your-database-password",
          "SINGLESTORE_API_KEY": "your-api-key"
        }
      }
    }
  },
  "mixelpixx/GoogleSearch_McpServer": {
    "mcpServers": {
      "google-search": {
        "command": "npm",
        "args": [
          "run",
          "start:all"
        ],
        "cwd": "/path/to/google-search-server"
      }
    }
  },
  "Cam10001110101/mcp-server-obsidian-jsoncanvas": {
    "mcpServers": {
      "jsoncanvas": {
        "command": "uv",
        "args": [
          "--directory",
          "/path/to/jsoncanvas",
          "run",
          "mcp-server-jsoncanvas"
        ],
        "env": {
          "OUTPUT_PATH": "./output"
        }
      }
    }
  },
  "mcpagents-ai/mcpagentai": {
    "mcpServers": {
      "mcpagentai": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "-v",
          "/path/to/local/eliza:/app/eliza",
          "--rm",
          "mcpagentai"
        ]
      }
    }
  },
  "kj455/mcp-kibela": {
    "mcpServers": {
      "mcp-kibela": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "-e",
          "KIBELA_TEAM",
          "-e",
          "KIBELA_TOKEN",
          "ghcr.io/kj455/mcp-kibela:latest"
        ],
        "env": {
          "KIBELA_TEAM": "your-team-name from https://[team-name].kibe.la",
          "KIBELA_TOKEN": "your-token"
        }
      }
    }
  },
  "AudienseCo/mcp-audiense-insights": {
    "mcpServers": {
      "audiense-insights": {
        "command": "/opt/homebrew/bin/node",
        "args": [
          "/ABSOLUTE/PATH/TO/YOUR/build/index.js"
        ],
        "env": {
          "AUDIENSE_CLIENT_ID": "your_client_id_here",
          "AUDIENSE_CLIENT_SECRET": "your_client_secret_here",
          "TWITTER_BEARER_TOKEN": "your_token_here"
        }
      }
    }
  },
  "shaneholloman/mcp-knowledge-graph": {
    "mcpServers": {
      "memory": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-memory",
          "--memory-path",
          "/path/to/your/memory.jsonl"
        ]
      }
    }
  },
  "xkiranj/linux-command-mcp": {
    "mcpServers": {
      "server-name": {
        "command": "node|npx|uvx",
        "args": [
          "server-specific-arguments"
        ],
        "env": {
          "OPTIONAL_ENVIRONMENT_VARIABLES": "value"
        }
      }
    }
  },
  "isaacwasserman/mcp-snowflake-server": {
    "mcpServers": {
      "snowflake_local": {
        "command": "/absolute/path/to/uv",
        "args": [
          "--python=3.12",
          "--directory",
          "/absolute/path/to/mcp_snowflake_server",
          "run",
          "mcp_snowflake_server"
        ]
      }
    }
  },
  "MCP-Mirror/odysseus0_mcp-server-shell": {
    "mcpServers": {
      "shell": {
        "command": "python",
        "args": [
          "-m",
          "mcp_server_shell"
        ]
      }
    }
  },
  "HarjjotSinghh/mcp-server-postgres-multi-schema": {
    "mcpServers": {
      "postgres": {
        "command": "npx",
        "args": [
          "-y",
          "mcp-server-postgres-multi-schema",
          "postgresql://localhost/mydb",
          "public,audit"
        ]
      }
    }
  },
  "66julienmartin/MCP-server-Deepseek_R1": {
    "mcpServers": {
      "deepseek_r1": {
        "command": "node",
        "args": [
          "/path/to/deepseek-r1-mcp/build/index.js"
        ],
        "env": {
          "DEEPSEEK_API_KEY": "your-api-key"
        }
      }
    }
  },
  "hjfender/demo-mcp-server": {
    "mcpServers": {
      "blender": {
        "command": "uvx",
        "args": [
          "blender-mcp"
        ]
      }
    }
  },
  "MCP-Mirror/plurigrid_juvix-mcp-server": {
    "mcpServers": {
      "cli-mcp-server": {
        "command": "uvx",
        "args": [
          "cli-mcp-server"
        ],
        "env": {
          "ALLOWED_DIR": "</your/desired/dir>",
          "ALLOWED_COMMANDS": "ls,cat,pwd,echo",
          "ALLOWED_FLAGS": "-l,-a,--help,--version",
          "MAX_COMMAND_LENGTH": "1024",
          "COMMAND_TIMEOUT": "30"
        }
      }
    }
  },
  "win4r/browser-use-MCP-Server": {
    "mcpServers": {
      "browser-use": {
        "command": "/path/to/browser-use/build/index.js"
      }
    }
  },
  "landicefu/mcp-client-configuration-server": {
    "mcpServers": {
      "mcp-client-configuration": {
        "command": "npx",
        "args": [
          "-y",
          "@landicefu/mcp-client-configuration-server"
        ],
        "env": {},
        "disabled": false,
        "alwaysAllow": []
      }
    }
  },
  "MCP-Mirror/GongRzhe_TRAVEL-PLANNER-MCP-Server": {
    "mcpServers": {
      "travel-planner": {
        "command": "node",
        "args": [
          "path/to/dist/index.js"
        ],
        "env": {
          "GOOGLE_MAPS_API_KEY": "your_google_maps_api_key"
        }
      }
    }
  },
  "nwiizo/tfmcp": {
    "mcpServers": {
      "tfmcp": {
        "command": "/path/to/your/tfmcp",
        "args": [
          "mcp"
        ],
        "env": {
          "HOME": "/Users/yourusername",
          "PATH": "/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin",
          "TERRAFORM_DIR": "/path/to/your/terraform/project"
        }
      }
    }
  },
  "StuMason/get-mcp-keys": {
    "mcpServers": {
      "firecrawl": {
        "command": "npx",
        "args": [
          "@masonator/get-mcp-keys",
          "npx",
          "-y",
          "firecrawl-mcp"
        ]
      }
    }
  },
  "ghubnerr/Notion-MCP": {
    "mcpServers": {
      "notion": {
        "command": "node",
        "args": [
          "/path/to/notion-mcp-server/build/index.js"
        ],
        "env": {
          "NOTION_API_KEY": "your_notion_api_key_here"
        }
      }
    }
  },
  "bmorphism/penumbra-mcp": {
    "mcpServers": {
      "penumbra-mcp": {
        "command": "node",
        "args": [
          "/Users/barton/infinity-topos/penumbra-mcp/build/index.js"
        ],
        "env": {
          "PENUMBRA_NODE_URL": "https://rpc.penumbra.zone",
          "PENUMBRA_NETWORK": "mainnet",
          "PENUMBRA_CHAIN_ID": "penumbra-1",
          "PENUMBRA_REQUEST_TIMEOUT": "30000",
          "PENUMBRA_REQUEST_RETRIES": "5",
          "PENUMBRA_BLOCK_TIME": "6000",
          "PENUMBRA_EPOCH_DURATION": "100",
          "PENUMBRA_DEX_BATCH_INTERVAL": "60000",
          "PENUMBRA_DEX_MIN_LIQUIDITY": "1000",
          "PENUMBRA_DEX_MAX_PRICE_IMPACT": "0.05",
          "PENUMBRA_GOVERNANCE_VOTING_PERIOD": "1209600000",
          "PENUMBRA_GOVERNANCE_MIN_DEPOSIT": "100000"
        }
      }
    }
  },
  "hyperbrowserai/mcp": {
    "mcpServers": {
      "hyperbrowser": {
        "command": "npx",
        "args": [
          "--yes",
          "hyperbrowser-mcp"
        ],
        "env": {
          "HYPERBROWSER_API_KEY": "your-api-key"
        }
      }
    }
  },
  "g0t4/mcp-server-commands": {
    "mcpServers": {
      "mcp-server-commands": {
        "command": "/path/to/mcp-server-commands/build/index.js"
      }
    }
  },
  "Abiorh001/mcp_connect": {
    "LLM": {
      "model": "gpt-4o-mini",
      "temperature": 0.5,
      "max_tokens": 1000,
      "top_p": 0,
      "frequency_penalty": 0,
      "presence_penalty": 0
    },
    "mcpServers": {
      "server-name": {
        "command": "python",
        "args": [
          "mcp-server.py"
        ],
        "env": {
          "API_KEY": "value"
        }
      }
    }
  },
  "felores/placid-mcp-server": {
    "mcpServers": {
      "placid": {
        "command": "node",
        "args": [
          "path/to/placid-mcp-server/build/index.js"
        ],
        "env": {
          "PLACID_API_TOKEN": "your-api-token"
        }
      }
    }
  },
  "lugondev/bsc-testnet-mcp-servers": {
    "mcpServers": {
      "evm-mcp-sse": {
        "url": "http://localhost:3001/sse"
      }
    }
  },
  "lostintangent/gistpad-mcp": {
    "mcpServers": {
      "gistpad": {
        "command": "npx",
        "args": [
          "-y",
          "gistpad-mcp"
        ],
        "env": {
          "GITHUB_TOKEN": "<YOUR_PAT>"
        }
      }
    }
  },
  "afshawnlotfi/mcp-configurable-puppeteer": {
    "mcpServers": {
      "puppeteer": {
        "command": "npx",
        "args": [
          "-y",
          "github:afshawnlotfi/mcp-configurable-puppeteer#main"
        ]
      }
    }
  },
  "olostep/olostep-mcp-server": {
    "mcpServers": {
      "mcp-server-olostep": {
        "command": "npx",
        "args": [
          "-y",
          "olostep-mcp"
        ],
        "env": {
          "OLOSTEP_API_KEY": "YOUR_API_KEY_HERE"
        }
      }
    }
  },
  "LaubPlusCo/mcp-webdav-server": {
    "mcpServers": {
      "webdav": {
        "command": "node",
        "args": [
          "<path to repository>/dist/index.js"
        ],
        "env": {
          "WEBDAV_ROOT_URL": "<WEBDAV_ROOT_URL>",
          "WEBDAV_ROOT_PATH": "<WEBDAV_ROOT_PATH>",
          "WEBDAV_USERNAME": "<WEBDAV_USERNAME>",
          "WEBDAV_PASSWORD": "<WEBDAV_PASSWORD>",
          "WEBDAV_AUTH_ENABLED": "true|false"
        }
      }
    }
  },
  "MCP-Mirror/metoro-io_metoro-mcp-server": {
    "mcpServers": {
      "metoro-mcp-server": {
        "command": "<your path to Metoro MCP server go executable>/metoro-mcp-server",
        "args": [],
        "env": {
          "METORO_AUTH_TOKEN": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjdXN0b21lcklkIjoiOThlZDU1M2QtYzY4ZC00MDRhLWFhZjItNDM2ODllNWJiMGUzIiwiZW1haWwiOiJ0ZXN0QGNocmlzYmF0dGFyYmVlLmNvbSIsImV4cCI6MTgyMTI0NzIzN30.7G6alDpcZh_OThYj293Jce5rjeOBqAhOlANR_Fl5auw",
          "METORO_API_URL": "https://demo.us-east.metoro.io"
        }
      }
    }
  },
  "suekou/mcp-notion-server": {
    "mcpServers": {
      "notion": {
        "command": "node",
        "args": [
          "your-built-file-path"
        ],
        "env": {
          "NOTION_API_TOKEN": "your-integration-token",
          "NOTION_MARKDOWN_CONVERSION": "true"
        }
      }
    }
  },
  "Badhansen/notion-mcp": {
    "mcpServers": {
      "notion-mcp": {
        "command": "uv",
        "args": [
          "--directory",
          "/Users/username/Projects/Python/notion-mcp/src",
          "run",
          "server.py"
        ]
      }
    }
  },
  "cristip73/MCP-email-server": {
    "mcpServers": {
      "email-server": {
        "command": "node",
        "args": [
          "/path/to/email-server/build/index.js"
        ],
        "env": {
          "TIME_ZONE": "GMT+2",
          "DEFAULT_ATTACHMENTS_FOLDER": "/Users/username/CLAUDE/Attachments"
        }
      }
    }
  },
  "maoxiaoke/mcp-media-processor": {
    "mcpServers": {
      "mediaProcessor": {
        "command": "npx",
        "args": [
          "-y",
          "mcp-media-processor@latest"
        ]
      }
    }
  },
  "MCP-100/stock-market-server": {
    "mcpServers": {
      "stock-market-server": {
        "command": "/path/to/stock-market-server/build/index.js"
      }
    }
  },
  "lingster/mcp-llm": {
    "mcpServers": {
      "brave-search": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-brave-search"
        ],
        "env": {
          "BRAVE_API_KEY": "your-api-key-here"
        }
      }
    }
  },
  "felores/airtable-mcp-server": {
    "mcpServers": {
      "airtable": {
        "command": "node",
        "args": [
          "/path/to/airtable-mcp-server/dist/index.js"
        ],
        "env": {
          "AIRTABLE_API_KEY": "your_api_key_here"
        }
      }
    }
  },
  "mekanixms/MCPTimeServer": {
    "mcpServers": {
      "Time Server": {
        "command": "/path/to/python",
        "args": [
          "/path/to/timeserver.py"
        ],
        "env": {
          "TIMEZONE": "America/New_York"
        }
      }
    }
  },
  "mashriram/azure_mcp_server": {
    "mcpServers": {
      "mcp-server-azure": {
        "command": "uv",
        "args": [
          "--directory",
          "/path/to/repo/azure-mcp-server",
          "run",
          "azure-mcp-server"
        ]
      }
    }
  },
  "MCP-Mirror/PhialsBasement_mcp-github-server-plus": {
    "mcpServers": {
      "github": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-github"
        ],
        "env": {
          "GITHUB_PERSONAL_ACCESS_TOKEN": "<YOUR_TOKEN>"
        }
      }
    }
  },
  "Taxuspt/garmin_mcp": {
    "mcpServers": {
      "garmin": {
        "command": "python",
        "args": [
          "<path to>/garmin_mcp/garmin_mcp_server.py"
        ]
      }
    }
  },
  "usegranthq/mcp-server": {
    "mcpServers": {
      "usegrant": {
        "command": "npx",
        "args": [
          "-y",
          "@usegrant/mcp-server"
        ],
        "env": {
          "USEGRANT_API_KEY": "your_api_key_here"
        }
      }
    }
  },
  "w-jeon/mcp-servers": {
    "mcpServers": {
      "filesystem": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-filesystem",
          "/path/to/allowed/files"
        ]
      },
      "git": {
        "command": "uvx",
        "args": [
          "mcp-server-git",
          "--repository",
          "path/to/git/repo"
        ]
      },
      "github": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-github"
        ],
        "env": {
          "GITHUB_PERSONAL_ACCESS_TOKEN": "<YOUR_TOKEN>"
        }
      },
      "postgres": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-postgres",
          "postgresql://localhost/mydb"
        ]
      }
    }
  },
  "charles-adedotun/notifications-mcp-server": {
    "mcpServers": [
      {
        "notify-user": {
          "command": "uv",
          "args": [
            "run",
            "--with",
            "fastmcp",
            "fastmcp",
            "run",
            "/path/to/server.py"
          ]
        }
      }
    ]
  },
  "psalzman/mcp-openfec": {
    "mcpServers": {
      "openfec": {
        "command": "node",
        "args": [
          "/absolute/path/to/mcp-openfec/build/server.js"
        ],
        "env": {
          "OPENFEC_API_KEY": "your_api_key_here"
        },
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "yangkyeongmo/mcp-server-openmetadata": {
    "mcpServers": {
      "mcp-server-openmetadata": {
        "command": "uv",
        "args": [
          "--directory",
          "/path/to/mcp-server-openmetadata",
          "run",
          "mcp-server-openmetadata"
        ],
        "env": {
          "OPENMETADATA_HOST": "https://your-openmetadata-host",
          "OPENMETADATA_USERNAME": "your-username",
          "OPENMETADATA_PASSWORD": "your-password"
        }
      }
    }
  },
  "abel9851/mcp-server-mariadb": {
    "mcpServers": {
      "mcp_server_mariadb": {
        "command": "/PATH/TO/uv",
        "args": [
          "--directory",
          "/YOUR/SOURCE/PATH/mcp-server-mariadb/src/mcp_server_mariadb",
          "run",
          "server.py"
        ],
        "env": {
          "MARIADB_HOST": "127.0.0.1",
          "MARIADB_USER": "USER",
          "MARIADB_PASSWORD": "PASSWORD",
          "MARIADB_DATABASE": "DATABASE",
          "MARIADB_PORT": "3306"
        }
      }
    }
  },
  "theposch/gmail-mcp": {
    "mcpServers": {
      "gmail": {
        "command": "uv",
        "args": [
          "--directory",
          "/absolute/path/to/gmail-mcp",
          "run",
          "gmail",
          "--creds-file-path",
          "/absolute/path/to/credentials.json",
          "--token-path",
          "/absolute/path/to/tokens.json"
        ]
      }
    }
  },
  "nacgarg/bazel-mcp-server": {
    "mcpServers": {
      "bazel": {
        "command": "npx",
        "args": [
          "-y",
          "github:nacgarg/bazel-mcp-server",
          "--bazel_path",
          "/absolute/path/to/your/bazel/binary",
          "--workspace_path",
          "/absolute/path/to/your/bazel/workspace"
        ]
      }
    }
  },
  "c0h1b4/mssql-mcp-server": {
    "mcpServers": {
      "mssql": {
        "command": "mssql-mcp-server",
        "env": {
          "MSSQL_CONNECTION_STRING": "Server=localhost;Database=master;User Id=sa;Password=yourpassword;",
          "MSSQL_HOST": "localhost",
          "MSSQL_PORT": "1433",
          "MSSQL_DATABASE": "master",
          "MSSQL_USER": "sa",
          "MSSQL_PASSWORD": "yourpassword",
          "MSSQL_ENCRYPT": "false",
          "MSSQL_TRUST_SERVER_CERTIFICATE": "true"
        }
      }
    }
  },
  "kunjanshah0811/MCP-Terminal-Server": {
    "mcpServers": {
      "terminal": {
        "command": "C:\\path\\to\\uv.exe",
        "args": [
          "--directory",
          "D:\\path\\to\\mcp\\servers\\terminal_server",
          "run",
          "terminal_server.py"
        ]
      }
    }
  },
  "tuberrabbit/mcp-server-notifier": {
    "mcpServers": {
      "notifier": {
        "command": "npx",
        "args": [
          "-y",
          "mcp-server-notifier"
        ],
        "env": {
          "WEBHOOK_URL": "https://ntfy.sh/webhook-url-example",
          "WEBHOOK_TYPE": "ntfy"
        }
      }
    }
  },
  "okooo5km/unsplash-mcp-server-swift": {
    "mcpServers": {
      "unsplash": {
        "command": "unsplash-mcp-server",
        "env": {
          "UNSPLASH_ACCESS_KEY": "${YOUR_ACCESS_KEY}"
        }
      }
    }
  },
  "kukapay/uniswap-trader-mcp": {
    "mcpServers": {
      "Uniswap-Trader-MCP": {
        "command": "node",
        "args": [
          "path/to/uniswap-trader-mcp/server/index.js"
        ],
        "env": {
          "INFURA_KEY": "your infura key",
          "WALLET_PRIVATE_KEY": "your private key"
        }
      }
    }
  },
  "MCP-Mirror/aallsbury_qb-time-mcp-server": {
    "globalShortcut": "Ctrl+Q",
    "mcpServers": {
      "qb-time-tools": {
        "command": "python",
        "args": [
          "./qb-time-mcp-server/main.py"
        ],
        "env": {
          "QB_TIME_ACCESS_TOKEN": "your_quickbooks_time_access_token_here"
        }
      }
    }
  },
  "SouravKumarBarman/twitter-mcp-server": {
    "mcpServers": {
      "Twitter Assistant": {
        "command": "npm",
        "args": [
          "--prefix",
          "/full/path/to/twitter-mcp-server.js",
          "start"
        ]
      }
    }
  },
  "dandeliongold/mcp-decent-sampler-drums": {
    "mcpServers": {
      "decent-sampler-drums": {
        "command": "npx",
        "args": [
          "-y",
          "@dandeliongold/mcp-decent-sampler-drums"
        ],
        "env": {}
      }
    }
  },
  "winor30/mcp-server-datadog": {
    "mcpServers": {
      "mcp-server-datadog": {
        "command": "npx",
        "args": [
          "-y",
          "@winor30/mcp-server-datadog"
        ],
        "env": {
          "DATADOG_API_KEY": "<YOUR_API_KEY>",
          "DATADOG_APP_KEY": "<YOUR_APP_KEY>",
          "DATADOG_SITE": "<YOUR_SITE>"
        }
      }
    }
  },
  "katsuhirohonda/mcp-backlog-server": {
    "mcpServers": {
      "mcp-backlog-server": {
        "command": "/path/to/mcp-backlog-server/build/index.js",
        "env": {
          "BACKLOG_API_KEY": "your-api-key",
          "BACKLOG_SPACE_URL": "https://your-space.backlog.com"
        }
      }
    }
  },
  "isaacphi/mcp-filesystem": {
    "mcpServers": {
      "filesystem": {
        "command": "/full/path/to/your/mcp-filesystem/mcp-filesystem",
        "args": [
          "--workspace",
          "/path/to/repository"
        ],
        "env": {
          "DEBUG": "1"
        }
      }
    }
  },
  "modelcontextprotocol/servers": {
    "mcpServers": {
      "postgres": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-postgres",
          "postgresql://localhost/mydb"
        ]
      }
    }
  },
  "Arenukvern/mcp_flutter": {
    "mcpServers": {
      "flutter-inspector": {
        "command": "node",
        "args": [
          "/path/to/your/cloned/flutter-inspector/mcp_server/build/index.js"
        ],
        "env": {
          "PORT": "3334",
          "LOG_LEVEL": "critical"
        },
        "disabled": false
      }
    }
  },
  "ian-cowley/MCPSqlServer": {
    "mcpServers": {
      "sqlMcpService": {
        "command": "path/to/your/MCPSqlServer.exe",
        "args": [],
        "description": "SQL Server MCP Service"
      }
    }
  },
  "fatwang2/search1api-mcp": {
    "mcpServers": {
      "search1api": {
        "command": "npx",
        "args": [
          "-y",
          "search1api-mcp"
        ],
        "env": {
          "SEARCH1API_KEY": "YOUR_SEARCH1API_KEY"
        }
      }
    }
  },
  "carterlasalle/mac_messages_mcp": {
    "mcpServers": {
      "messages": {
        "command": "uvx",
        "args": [
          "mac-messages-mcp"
        ]
      }
    }
  },
  "hiromitsusasaki/raindrop-io-mcp-server": {
    "mcpServers": {
      "raindrop": {
        "command": "node",
        "args": [
          "PATH_TO_BUILD/index.js"
        ],
        "env": {
          "RAINDROP_TOKEN": "your_access_token_here"
        }
      }
    }
  },
  "blazickjp/shell-mcp-server": {
    "mcpServers": {
      "shell-mcp-server": {
        "command": "uv",
        "args": [
          "--directory",
          "/path/to/shell-mcp-server",
          "run",
          "shell-mcp-server",
          "/path/to/allowed/dir1",
          "/path/to/allowed/dir2",
          "--shell",
          "bash",
          "/bin/bash",
          "--shell",
          "zsh",
          "/bin/zsh"
        ]
      }
    }
  },
  "ravenwits/mcp-server-arangodb": {
    "mcpServers": {
      "arango": {
        "command": "node",
        "args": [
          "/path/to/arango-server/build/index.js"
        ],
        "env": {
          "ARANGO_URL": "your_database_url",
          "ARANGO_DATABASE": "your_database_name",
          "ARANGO_USERNAME": "your_username",
          "ARANGO_PASSWORD": "your_password"
        }
      }
    }
  },
  "MCP-Mirror/Nazruden_clickup-mcp-server": {
    "mcpServers": {
      "clickup": {
        "command": "npx",
        "args": [
          "@mcp/clickup-server"
        ],
        "env": {
          "CLICKUP_CLIENT_ID": "your_client_id",
          "CLICKUP_CLIENT_SECRET": "your_client_secret",
          "CLICKUP_REDIRECT_URI": "http://localhost:3000/oauth/callback"
        }
      }
    }
  },
  "amurata/MCPServer": {
    "mcpServers": {
      "github.com/modelcontextprotocol/servers/tree/main/src/github": {
        "command": "/Users/username/.volta/bin/npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-github"
        ],
        "env": {
          "GITHUB_PERSONAL_ACCESS_TOKEN": "<YOUR_TOKEN>"
        },
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "JayArrowz/mcp-figma": {
    "mcpServers": {
      "figma": {
        "command": "node",
        "args": [
          "/path/to/mcp-figma/dist/index.js",
          "--figma-token",
          "your_figma_api_key"
        ]
      }
    }
  },
  "gabrimatic/mcp-web-search-tool": {
    "mcpServers": {
      "mcp-web-search": {
        "command": "node",
        "args": [
          "/path/to/your/mcp-web-search-tool/build/index.js"
        ]
      }
    }
  },
  "MCP-Mirror/ZubeidHendricks_youtube-mcp-server": {
    "mcpServers": {
      "youtube": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-youtube"
        ],
        "env": {
          "YOUTUBE_API_KEY": "<YOUR_API_KEY>"
        }
      }
    }
  },
  "GreptimeTeam/greptimedb-mcp-server": {
    "mcpServers": {
      "greptimedb": {
        "command": "uv",
        "args": [
          "--directory",
          "/path/to/greptimedb-mcp-server",
          "run",
          "-m",
          "greptimedb_mcp_server.server"
        ],
        "env": {
          "GREPTIMEDB_HOST": "localhost",
          "GREPTIMEDB_PORT": "4002",
          "GREPTIMEDB_USER": "root",
          "GREPTIMEDB_PASSWORD": "",
          "GREPTIMEDB_DATABASE": "public"
        }
      }
    }
  },
  "MCP-Mirror/T1nker-1220_memories-with-lessons-mcp-server": {
    "mcpServers": {
      "memory": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-memory"
        ],
        "env": {
          "MEMORY_FILE_PATH": "/path/to/custom/memory.json"
        }
      }
    }
  },
  "xiangma9712/mysql-mcp-server": {
    "mcpServers": {
      "mysql": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "--add-host=host.docker.internal:host-gateway",
          "--env-file",
          "/Users/username/.mcp/.env",
          "ghcr.io/xiangma9712/mcp/mysql"
        ]
      }
    }
  },
  "msaelices/ultimate-team-mcp-server": {
    "mcpServers": {
      "ultimate_mcp_server": {
        "command": "ultimate-team-mcp-server",
        "environment": {
          "SQLITE_URI": "sqlitecloud://host:port/database?apikey=key"
        }
      }
    }
  },
  "insecurepla/code-sandbox-mcp": {
    "mcpServers": {
      "code-sandbox-mcp": {
        "command": "C:\\path\\to\\code-sandbox-mcp.exe",
        "args": [],
        "env": {}
      }
    }
  },
  "KS-GEN-AI/confluence-mcp-server": {
    "mcpServers": {
      "Confluence communication server": {
        "command": "node",
        "args": [
          "/PATH_TO_THE_PROJECT/build/index.js"
        ],
        "env": {
          "CONFLUENCE_URL": "https://XXXXXXXX.atlassian.net/wiki",
          "CONFLUENCE_API_MAIL": "Your email",
          "CONFLUENCE_API_KEY": "KEY_FROM: https://id.atlassian.com/manage-profile/security/api-tokens"
        }
      }
    }
  },
  "DocNR/repo-analyzer-mcp": {
    "mcpServers": {
      "repo-analyzer": {
        "command": "node",
        "args": [
          "/absolute/path/to/repo-analyzer-mcp/dist/index.js"
        ],
        "transport": "stdio",
        "env": {
          "NODE_ENV": "production",
          "DEFAULT_REPO_PATH": "/path/to/default/repository"
        }
      }
    }
  },
  "m4s1t4/webSearch-Tools": {
    "mcpServers": {
      "websearch": {
        "command": "uv",
        "args": [
          "--directory",
          "D:\\ABSOLUTE\\PATH\\TO\\WebSearch",
          "run",
          "main.py"
        ]
      }
    }
  },
  "shimayuz/note-mcp-server": {
    "mcpServers": {
      "note-api": {
        "command": "node",
        "args": [
          "/Users/heavenlykiss0820/noteMCP/build/note-mcp-server.js"
        ]
      }
    }
  },
  "badger3000/okx-mcp-server": {
    "mcpServers": {
      "okx": {
        "command": "node",
        "args": [
          "/absolute/path/to/okx-mcp-server/build/index.js"
        ],
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "Cam10001110101/mcp-server-outlook-email": {
    "mcpServers": {
      "outlook-email": {
        "command": "C:/Users/username/path/to/mcp-server-outlook-email/.venv/Scripts/python",
        "args": [
          "C:/Users/username/path/to/mcp-server-outlook-email/src/mcp_server.py"
        ],
        "env": {
          "MONGODB_URI": "mongodb://localhost:27017/MCP?authSource=admin",
          "SQLITE_DB_PATH": "C:\\Users\\username\\path\\to\\mcp-server-outlook-email\\data\\emails.db",
          "EMBEDDING_BASE_URL": "http://localhost:11434",
          "EMBEDDING_MODEL": "nomic-embed-text",
          "COLLECTION_NAME": "outlook-emails",
          "PROCESS_DELETED_ITEMS": "false"
        }
      }
    }
  },
  "MCP-Mirror/bmorphism_anti-bullshit-mcp-server": {
    "mcpServers": {
      "anti-bullshit": {
        "command": "node",
        "args": [
          "/path/to/anti-bullshit-mcp-server/build/index.js"
        ]
      }
    }
  },
  "mcollina/mcp-github-notifications": {
    "mcpServers": {
      "github-notifications": {
        "command": "node",
        "args": [
          "/absolute/path/to/github-notifications-mcp-server/build/index.js"
        ],
        "env": {
          "GITHUB_TOKEN": "your_github_personal_access_token_here"
        }
      }
    }
  },
  "crazyrabbitLTC/mcp-coingecko-server": {
    "mcpServers": {
      "coingecko": {
        "command": "node",
        "args": [
          "/path/to/coingecko-server/build/index.js"
        ],
        "env": {
          "COINGECKO_API_KEY": "your-api-key-here"
        }
      }
    }
  },
  "cohnen/mcp-google-ads": {
    "mcpServers": {
      "googleAdsServer": {
        "command": "/FULL/PATH/TO/mcp-google-ads-main/.venv/bin/python",
        "args": [
          "/FULL/PATH/TO/mcp-google-ads-main/google_ads_server.py"
        ],
        "env": {
          "GOOGLE_ADS_CREDENTIALS_PATH": "/FULL/PATH/TO/mcp-google-ads-main/service_account_credentials.json",
          "GOOGLE_ADS_DEVELOPER_TOKEN": "YOUR_DEVELOPER_TOKEN_HERE",
          "GOOGLE_ADS_LOGIN_CUSTOMER_ID": "YOUR_MANAGER_ACCOUNT_ID_HERE"
        }
      }
    }
  },
  "qiangge2008/weather-mcp-server": {
    "mcpServers": {
      "weather": {
        "command": "node",
        "args": [
          "\u00e4\u00bd\u00a0\u00e7\u009a\u0084\u00e5\u00ae\u008c\u00e6\u0095\u00b4\u00e8\u00b7\u00af\u00e5\u00be\u0084/weather-mcp-server/build/index.js"
        ],
        "env": {
          "QWEATHER_API_KEY": "\u00e4\u00bd\u00a0\u00e7\u009a\u0084\u00e5\u0092\u008c\u00e9\u00a3\u008e\u00e5\u00a4\u00a9\u00e6\u00b0\u0094API\u00e5\u00af\u0086\u00e9\u0092\u00a5",
          "SENIVERSE_API_KEY": "\u00e4\u00bd\u00a0\u00e7\u009a\u0084\u00e5\u00bf\u0083\u00e7\u009f\u00a5\u00e5\u00a4\u00a9\u00e6\u00b0\u0094API\u00e5\u00af\u0086\u00e9\u0092\u00a5"
        }
      }
    }
  },
  "MCP-Mirror/Laksh-star_mcp-server-tmdb": {
    "mcpServers": {
      "tmdb": {
        "command": "/full/path/to/dist/index.js",
        "env": {
          "TMDB_API_KEY": "your_api_key_here"
        }
      }
    }
  },
  "ysfscream/mqttx-mcp-sse-server": {
    "mcpServers": {
      "mqttx-server": {
        "url": "http://localhost:4000/mqttx/sse"
      }
    }
  },
  "severity1/terraform-cloud-mcp": {
    "mcpServers": {
      "terraform-cloud-mcp": {
        "command": "/path/to/uv",
        "args": [
          "--directory",
          "/path/to/your/terraform-cloud-mcp",
          "run",
          "terraform-cloud-mcp"
        ],
        "env": {
          "TFC_TOKEN": "my token..."
        }
      }
    }
  },
  "HundunOnline/mcp-dingdingbot-server": {
    "mcpServers": {
      "mcp-dingdingbot-server": {
        "command": "mcp-dingdingbot-server",
        "env": {
          "DINGDING_BOT_WEBHOOK_KEY": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx",
          "DINGDING_BOT_SIGN_KEY": "SECxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
        }
      }
    }
  },
  "jango-blockchained/personal-mcp-server": {
    "mcpServers": {
      "aashari/boilerplate-mcp-server": {
        "command": "npx",
        "args": [
          "-y",
          "aashari/boilerplate-mcp-server"
        ]
      }
    }
  },
  "nlinhvu/spring-boot-bitcoin-mcp-server-2025": {
    "mcpServers": {
      "bitcoin-mcp-server": {
        "command": "java",
        "args": [
          "-jar",
          "/absolute/path/to/bitcoin-mcp-server-0.0.1-SNAPSHOT.jar"
        ]
      }
    }
  },
  "yhzion/comment-stripper-mcp": {
    "mcpServers": {
      "comment-stripper": {
        "command": "/\u00ec\u00a0\u0088\u00eb\u008c\u0080/\u00ea\u00b2\u00bd\u00eb\u00a1\u009c/node",
        "args": [
          "/\u00ec\u00a0\u0088\u00eb\u008c\u0080/\u00ea\u00b2\u00bd\u00eb\u00a1\u009c/comment-stripper-mcp/build/index.js"
        ]
      }
    }
  },
  "recallnet/trading-simulator-mcp": {
    "mcpServers": {
      "trading-simulator-mcp": {
        "name": "Trading Simulator MCP",
        "type": "command",
        "command": "node",
        "args": [
          "/path/to/trading-simulator-mcp/dist/index.js"
        ],
        "env": {
          "TRADING_SIM_API_KEY": "your_api_key_here",
          "TRADING_SIM_API_URL": "http://localhost:3000",
          "DEBUG": "true"
        }
      }
    }
  },
  "agentience/tribal_mcp_server": {
    "mcpServers": [
      {
        "name": "tribal",
        "url": "http://localhost:5000"
      }
    ]
  },
  "descope-sample-apps/descope-mcp-server": {
    "mcpServers": {
      "descope": {
        "command": "node",
        "args": [
          "/path/to/descope-mcp-server/build/index.js"
        ],
        "env": {
          "DESCOPE_PROJECT_ID": "your-descope-project-id-here",
          "DESCOPE_MANAGEMENT_KEY": "your-descope-management-key-here"
        }
      }
    }
  },
  "andybrandt/mcp-simple-openai-assistant": {
    "mcpServers": {
      "openai-assistant": {
        "command": "C:\\Users\\YOUR_USERNAME\\AppData\\Local\\Programs\\Python\\Python311\\python.exe",
        "args": [
          "-m",
          "mcp_simple_openai_assistant"
        ],
        "env": {
          "OPENAI_API_KEY": "your-api-key-here"
        }
      }
    }
  },
  "abutbul/gatherings-mcp": {
    "mcpServers": {
      "gatherings": {
        "command": "node",
        "args": [
          "/path/to/gatherings-server/build/index.js"
        ],
        "env": {
          "GATHERINGS_DB_PATH": "gatherings.db",
          "GATHERINGS_SCRIPT": "/path/to/gatherings-server/gatherings.py"
        },
        "disabled": false,
        "autoApprove": [],
        "alwaysAllow": [
          "create_gathering",
          "add_expense",
          "calculate_reimbursements",
          "record_payment",
          "rename_member",
          "show_gathering",
          "list_gatherings",
          "close_gathering",
          "delete_gathering",
          "add_member",
          "remove_member"
        ],
        "timeout": 300
      }
    }
  },
  "MCP-Mirror/ergut_mcp-bigquery-server": {
    "mcpServers": {
      "bigquery": {
        "command": "node",
        "args": [
          "/path/to/your/clone/mcp-bigquery-server/dist/index.js",
          "--project-id",
          "your-project-id",
          "--location",
          "us-central1",
          "--key-file",
          "/path/to/service-account-key.json"
        ]
      }
    }
  },
  "irvinebroque/remote-mcp-server-f": {
    "mcpServers": {
      "math": {
        "command": "npx",
        "args": [
          "mcp-remote",
          "https://worker-name.account-name.workers.dev/sse"
        ]
      }
    }
  },
  "scorzeth/anki-mcp-server": {
    "mcpServers": {
      "anki-server": {
        "command": "/path/to/anki-server/build/index.js"
      }
    }
  },
  "tomekkorbak/oura-mcp-server": {
    "mcpServers": {
      "oura": {
        "command": "uvx",
        "args": [
          "oura-mcp-server"
        ],
        "env": {
          "OURA_API_TOKEN": "YOUR_OURA_API_TOKEN"
        }
      }
    }
  },
  "amidabuddha/unichat-mcp-server": {
    "mcpServers": {
      "unichat-mcp-server": {
        "command": "uvx",
        "args": [
          "unichat-mcp-server"
        ],
        "env": {
          "UNICHAT_MODEL": "SELECTED_UNICHAT_MODEL",
          "UNICHAT_API_KEY": "YOUR_UNICHAT_API_KEY"
        }
      }
    }
  },
  "Sunwood-ai-labs/duckduckgo-web-search": {
    "mcpServers": {
      "duckduckgo-web-search": {
        "command": "/path/to/duckduckgo-web-search/build/index.js"
      }
    }
  },
  "MCP-Mirror/alexwohletz_language-server-mcp": {
    "mcpServers": {
      "language-server-mcp": {
        "command": "/path/to/language-server-mcp/build/index.js"
      }
    }
  },
  "MCP-Mirror/anpigon_mcp-server-obsidian-omnisearch": {
    "mcpServers": {
      "obsidian-omnisearch": {
        "command": "uvx",
        "args": [
          "mcp-server-obsidian-omnisearch",
          "/path/to/your/obsidian/vault"
        ]
      }
    }
  },
  "dsomel21/weather-mcp-server": {
    "mcpServers": {
      "weather": {
        "command": "uv",
        "args": [
          "--directory",
          "/ABSOLUTE/PATH/TO/PARENT/FOLDER/weather",
          "run",
          "weather.py"
        ]
      }
    }
  },
  "saptechengineer/mcp": {
    "mcpServers": {
      "weather": {
        "command": "C:/Users/yourusername/AppData/Local/Programs/Python/Python311/Scripts/uv",
        "args": [
          "--directory",
          "C:/path/to/your/MCP/weather",
          "run",
          "weather.py"
        ]
      },
      "linkedin_profile_scraper": {
        "command": "C:/Users/yourusername/AppData/Local/Programs/Python/Python311/Scripts/uv",
        "args": [
          "--directory",
          "C:/path/to/your/MCP/linkedin",
          "run",
          "linkedin.py"
        ]
      }
    }
  },
  "tinyfish-io/agentql-mcp": {
    "mcpServers": {
      "agentql": {
        "command": "/path/to/agentql-mcp/dist/index.js",
        "env": {
          "AGENTQL_API_KEY": "YOUR_API_KEY"
        }
      }
    }
  },
  "tedlikeskix/alpaca-mcp-server": {
    "mcpServers": {
      "alpaca": {
        "command": "python",
        "args": [
          "/path/to/alpaca_mcp_server.py"
        ],
        "env": {
          "API_KEY_ID": "your_alpaca_api_key",
          "API_SECRET_KEY": "your_alpaca_secret_key"
        }
      }
    }
  },
  "QuantGeekDev/mcp-filesystem": {
    "mcpServers": {
      "filesystem": {
        "command": "npx",
        "args": [
          "filesystem"
        ]
      }
    }
  },
  "LukePrior/mcp-sondehub": {
    "mcpServers": {
      "github": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-github"
        ],
        "env": {
          "GITHUB_PERSONAL_ACCESS_TOKEN": "<YOUR_TOKEN>"
        }
      }
    }
  },
  "punkpeye/fastmcp": {
    "mcpServers": {
      "my-mcp-server": {
        "command": "npx",
        "args": [
          "tsx",
          "/PATH/TO/YOUR_PROJECT/src/index.ts"
        ],
        "env": {
          "YOUR_ENV_VAR": "value"
        }
      }
    }
  },
  "sawa-zen/vrchat-mcp": {
    "mcpServers": {
      "vrchat-mcp": {
        "command": "npx",
        "args": [
          "vrchat-mcp"
        ],
        "env": {
          "VRCHAT_USERNAME": "your-username",
          "VRCHAT_PASSWORD": "your-password",
          "VRCHAT_TOTP_SECRET": "your-totp-secret",
          "VRCHAT_EMAIL": "your-email@example.com"
        }
      }
    }
  },
  "andybrandt/mcp-simple-pubmed": {
    "mcpServers": {
      "simple-pubmed": {
        "command": "C:\\Users\\YOUR_USERNAME\\AppData\\Local\\Programs\\Python\\Python311\\python.exe",
        "args": [
          "-m",
          "mcp_simple_pubmed"
        ],
        "env": {
          "PUBMED_EMAIL": "your-email@example.com",
          "PUBMED_API_KEY": "your-api-key"
        }
      }
    }
  },
  "vrknetha/aisdk-mcp-bridge": {
    "mcpServers": {
      "sse-server": {
        "command": "node",
        "args": [
          "./server.js"
        ],
        "mode": "sse",
        "sseOptions": {
          "endpoint": "http://localhost:3000/events",
          "headers": {},
          "reconnectTimeout": 5000
        }
      }
    }
  },
  "azure-ai-foundry/mcp-foundry": {
    "mcpServers": {
      "azure-agent": {
        "command": "python",
        "args": [
          "-m",
          "azure_agent_mcp_server"
        ],
        "cwd": "/ABSOLUTE/PATH/TO/PARENT/FOLDER",
        "env": {
          "PYTHONPATH": "/ABSOLUTE/PATH/TO/PARENT/FOLDER",
          "PROJECT_CONNECTION_STRING": "your-project-connection-string",
          "DEFAULT_AGENT_ID": "your-default-agent-id"
        }
      }
    }
  },
  "Swayingleaves/uml-mcp-server": {
    "mcpServers": {
      "UML-MCP-Server": {
        "command": "uv",
        "args": [
          "--directory",
          "/Users/yourpath/UML-MCP-Server",
          "run",
          "uml_mcp_server.py"
        ],
        "output_dir": "/Users/yourpath/uml-output"
      }
    }
  },
  "MushroomFleet/DeepLucid3D-MCP": {
    "mcpServers": {
      "ucpf": {
        "command": "node",
        "args": [
          "path/to/DeepLucid3D-MCP/build/index.js"
        ],
        "env": {},
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "MCP-Mirror/epaproditus_google-workspace-mcp-server": {
    "mcpServers": {
      "google-workspace": {
        "command": "node",
        "args": [
          "/path/to/google-workspace-server/build/index.js"
        ],
        "env": {
          "GOOGLE_CLIENT_ID": "your_client_id",
          "GOOGLE_CLIENT_SECRET": "your_client_secret",
          "GOOGLE_REFRESH_TOKEN": "your_refresh_token"
        }
      }
    }
  },
  "identimoji/mcp-server-emojikey": {
    "mcpServers": {
      "emojikey": {
        "command": "npx",
        "args": [
          "@identimoji/mcp-server-emojikey"
        ],
        "env": {
          "EMOJIKEYIO_API_KEY": "your-api-key-from-emojikey.io",
          "MODEL_ID": "Claude-3-5-Sonnet-20241022"
        }
      }
    }
  },
  "run-llama/mcp-server-llamacloud": {
    "mcpServers": {
      "llamacloud": {
        "command": "npx",
        "args": [
          "-y",
          "@llamaindex/mcp-server-llamacloud",
          "--index",
          "10k-SEC-Tesla",
          "--description",
          "10k SEC documents from 2023 for Tesla",
          "--index",
          "10k-SEC-Apple",
          "--description",
          "10k SEC documents from 2023 for Apple"
        ],
        "env": {
          "LLAMA_CLOUD_PROJECT_NAME": "<YOUR_PROJECT_NAME>",
          "LLAMA_CLOUD_API_KEY": "<YOUR_API_KEY>"
        }
      }
    }
  },
  "amitdeshmukh/stdout-mcp-server": {
    "mcpServers": {
      "mcp-installer": {
        "command": "cmd.exe",
        "args": [
          "/c",
          "npx",
          "stdio-mcp-server"
        ]
      }
    }
  },
  "NakaokaRei/swift-mcp-gui": {
    "mcpServers": {
      "swift-mcp-gui": {
        "command": "/Users/USERNAME/.swiftpm/bin/swift-mcp-gui"
      }
    }
  },
  "RafalWilinski/mcp-apple-notes": {
    "mcpServers": {
      "local-machine": {
        "command": "/Users/<YOUR_USER_NAME>/.bun/bin/bun",
        "args": [
          "/Users/<YOUR_USER_NAME>/apple-notes-mcp/index.ts"
        ]
      }
    }
  },
  "ParasSolanki/github-mcp-server": {
    "mcpServers": {
      "github": {
        "command": "npx",
        "args": [
          "-y",
          "github-mcp-server"
        ],
        "env": {
          "GITHUB_PERSONAL_ACCESS_TOKEN": "your_personal_github_access_token"
        }
      }
    }
  },
  "ualUsham/mcp-github": {
    "mcpServers": {
      "gh": {
        "command": "node",
        "args": [
          "absolute\\path\\to\\your\\index.js\\file"
        ],
        "env": {
          "GITHUB_TOKEN": "your-github-personal-access-token"
        }
      }
    }
  },
  "box-community/mcp-server-box": {
    "mcpServers": {
      "mcp-server-box": {
        "command": "uv",
        "args": [
          "--directory",
          "/Users/anovotny/Desktop/mcp-server-box",
          "run",
          "src/mcp_server_box.py"
        ]
      }
    }
  },
  "youngsu5582/mcp-server-mysql": {
    "mcpServers": {
      "mysql": {
        "command": "uv",
        "args": [
          "--directory",
          "path/to/mysql_mcp_server",
          "run",
          "mysql_mcp_server"
        ],
        "env": {
          "MYSQL_HOST": "localhost",
          "MYSQL_PORT": "3306",
          "MYSQL_USER": "your_username",
          "MYSQL_PASSWORD": "your_password",
          "MYSQL_DATABASE": "your_database"
        }
      }
    }
  },
  "alejandro-ao/mcp-server-example": {
    "mcpServers": {
      "mcp-server": {
        "command": "uv",
        "args": [
          "--directory",
          "/ABSOLUTE/PATH/TO/YOUR/mcp-server",
          "run",
          "main.py"
        ]
      }
    }
  },
  "honey-guard/anchor-mcp": {
    "mcpServers": {
      "security_check_program": {
        "command": "security_check_program",
        "args": [
          "--mcp"
        ]
      },
      "security_check_file": {
        "command": "security_check_file",
        "args": [
          "--mcp"
        ]
      }
    }
  },
  "WillDent/pipedrive-mcp-server": {
    "mcpServers": {
      "pipedrive": {
        "command": "npx",
        "args": [
          "-y",
          "@smithery/cli@latest",
          "run",
          "@your-org/pipedrive-mcp-server",
          "--config",
          "{\"pipedriveApiToken\":\"your_api_token_here\"}"
        ]
      }
    }
  },
  "MCP-Mirror/cyanheads_atlas-mcp-server": {
    "mcpServers": {
      "atlas": {
        "command": "node",
        "args": [
          "/path/to/atlas-mcp-server/build/index.js"
        ],
        "env": {
          "ATLAS_STORAGE_DIR": "/path/to/storage/directory",
          "ATLAS_STORAGE_NAME": "atlas-tasks",
          "NODE_ENV": "production"
        }
      }
    }
  },
  "jonrad/lsp-mcp": {
    "mcpServers": {
      "lsp": {
        "command": "npx",
        "args": [
          "-y",
          "--silent",
          "git+https://github.com/jonrad/lsp-mcp",
          "--lsp",
          "npx -y --silent -p 'typescript@5.7.3' -p 'typescript-language-server@4.3.3' typescript-language-server --stdio"
        ]
      }
    }
  },
  "Szowesgad/mcp-server-semgrep": {
    "mcpServers": {
      "semgrep": {
        "command": "node",
        "args": [
          "/your_path/mcp-server-semgrep/build/index.js"
        ],
        "env": {
          "SEMGREP_APP_TOKEN": "your_semgrep_app_token"
        }
      }
    }
  },
  "peterparker57/cpp-builder-mcp-server": {
    "mcpServers": {
      "cpp-builder": {
        "command": "node",
        "args": [
          "path/to/cpp-builder-mcp-server/dist/index.js"
        ],
        "env": {}
      }
    }
  },
  "kukapay/whoami-mcp": {
    "mcpServers": {
      "whoami": {
        "command": "uv",
        "args": [
          "--directory",
          "path/to/whoami_mcp",
          "run",
          "main.py"
        ]
      }
    }
  },
  "shivam-singhal/mcp-weather-server": {
    "mcpServers": {
      "github": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-github"
        ],
        "env": {
          "GITHUB_PERSONAL_ACCESS_TOKEN": "<YOUR_TOKEN>"
        }
      }
    }
  },
  "ZbigniewTomanek/my-mcp-server": {
    "globalShortcut": "",
    "mcpServers": {
      "zbigniew-mcp": {
        "command": "/Users/zbigniewtomanek/.local/bin/uv",
        "args": [
          "run",
          "--with",
          "mcp[cli]",
          "--with",
          "marker-pdf",
          "mcp",
          "run",
          "/Users/zbigniewtomanek/PycharmProjects/my-mcp-tools/server.py"
        ]
      }
    }
  },
  "berlinbra/alpha-vantage-mcp": {
    "mcpServers": {
      "alpha-vantage-mcp": {
        "args": [
          "--directory",
          "/Users/{INSERT_USER}/YOUR/PATH/TO/alpha-vantage-mcp",
          "run",
          "alpha-vantage-mcp"
        ],
        "command": "uv",
        "env": {
          "ALPHA_VANTAGE_API_KEY": "<insert api key>"
        }
      }
    }
  },
  "OctagonAI/octagon-mcp-server": {
    "mcpServers": {
      "mcp-server-octagon": {
        "command": "npx",
        "args": [
          "-y",
          "octagon-mcp"
        ],
        "env": {
          "OCTAGON_API_KEY": "YOUR_API_KEY_HERE"
        }
      }
    }
  },
  "elliottlawson/kagi-mcp-server": {
    "mcpServers": {
      "kagi": {
        "command": "node",
        "args": [
          "ABSOLUTE_PATH_TO_REPO/build/index.js"
        ],
        "env": {
          "KAGI_API_KEY": "YOUR_API_KEY_HERE"
        }
      }
    }
  },
  "Flux159/mcp-server-kubernetes": {
    "mcpServers": {
      "mcp-server-kubernetes": {
        "command": "node",
        "args": [
          "/path/to/your/mcp-server-kubernetes/dist/index.js"
        ]
      }
    }
  },
  "MCP-Mirror/skydeckai_mcp-server-aidd": {
    "mcpServers": {
      "aidd-ai-software-development-utilities": {
        "command": "uvx",
        "args": [
          "mcp-server-aidd"
        ]
      }
    }
  },
  "rhnvrm/kite-mcp-server": {
    "mcpServers": {
      "perplexity-ask": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-perplexity-ask"
        ],
        "env": {
          "PERPLEXITY_API_KEY": "YOUR_API_KEY_HERE"
        }
      }
    }
  },
  "dazeb/wikipedia-mcp-image-crawler": {
    "mcpServers": {
      "wikipedia-mcp-server": {
        "command": "node",
        "args": [
          "/absolute/path/to/wikipedia-mcp-image-crawler/build/index.js"
        ],
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "ayeletstudioindia/unreal-analyzer-mcp": {
    "mcpServers": {
      "unreal-analyzer": {
        "command": "node",
        "args": [
          "path/to/unreal-analyzer/build/index.js"
        ],
        "env": {}
      }
    }
  },
  "MCP-Mirror/geelen_workers-mcp-server": {
    "mcpServers": {
      "<server-alias>": {
        "command": "<absolute-path-to>/node",
        "args": [
          "<project-dir>/node_modules/tsx/dist/cli.mjs",
          "<project-dir>/scripts/local-proxy.ts",
          "<server-alias>",
          "<worker-url>",
          "<entrypoint-name>"
        ]
      }
    }
  },
  "gxjansen/Transistor-MCP": {
    "mcpServers": {
      "transistor": {
        "command": "node",
        "args": [
          "path/to/Transistor-MCP/build/index.js"
        ],
        "env": {
          "TRANSISTOR_API_KEY": "your-api-key-here"
        }
      }
    }
  },
  "QuantGeekDev/fiscal-data-mcp": {
    "mcpServers": {
      "fiscal-data": {
        "command": "npx",
        "args": [
          "fiscal-data-mcp"
        ]
      }
    }
  },
  "MaxWeeden/mcp-server-template-python": {
    "mcpServers": {
      "dnsdumpster": {
        "command": "uvx",
        "args": [
          "mcp-dnsdumpster"
        ],
        "env": {
          "DNSDUMPSTER_API_KEY": "your_api_key_here"
        }
      }
    }
  },
  "MCP-Mirror/nahmanmate_postgresql-mcp-server": {
    "mcpServers": {
      "postgresql-mcp": {
        "command": "node",
        "args": [
          "/path/to/postgresql-mcp-server/build/index.js"
        ],
        "disabled": false,
        "alwaysAllow": []
      }
    }
  },
  "krzko/google-cloud-mcp": {
    "mcpServers": {
      "google-cloud-mcp": {
        "command": "node",
        "args": [
          "/Users/foo/code/google-cloud-mcp/dist/index.js"
        ],
        "env": {
          "GOOGLE_APPLICATION_CREDENTIALS": "/Users/foo/.config/gcloud/application_default_credentials.json"
        }
      }
    }
  },
  "GreatAuk/mcp-weather": {
    "mcpServers": {
      "your-server-name": {
        "command": "node",
        "args": [
          "/path/to/your/project/dist/main.js",
          "some_argument"
        ]
      }
    }
  },
  "jae-jae/fetcher-mcp": {
    "mcpServers": {
      "fetcher": {
        "command": "npx",
        "args": [
          "-y",
          "fetcher-mcp"
        ]
      }
    }
  },
  "adamwattis/mcp-proxy-server": {
    "mcpServers": {
      "mcp-proxy": {
        "command": "/path/to/mcp-proxy-server/build/index.js",
        "env": {
          "MCP_CONFIG_PATH": "/absolute/path/to/your/config.json",
          "KEEP_SERVER_OPEN": "1"
        }
      }
    }
  },
  "evansims/openfga-mcp": {
    "mcpServers": {
      "openfga-mcp": {
        "command": "uvx",
        "args": [
          "openfga-mcp@latest"
        ]
      }
    }
  },
  "haltakov/meme-mcp": {
    "mcpServers": {
      "meme": {
        "command": "/Users/<USERNAME>/.nvm/versions/node/v20.18.2/bin/node",
        "args": [
          "/Users/<USERNAME>/.nvm/versions/node/v20.18.2/lib/node_modules/meme-mcp/dist/index.js"
        ],
        "env": {
          "IMGFLIP_USERNAME": "<IMGFLIP USERNAME>",
          "IMGFLIP_PASSWORD": "<IMGFLIP PASSWORD>"
        }
      }
    }
  },
  "l3wi/mcp-lighthouse": {
    "mcpServers": {
      "lighthouse": {
        "command": "path/to/node/installation",
        "args": [
          "path/to/this/folder/mcp-lighthouse/dist/index.js"
        ]
      }
    }
  },
  "lalanikarim/comfy-mcp-server": {
    "mcpServers": {
      "Comfy MCP Server": {
        "command": "/path/to/uvx",
        "args": [
          "comfy-mcp-server"
        ],
        "env": {
          "COMFY_URL": "http://your-comfy-server-url:port",
          "COMFY_WORKFLOW_JSON_FILE": "/path/to/the/comfyui_workflow_export.json",
          "PROMPT_NODE_ID": "6",
          "OUTPUT_NODE_ID": "9",
          "OUTPUT_MODE": "file"
        }
      }
    }
  },
  "biegehydra/BifrostMCP": {
    "mcpServers": {
      "BackendAPI": {
        "url": "http://localhost:5643/backend-api/sse"
      },
      "FrontendApp": {
        "url": "http://localhost:5644/frontend-app/sse"
      }
    }
  },
  "JESwaim/OpenAI-MCP-Server": {
    "mcpServers": {
      "flux": {
        "command": "flux-server",
        "env": {
          "REPLICATE_API_TOKEN": "your-replicate-token"
        }
      }
    }
  },
  "amgadabdelhafez/DBX-MCP-Server": {
    "mcpServers": {
      "dbx": {
        "command": "node",
        "args": [
          "/path/to/dbx-mcp-server/build/index.js"
        ]
      }
    }
  },
  "MCP-Mirror/peterparker57_project-hub-mcp-server": {
    "mcpServers": {
      "project-hub": {
        "command": "node",
        "args": [
          "path/to/project-hub-mcp-server/dist/index.js"
        ],
        "env": {
          "DEFAULT_OWNER": "your-github-username",
          "GITHUB_TOKEN_your-github-username": "your-github-token"
        }
      }
    }
  },
  "MCP-Mirror/adamwattis_mcp-proxy-server": {
    "mcpServers": {
      "mcp-proxy": {
        "command": "/path/to/mcp-proxy-server/build/index.js",
        "env": {
          "MCP_CONFIG_PATH": "/absolute/path/to/your/config.json"
        }
      }
    }
  },
  "zoomeye-ai/mcp_zoomeye": {
    "mcpServers": {
      "zoomeye": {
        "command": "python",
        "args": [
          "-m",
          "mcp_server_zoomeye"
        ],
        "env": {
          "ZOOMEYE_API_KEY": "your_api_key_here"
        }
      }
    }
  },
  "LiMing1459276281/test-demo.git": {
    "mcpServers": {
      "tavily": {
        "command": "npx",
        "args": [
          "/path/to/tavi"
        ],
        "env": {
          "TAVILY_API_KEY": "your-api-key-here"
        }
      }
    }
  },
  "MCP-Mirror/MladenSU_cli-mcp-server": {
    "mcpServers": {
      "cli-mcp-server": {
        "command": "uvx",
        "args": [
          "cli-mcp-server"
        ],
        "env": {
          "ALLOWED_DIR": "</your/desired/dir>",
          "ALLOWED_COMMANDS": "ls,cat,pwd,echo",
          "ALLOWED_FLAGS": "-l,-a,--help,--version",
          "MAX_COMMAND_LENGTH": "1024",
          "COMMAND_TIMEOUT": "30"
        }
      }
    }
  },
  "metoro-io/mcp-golang": {
    "mcpServers": {
      "golang-mcp-server": {
        "command": "<your path to golang MCP server go executable>",
        "args": [],
        "env": {}
      }
    }
  },
  "Aiven-Open/mcp-aiven": {
    "mcpServers": {
      "mcp-aiven": {
        "command": "uv",
        "args": [
          "--directory",
          "$REPOSITORY_DIRECTORY",
          "run",
          "--with-editable",
          "$REPOSITORY_DIRECTORY",
          "--python",
          "3.13",
          "mcp-aiven"
        ],
        "env": {
          "AIVEN_BASE_URL": "https://api.aiven.io",
          "AIVEN_TOKEN": "$AIVEN_TOKEN"
        }
      }
    }
  },
  "cmsparks/remote-mcp-server": {
    "mcpServers": {
      "math": {
        "command": "npx",
        "args": [
          "mcp-remote",
          "https://worker-name.account-name.workers.dev/sse"
        ]
      }
    }
  },
  "sammcj/mcp-package-docs": {
    "mcpServers": {
      "package-docs": {
        "command": "npx",
        "args": [
          "-y",
          "mcp-package-docs"
        ],
        "env": {
          "ENABLE_LSP": "true",
          "TYPESCRIPT_SERVER": {
            "command": "/custom/path/typescript-language-server",
            "args": [
              "--stdio"
            ]
          }
        }
      }
    }
  },
  "MaartenSmeets/mcp-server-fetch": {
    "mcpServers": {
      "fetch": {
        "command": "docker",
        "args": [
          "run",
          "--rm",
          "-i",
          "mcp-server-fetch"
        ],
        "disabled": false,
        "alwaysAllow": []
      }
    }
  },
  "kei0440/dice-mcp-server": {
    "mcpServers": {
      "github": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-github"
        ],
        "env": {
          "GITHUB_PERSONAL_ACCESS_TOKEN": "<YOUR_TOKEN>"
        }
      }
    }
  },
  "crewAIInc/enterprise-mcp-server": {
    "mcpServers": {
      "crewai_enterprise_server": {
        "command": "uv",
        "args": [
          "run",
          "--with",
          "mcp[cli]",
          "mcp",
          "run",
          "<filepath of cloned repo>",
          "/crewai_enterprise_server.py"
        ],
        "env": {
          "MCP_CREWAI_ENTERPRISE_SERVER_URL": "<>",
          "MCP_CREWAI_ENTERPRISE_BEARER_TOKEN": "<>"
        }
      }
    }
  },
  "AgentWong/iac-memory-mcp-server-project": {
    "mcpServers": {
      "iac-memory": {
        "command": "uvx",
        "args": [
          "--from",
          "git+https://github.com/AgentWong/iac-memory-mcp-server.git",
          "python",
          "-m",
          "iac_memory_mcp_server"
        ],
        "env": {
          "DATABASE_URL": "sqlite:////home/herman/iac.db"
        }
      }
    }
  },
  "bash0C7/mcp-ruby-skeleton": {
    "mcpServers": {
      "random-number": {
        "command": "ruby",
        "args": [
          "/Users/bash/src/mcp-ruby-skeleton/bin/run_server.rb"
        ]
      }
    }
  },
  "springwq/jampp_mcp_server": {
    "mcpServers": {
      "jampp": {
        "command": "python",
        "args": [
          "path/to/jampp_mcp_server.py"
        ],
        "env": {
          "JAMPP_CLIENT_ID": "your_client_id",
          "JAMPP_CLIENT_SECRET": "your_client_secret"
        }
      }
    }
  },
  "jiantao88/android-mcp-server": {
    "mcpServers": {
      "adb": {
        "command": "node",
        "args": [
          "/path/to/android-mcp-server/build/index.js",
          "/usr/local/bin/adb"
        ]
      }
    }
  },
  "SecretiveShell/MCP-llms-txt": {
    "mcpServers": {
      "mcp-llms-txt": {
        "command": "uvx",
        "args": [
          "mcp-llms-txt"
        ],
        "env": {
          "PYTHONUTF8": "1"
        }
      }
    }
  },
  "sooperset/mcp-atlassian": {
    "mcpServers": {
      "mcp-atlassian": {
        "command": "uv",
        "args": [
          "--directory",
          "/path/to/your/mcp-atlassian",
          "run",
          "mcp-atlassian",
          "--confluence-url=https://your-domain.atlassian.net/wiki",
          "--confluence-username=your.email@domain.com",
          "--confluence-token=your_api_token",
          "--jira-url=https://your-domain.atlassian.net",
          "--jira-username=your.email@domain.com",
          "--jira-token=your_api_token"
        ]
      }
    }
  },
  "learnwithcc/mcp-directus": {
    "mcpServers": {
      "directus-mcp": {
        "url": "http://localhost:3000/mcp/v1",
        "description": "Directus CMS Integration"
      }
    }
  },
  "MCP-Mirror/amir-bengherbi_shopify-mcp-server": {
    "mcpServers": {
      "shopify": {
        "command": "npx",
        "args": [
          "-y",
          "shopify-mcp-server"
        ],
        "env": {
          "SHOPIFY_ACCESS_TOKEN": "<YOUR_ACCESS_TOKEN>",
          "MYSHOPIFY_DOMAIN": "<YOUR_SHOP>.myshopify.com"
        }
      }
    }
  },
  "dheerajoruganty/aws-bedrock-logs-mcp-server": {
    "mcpServers": {
      "aws_bedrock_logs": {
        "command": "uv",
        "args": [
          "--directory",
          "/path/to/aws-bedrock-logs-mcp",
          "run",
          "cloudwatch_mcp_server.py"
        ]
      }
    }
  },
  "MCP-Mirror/AI-FE_dify-mcp-server": {
    "mcpServers": {
      "dify-server": {
        "command": "node",
        "args": [
          "your/path/dify-server/build/index.js"
        ],
        "env": {
          "DIFY_API_KEY": "***"
        }
      }
    }
  },
  "JustaName-id/ens-mcp-server": {
    "mcpServers": {
      "ens": {
        "command": "node",
        "args": [
          "/path/to/your/server.js"
        ],
        "env": {
          "PROVIDER_URL": "https://your-provider-url.com,https://your-backup-provider.com"
        }
      }
    }
  },
  "MCP-Mirror/SimonB97_win-cli-mcp-server": {
    "mcpServers": {
      "windows-cli": {
        "command": "npx",
        "args": [
          "-y",
          "@simonb97/server-win-cli",
          "--config",
          "path/to/your/config.json"
        ]
      }
    }
  },
  "truss44/mcp-crypto-price": {
    "mcpServers": {
      "mcp-crypto-price": {
        "command": "npx",
        "args": [
          "-y",
          "mcp-crypto-price"
        ],
        "env": {
          "COINCAP_API_KEY": "YOUR_API_KEY_HERE"
        }
      }
    }
  },
  "privetin/dataset-viewer": {
    "mcpServers": {
      "dataset-viewer": {
        "command": "uv",
        "args": [
          "run",
          "dataset-viewer"
        ]
      }
    }
  },
  "yuru-sha/mcp-server-mysql": {
    "mcpServers": {
      "mysql": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "mcp/mysql",
          "mysql://host:port/dbname"
        ]
      }
    }
  },
  "bkataru-workshop/mcp-duckduckresearch": {
    "mcpServers": {
      "duckduckmcp": {
        "command": "node",
        "args": [
          "path/to/mcp-duckduckresearch/build/index.js"
        ],
        "disabled": false,
        "alwaysAllow": []
      }
    }
  },
  "waystation-ai/mcp": {
    "mcpServers": {
      "filesystem": {
        "...": "..."
      },
      "waystation": {
        "command": "npx",
        "args": [
          "-y",
          "@waystation/mcp",
          "<your_WAY_KEY>"
        ]
      }
    }
  },
  "YiyangLi/sms-mcp-server": {
    "mcpServers": {
      "twilio": {
        "command": "npx",
        "args": [
          "-y",
          "@yiyang.1i/sms-mcp-server"
        ],
        "env": {
          "ACCOUNT_SID": "your_account_sid",
          "AUTH_TOKEN": "your_auth_token",
          "FROM_NUMBER": "your_twilio_number"
        }
      }
    }
  },
  "non-dirty/mcp-server-restart": {
    "mcpServers": {
      "mcp-server-restart": {
        "command": "uvx",
        "args": [
          "mcp-server-restart"
        ]
      }
    }
  },
  "MCP-Mirror/GongRzhe_REDIS-MCP-Server": {
    "mcpServers": {
      "redis": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "mcp/redis",
          "redis://host.docker.internal:6379"
        ]
      }
    }
  },
  "irvinebroque/remote-mcp-server": {
    "mcpServers": {
      "math": {
        "command": "npx",
        "args": [
          "mcp-remote",
          "https://worker-name.account-name.workers.dev/sse"
        ]
      }
    }
  },
  "riemannzeta/patent_mcp_server": {
    "mcpServers": {
      "patents": {
        "command": "uv",
        "args": [
          "--directory",
          "/Users/username/patent_mcp_server",
          "run",
          "patent-mcp-server"
        ]
      }
    }
  },
  "chris-miaskowski/custom-gitlab-mcp-server": {
    "mcpServers": {
      "github.com/modelcontextprotocol/servers/tree/main/src/gitlab": {
        "command": "node",
        "args": [
          "/path/to/custom-gitlab-server/index.js"
        ],
        "env": {
          "GITLAB_PERSONAL_ACCESS_TOKEN": "your-gitlab-token",
          "GITLAB_API_URL": "https://your-gitlab-instance/api/v4"
        }
      }
    }
  },
  "ravitemer/mcp-hub": {
    "mcpServers": {
      "stdio-server": {
        "command": "npx",
        "args": [
          "example-server"
        ],
        "env": {
          "API_KEY": "",
          "DEBUG": "true",
          "SECRET_TOKEN": null
        },
        "disabled": false
      },
      "sse-server": {
        "url": "https://api.example.com/mcp",
        "headers": {
          "Authorization": "Bearer token",
          "Content-Type": "application/json"
        },
        "disabled": false
      }
    }
  },
  "bitibi/OpenAI-WebSearch-MCP-Server": {
    "mcpServers": {
      "openai_websearch": {
        "command": "npx",
        "args": [
          "-y",
          "openai-websearch-mcp-server"
        ],
        "env": {
          "OPENAI_API_KEY": "your_api_key"
        }
      }
    }
  },
  "port-experimental/port-mcp-server": {
    "mcpServers": {
      "port": {
        "command": "uvx",
        "args": [
          "mcp-server-port@0.1.4",
          "--client-id",
          "YOUR_CLIENT_ID",
          "--client-secret",
          "YOUR_CLIENT_SECRET",
          "--region",
          "REGION"
        ]
      }
    }
  },
  "tayler-id/social-media-mcp": {
    "mcpServers": {
      "social-media-mcp": {
        "command": "node",
        "args": [
          "path/to/social-media-mcp/build/index.js"
        ],
        "env": {
          "TWITTER_API_KEY": "your_api_key",
          "TWITTER_API_SECRET": "your_api_secret",
          "TWITTER_BEARER_TOKEN": "your_bearer_token",
          "TWITTER_ACCESS_TOKEN": "your_access_token",
          "TWITTER_ACCESS_SECRET": "your_access_secret",
          "TWITTER_OAUTH_CLIENT": "your_oauth_client",
          "TWITTER_CLIENT_SECRET": "your_client_secret",
          "MASTODON_CLIENT_SECRET": "your_client_secret",
          "MASTODON_CLIENT_KEY": "your_client_key",
          "MASTODON_ACCESS_TOKEN": "your_access_token",
          "LINKEDIN_CLIENT_ID": "your_client_id",
          "LINKEDIN_CLIENT_SECRET": "your_client_secret",
          "LINKEDIN_ACCESS_TOKEN": "your_access_token",
          "ANTHROPIC_API_KEY": "your_anthropic_key",
          "OPENAI_API_KEY": "your_openai_key",
          "BRAVE_API_KEY": "your_brave_key"
        },
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "MCP-Mirror/cyanheads_mentor-mcp-server": {
    "mcpServers": {
      "mentor": {
        "command": "node",
        "args": [
          "build/index.js"
        ],
        "env": {
          "DEEPSEEK_API_KEY": "your_api_key",
          "DEEPSEEK_MODEL": "deepseek-reasoner",
          "DEEPSEEK_MAX_TOKENS": "8192",
          "DEEPSEEK_MAX_RETRIES": "3",
          "DEEPSEEK_TIMEOUT": "30000"
        }
      }
    }
  },
  "jae-jae/fetch-mcp": {
    "mcpServers": {
      "fetch": {
        "command": "npx",
        "args": [
          "-y",
          "github:jae-jae/fetch-mcp"
        ]
      }
    }
  },
  "benborla/mcp-server-mysql": {
    "mcpServers": {
      "mcp_server_mysql": {
        "command": "/full/path/to/node",
        "args": [
          "/full/path/to/mcp-server-mysql/dist/index.js"
        ],
        "env": {
          "MYSQL_HOST": "127.0.0.1",
          "MYSQL_PORT": "3306",
          "MYSQL_USER": "root",
          "MYSQL_PASS": "your_password",
          "MYSQL_DB": "your_database"
        }
      }
    }
  },
  "lowprofix/n8n-mcp-server": {
    "mcpServers": {
      "n8n-mcp-server": {
        "command": "node",
        "args": [
          "/chemin/absolu/vers/mcp-n8n-server/dist/server.js"
        ]
      }
    }
  },
  "irvinebroque/remote-mcp-server-test-again": {
    "mcpServers": {
      "math": {
        "command": "npx",
        "args": [
          "mcp-remote",
          "https://worker-name.account-name.workers.dev/sse"
        ]
      }
    }
  },
  "Simon-Kansara/ableton-live-mcp-server": {
    "mcpServers": {
      "Ableton Live Controller": {
        "command": "/path/to/your/project/.venv/bin/python",
        "args": [
          "/path/to/your/project/mcp_ableton_server.py"
        ]
      }
    }
  },
  "icraft2170/youtube-data-mcp-server": {
    "mcpServers": {
      "youtube": {
        "command": "npx",
        "args": [
          "-y",
          "youtube-data-mcp-server"
        ],
        "env": {
          "YOUTUBE_API_KEY": "YOUR_API_KEY_HERE",
          "YOUTUBE_TRANSCRIPT_LANG": "ko"
        }
      }
    }
  },
  "cnosuke/mcp-meilisearch": {
    "mcpServers": {
      "sqlite": {
        "command": "./bin/mcp-meilisearch",
        "args": [
          "server",
          "--no-logs",
          "--log",
          "path_to_log_file"
        ],
        "env": {
          "MEILISEARCH_HOST": "http://localhost:7700",
          "MEILISEARCH_API_KEY": "api_key"
        }
      }
    }
  },
  "edobez/mcp-memory-py": {
    "mcpServers": {
      "memory-python": {
        "command": "uvx",
        "args": [
          "--refresh",
          "--quiet",
          "mcp-memory-py"
        ],
        "env": {
          "MEMORY_FILE_PATH": "/path/to/custom/memory.json"
        }
      }
    }
  },
  "ahmad2x4/mcp-server-seq": {
    "mcpServers": {
      "seq": {
        "command": "node",
        "args": [
          "/Users/ahmadreza/source/ahmad2x4/mcp-server-seq/build/seq-server.js"
        ],
        "env": {
          "SEQ_BASE_URL": "your-seq-url",
          "SEQ_API_KEY": "your-api-key"
        }
      }
    }
  },
  "MCP-Mirror/ivo-toby_mcp-openapi-server": {
    "mcpServers": {
      "openapi": {
        "command": "npx",
        "args": [
          "-y",
          "@ivotoby/openapi-mcp-server"
        ],
        "env": {
          "API_BASE_URL": "https://api.example.com",
          "OPENAPI_SPEC_PATH": "https://api.example.com/openapi.json",
          "API_HEADERS": "Authorization:Bearer token123,X-API-Key:your-api-key"
        }
      }
    }
  },
  "its-dart/dart-mcp-server": {
    "mcpServers": {
      "dart": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "-e",
          "DART_TOKEN",
          "mcp/dart"
        ],
        "env": {
          "DART_TOKEN": "dsa_..."
        }
      }
    }
  },
  "elitau/mcp-server-make-dot-com": {
    "mcpServers": {
      "make-dot-com": {
        "command": "node",
        "args": [
          "/full/absolute/path/to/mcp-server-make-dot-com/dist/index.js"
        ],
        "env": {
          "MAKE_DOT_COM_API_KEY": "your-api-key-from-make-dot-com",
          "MAKE_DOT_COM_BASE_URL": "eu2.make.com"
        }
      }
    }
  },
  "dillip285/mcp-dev-server": {
    "mcpServers": {
      "dev": {
        "command": "mcp-dev-server",
        "args": []
      }
    }
  },
  "yoda-digital/mcp-gitlab-server": {
    "mcpServers": {
      "gitlab-readonly": {
        "command": "npx",
        "args": [
          "-y",
          "@yoda.digital/gitlab-mcp-server"
        ],
        "env": {
          "GITLAB_PERSONAL_ACCESS_TOKEN": "your_token_here",
          "GITLAB_API_URL": "https://gitlab.com/api/v4",
          "GITLAB_READ_ONLY_MODE": "true"
        },
        "alwaysAllow": [],
        "disabled": false
      }
    }
  },
  "MCP-Mirror/twolven_mcp-server-puppeteer-py": {
    "mcpServers": {
      "puppeteer": {
        "command": "python",
        "args": [
          "path/to/puppeteer.py"
        ]
      }
    }
  },
  "jagan-shanmugam/mattermost-mcp-client": {
    "mcpServers": {
      "ollama-mcp-server": {
        "command": "python",
        "args": [
          "ollama-mcp-server/src/ollama_mcp_server/main.py"
        ],
        "type": "stdio"
      },
      "simple-mcp-server": {
        "command": "python",
        "args": [
          "simple-mcp-server/server.py"
        ],
        "type": "stdio"
      },
      "mattermost-mcp-server": {
        "command": "python",
        "args": [
          "mattermost-mcp-server/src/mattermost_mcp_server/server.py"
        ],
        "type": "stdio"
      }
    }
  },
  "screenshotone/mcp": {
    "mcpServers": {
      "screenshotone": {
        "command": "node",
        "args": [
          "path/to/screenshotone/mcp/build/index.js"
        ],
        "env": {
          "SCREENSHOTONE_API_KEY": "<your api key>"
        }
      }
    }
  },
  "GongRzhe/REDIS-MCP-Server": {
    "mcpServers": {
      "redis": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "mcp/redis",
          "redis://host.docker.internal:6379"
        ]
      }
    }
  },
  "nicozumarraga/light-mcp-agents": {
    "mcpServers": {
      "research-agent": {
        "command": "/bin/bash",
        "args": [
          "-c",
          "/path/to/your/venv/bin/python /path/to/your/agent_runner.py --config=/path/to/your/agent_config.json --server-mode"
        ],
        "env": {
          "PYTHONPATH": "/path/to/your/project",
          "PATH": "/path/to/your/venv/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"
        }
      }
    }
  },
  "aws-samples/sample-mcp-server-s3": {
    "mcpServers": {
      "s3-mcp-server": {
        "command": "uvx",
        "args": [
          "s3-mcp-server"
        ]
      }
    }
  },
  "Sheshiyer/framer-plugin-mcp": {
    "mcpServers": {
      "framer-plugin": {
        "command": "node",
        "args": [
          "/path/to/framer-plugin-mcp/build/index.js"
        ]
      }
    }
  },
  "GobinFan/python-mcp-server-client": {
    "mcpServers": {
      "mcp-server": {
        "command": "uv",
        "args": [
          "--directory",
          "<\u00e4\u00bd\u00a0\u00e7\u009a\u0084\u00e9\u00a1\u00b9\u00e7\u009b\u00ae\u00e8\u00b7\u00af\u00e5\u00be\u0084>",
          "run",
          "main.py"
        ]
      }
    }
  },
  "sammcj/mcp-package-version": {
    "mcpServers": {
      "package-version": {
        "url": "http://localhost:18080"
      }
    }
  },
  "sammcj/mcp-github-issue": {
    "mcpServers": {
      "github-issue": {
        "command": "npx",
        "args": [
          "mcp-github-issue"
        ]
      }
    }
  },
  "Ejb503/systemprompt-mcp-notion": {
    "mcpServers": {
      "notion": {
        "command": "node",
        "args": [
          "./node_modules/systemprompt-mcp-notion/build/index.js"
        ],
        "env": {
          "SYSTEMPROMPT_API_KEY": "your_systemprompt_api_key",
          "NOTION_API_KEY": "your_notion_integration_token"
        }
      }
    }
  },
  "stat-guy/chain-of-draft": {
    "mcpServers": {
      "chain-of-draft": {
        "command": "node",
        "args": [
          "/absolute/path/to/cod/index.js"
        ],
        "env": {
          "ANTHROPIC_API_KEY": "your_api_key_here"
        }
      }
    }
  },
  "tomekkorbak/strava-mcp-server": {
    "mcpServers": {
      "strava": {
        "command": "uvx",
        "args": [
          "strava-mcp-server"
        ],
        "env": {
          "STRAVA_CLIENT_ID": "YOUR_CLIENT_ID",
          "STRAVA_CLIENT_SECRET": "YOUR_CLIENT_SECRET",
          "STRAVA_REFRESH_TOKEN": "YOUR_REFRESH_TOKEN"
        }
      }
    }
  },
  "MCP-Mirror/crazyrabbitLTC_mcp-expert-server": {
    "mcpServers": {
      "expert": {
        "command": "node",
        "args": [
          "/ABSOLUTE/PATH/TO/expert-server/build/index.js"
        ],
        "env": {
          "ANTHROPIC_API_KEY": "your_api_key_here"
        }
      }
    }
  },
  "random-robbie/mcp-web-browser": {
    "mcpServers": {
      "web-browser": {
        "command": "python",
        "args": [
          "/path/to/your/server.py"
        ]
      }
    }
  },
  "yokingma/time-mcp": {
    "mcpServers": {
      "time-mcp": {
        "command": "npx",
        "args": [
          "-y",
          "time-mcp"
        ]
      }
    }
  },
  "CaptainCrouton89/planner": {
    "mcpServers": {
      "task-planner": {
        "command": "node",
        "args": [
          "/absolute/path/to/task-planner-mcp/dist/index.js"
        ]
      }
    }
  },
  "MCP-Mirror/r-huijts_ns-mcp-server": {
    "mcpServers": {
      "ns-server": {
        "command": "node",
        "args": [
          "/path/to/ns-server/build/index.js"
        ],
        "env": {
          "NS_API_KEY": "your_api_key_here"
        }
      }
    }
  },
  "billster45/mcp-chatgpt-responses": {
    "mcpServers": {
      "chatgpt": {
        "command": "uv",
        "args": [
          "--directory",
          "\\path\\to\\mcp-chatgpt-responses",
          "run",
          "chatgpt_server.py"
        ],
        "env": {
          "OPENAI_API_KEY": "your-api-key-here",
          "DEFAULT_MODEL": "gpt-4o",
          "DEFAULT_TEMPERATURE": "0.7",
          "MAX_TOKENS": "1000"
        }
      }
    }
  },
  "jimpick/mcp-json-db-collection-server": {
    "mcpServers": {
      "json-db-collections": {
        "command": "npx",
        "args": [
          "-y",
          "@jimpick/mcp-json-db-collection-server"
        ]
      }
    }
  },
  "dested/factorio-mcp-server": {
    "mcpServers": {
      "mcp-starter": {
        "command": "node",
        "args": [
          "/Users/matt/code/mcp-starter/dist/index.cjs"
        ]
      }
    }
  },
  "ognis1205/mcp-server-unitycatalog": {
    "mcpServers": {
      "unitycatalog": {
        "command": "docker",
        "args": [
          "run",
          "--rm",
          "-i",
          "mcp/unitycatalog",
          "--uc_server",
          "<your unity catalog url>",
          "--uc_catalog",
          "<your catalog name>",
          "--uc_schema",
          "<your schema name>"
        ]
      }
    }
  },
  "MCP-Mirror/tumf_mcp-shell-server": {
    "mcpServers": {
      "shell": {
        "command": "uv",
        "args": [
          "--directory",
          ".",
          "run",
          "mcp-shell-server"
        ],
        "env": {
          "ALLOW_COMMANDS": "ls,cat,pwd,grep,wc,touch,find"
        }
      }
    }
  },
  "QuantGeekDev/mcp-framework": {
    "mcpServers": {
      "${projectName}": {
        "command": "npx",
        "args": [
          "${projectName}"
        ]
      }
    }
  },
  "shreyaskarnik/mcpet": {
    "mcpServers": {
      "mcpet": {
        "command": "node",
        "args": [
          "/path/to/mcpet/build/index.js"
        ],
        "env": {
          "PET_DATA_DIR": "/path/to/writable/directory"
        }
      }
    }
  },
  "Jacck/mcp-ortools": {
    "mcpServers": {
      "ortools": {
        "command": "python",
        "args": [
          "-m",
          "mcp_ortools.server"
        ]
      }
    }
  },
  "prasanthmj/primitive-go-mcp-server": {
    "mcpServers": {
      "imagegen-go": {
        "command": "/path/to/imagegen-go/bin/imagegen-go",
        "env": {
          "OPENAI_API_KEY": "your-api-key",
          "DEFAULT_DOWNLOAD_PATH": "/path/to/downloads"
        }
      }
    }
  },
  "githejie/mcp-server-calculator": {
    "mcpServers": {
      "calculator": {
        "command": "python",
        "args": [
          "-m",
          "mcp_server_calculator"
        ]
      }
    }
  },
  "arcaputo3/mcp-server-whisper": {
    "mcpServers": {
      "whisper": {
        "command": "uvx",
        "args": [
          "--with",
          "aiofiles",
          "--with",
          "mcp[cli]",
          "--with",
          "openai",
          "--with",
          "pydub",
          "mcp-server-whisper"
        ],
        "env": {
          "OPENAI_API_KEY": "your_openai_api_key",
          "AUDIO_FILES_PATH": "/path/to/your/audio/files"
        }
      }
    }
  },
  "melaodoidao/datagov-mcp-server": {
    "mcpServers": {
      "datagov": {
        "command": "datagov-mcp-server",
        "args": [],
        "env": {}
      }
    }
  },
  "syedazharmbnr1/ClaudeMCPServer": {
    "mcpServers": {
      "filesystem": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-filesystem",
          "<your-paths-here>"
        ]
      },
      "duckdb": {
        "command": "/path/to/python",
        "args": [
          "/path/to/fastapi/duckdb/main.py"
        ],
        "cwd": "/path/to/fastapi/duckdb",
        "env": {
          "PYTHONPATH": "/path/to/mcp-server-py",
          "PORT": "8010"
        }
      }
    }
  },
  "JackKuo666/mcp-server-bioRxiv": {
    "mcpServers": {
      "medrxiv": {
        "command": "bash",
        "args": [
          "-c",
          "source /home/YOUR/PATH/mcp-server-bioRxiv/.venv/bin/activate && python /home/YOUR/PATH/mcp-server-bioRxiv/medrxiv_server.py"
        ],
        "env": {},
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "Dienvm/mcp-servers": {
    "mcpServers": {
      "github": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-github"
        ],
        "env": {
          "GITHUB_PERSONAL_ACCESS_TOKEN": "your-token-here"
        }
      },
      "puppeteer": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-puppeteer"
        ],
        "env": {}
      }
    }
  },
  "giovannicocco/mcp-server-postman-tool-generation": {
    "mcpServers": {
      "postman-ai-tools": {
        "command": "node",
        "args": [
          "/path/to/postman-tool-generation-server/build/index.js"
        ],
        "env": {
          "POSTMAN_API_KEY": "your-postman-api-key"
        },
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "wesnermichel/nexus-mcp-claude-desktop-server": {
    "mcpServers": {
      "nexus-bridge": {
        "url": "http://localhost:3000/mcp",
        "disabled": false,
        "alwaysAllow": [
          "get_system_info",
          "read_file",
          "write_file",
          "create_directory",
          "list_directory",
          "get_project_status"
        ]
      }
    }
  },
  "MCP-Mirror/Automata-Labs-team_MCP-Server-Playwright": {
    "mcpServers": {
      "playwright": {
        "command": "npx",
        "args": [
          "-y",
          "@automatalabs/mcp-server-playwright"
        ]
      }
    }
  },
  "shanejonas/openrpc-mpc-server": {
    "mcpServers": {
      "openrpc": {
        "command": "npx",
        "args": [
          "-y",
          "openrpc-mcp-server"
        ]
      }
    }
  },
  "MCP-Mirror/toolhouse-community_mcp-server-toolhouse": {
    "mcpServers": {
      "mcp-server-toolhouse": {
        "command": "uv",
        "args": [
          "--directory",
          "/path/to/this/folder/mcp-server-toolhouse",
          "run",
          "mcp-server-toolhouse"
        ],
        "env": {
          "TOOLHOUSE_API_KEY": "your_toolhouse_api_key",
          "GROQ_API_KEY": "your_groq_api_key",
          "TOOLHOUSE_BUNDLE_NAME": "a_bundle_name"
        }
      }
    }
  },
  "pinkpixel-dev/mem0-mcp": {
    "mcpServers": {
      "mem0-mcp": {
        "command": "node",
        "args": [
          "path/to/mem0-mcp/build/index.js"
        ],
        "env": {
          "OPENAI_API_KEY": "YOUR_OPENAI_API_KEY_HERE",
          "DEFAULT_USER_ID": "user123"
        }
      }
    }
  },
  "yuna0x0/hackmd-mcp": {
    "mcpServers": {
      "hackmd": {
        "command": "npx",
        "args": [
          "-y",
          "hackmd-mcp"
        ],
        "env": {
          "HACKMD_API_TOKEN": "your_api_token"
        }
      }
    }
  },
  "gamalan/mcp-email-client": {
    "mcpServers": {
      "mcp_email_client": {
        "command": "uv",
        "args": [
          "run",
          "--directory",
          "D:\\Project\\replace-with-repo-folder-location",
          "mcp_email_client"
        ]
      }
    }
  },
  "hannesrudolph/mcp-ragdocs": {
    "mcpServers": {
      "rag-docs": {
        "command": "npx",
        "args": [
          "-y",
          "@hannesrudolph/mcp-ragdo"
        ],
        "env": {
          "OPENAI_API_KEY": "",
          "QDRANT_URL": "",
          "QDRANT_API_KEY": ""
        }
      }
    }
  },
  "dazeb/cline-mcp-memory-bank": {
    "mcpServers": {
      "memory-bank": {
        "command": "node",
        "args": [
          "/path/to/cline-memory-bank/build/index.js"
        ],
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "integromat/make-mcp-server": {
    "mcpServers": {
      "make": {
        "command": "npx",
        "args": [
          "-y",
          "@makehq/mcp-server"
        ],
        "env": {
          "MAKE_API_KEY": "<your-api-key>",
          "MAKE_ZONE": "<your-zone>",
          "MAKE_TEAM": "<your-team-id>"
        }
      }
    }
  },
  "wshobson/mcp-trader": {
    "mcpServers": {
      "stock-analyzer": {
        "command": "uv",
        "args": [
          "--directory",
          "/absolute/path/to/mcp-trader",
          "run",
          "mcp-trader"
        ],
        "env": {
          "TIINGO_API_KEY": "your_api_key_here"
        }
      }
    }
  },
  "Jacck/mcp-reasoner": {
    "mcpServers": {
      "mcp-reasoner": {
        "command": "node",
        "args": [
          "path/to/mcp-reasoner/dist/index.js"
        ]
      }
    }
  },
  "aashari/rag-browser": {
    "bun": {
      "mcpServers": {
        "rag-browser": {
          "command": "bunx",
          "args": [
            "github:aashari/rag-browser"
          ]
        }
      }
    },
    "node-js-npm": {
      "mcpServers": {
        "rag-browser": {
          "command": "npx",
          "args": [
            "-y",
            "github:aashari/rag-browser"
          ]
        }
      }
    }
  },
  "danishjsheikh/swagger-mcp": {
    "mcpServers": {
      "swagger_loader": {
        "command": "swagger-mcp",
        "args": [
          "<swagger/doc.json_url>"
        ]
      }
    }
  },
  "jatinsandilya/mcp-server-template": {
    "mcpServers": {
      "your-mcp-name": {
        "command": "node",
        "args": [
          "ABSOLUTE_PATH_TO_MCP_SERVER/build/index.js"
        ]
      }
    }
  },
  "pskill9/hn-server": {
    "mcpServers": {
      "hacker-news": {
        "command": "node",
        "args": [
          "/path/to/hn-server/build/index.js"
        ]
      }
    }
  },
  "ivelin-web/tempo-mcp-server": {
    "mcpServers": {
      "Jira_Tempo": {
        "command": "/bin/bash",
        "args": [
          "/ABSOLUTE/PATH/TO/tempo-mcp-wrapper.sh"
        ]
      }
    }
  },
  "Ai-Quill/scraperis-mcp": {
    "mcpServers": {
      "scraperis_scraper": {
        "command": "scraperis-mcp",
        "args": [],
        "env": {
          "SCRAPERIS_API_KEY": "your-api-key-here",
          "DEBUG": "*"
        }
      }
    }
  },
  "HeatherFlux/github-issue-mcp-server": {
    "mcpServers": {
      "github-server": {
        "command": "/path/to/github-server/build/index.js"
      }
    }
  },
  "loglmhq/mcp-server-github-repo": {
    "mcpServers": {
      "mcp-server-github-repo": {
        "command": "/path/to/mcp-server-github-repo/build/index.js"
      }
    }
  },
  "JavOrraca/tidymodels-mcp": {
    "mcpServers": {
      "tidymodels": {
        "command": "node",
        "args": [
          "/path/to/tidymodels-mcp/js/index.js"
        ],
        "env": {
          "GITHUB_TOKEN": "your-github-token"
        },
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "MCP-Mirror/GongRzhe_Calendar-Autoauth-MCP-Server": {
    "mcpServers": {
      "calendar": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "-v",
          "mcp-calendar:/calendar-server",
          "-e",
          "CALENDAR_CREDENTIALS_PATH=/calendar-server/credentials.json",
          "mcp/calendar"
        ]
      }
    }
  },
  "vivalalova/mcp_practice": {
    "mcpServers": {
      "my-server": {
        "command": "/path/to/my-server/build/index.js"
      }
    }
  },
  "johnnyoshika/mcp-server-sqlite-npx": {
    "mcpServers": {
      "sqlite": {
        "command": "/absolute/path/to/node",
        "args": [
          "/absolute/path/to/dist/index.js",
          "/absolute/path/to/database.db"
        ]
      }
    }
  },
  "rikuson/mcp-qase": {
    "mcpServers": {
      "mcp-qase": {
        "command": "/path/to/mcp-qase/build/index.js",
        "env": {
          "QASE_API_TOKEN": "<YOUR_TOKEN>"
        }
      }
    }
  },
  "kiwamizamurai/mcp-kibela-server": {
    "mcpServers": {
      "kibela": {
        "command": "npx",
        "args": [
          "-y",
          "@kiwamizamurai/mcp-kibela-server"
        ],
        "env": {
          "KIBELA_TEAM": "your-team",
          "KIBELA_TOKEN": "your-token"
        }
      }
    }
  },
  "ryaker/mongodb-mcp-server": {
    "mcpServers": {
      "mongo-simple-server": {
        "command": "node",
        "args": [
          "/path/to/mongo-mcp-server.js"
        ],
        "env": {
          "MONGODB_URI": "mongodb+srv://username:password@host",
          "DEFAULT_DATABASE": "YourDatabaseName"
        }
      }
    }
  },
  "pvev/mattermost-mcp": {
    "mcpServers": {
      "mattermost": {
        "command": "node",
        "args": [
          "/path/to/mattermost-mcp/build/index.js"
        ]
      }
    }
  },
  "malloryai/mallory-mcp-server": {
    "mcpServers": {
      "MalloryAI": {
        "command": "/path/to/uv",
        "args": [
          "run",
          "--python",
          "/path/to/mcp-server/.venv/bin/python",
          "--with",
          "fastmcp",
          "fastmcp",
          "run",
          "/path/to/mcp-server/malloryai/mcp/app.py"
        ],
        "env": {
          "APP_ENV": "local",
          "MALLORY_API_KEY": "your_api_key_here"
        }
      }
    }
  },
  "zueai/frontend-review-mcp": {
    "mcpServers": {
      "frontend-review": {
        "command": "npx",
        "args": [
          "frontend-review-mcp HYPERBOLIC_API_KEY=<YOUR_API_KEY>"
        ]
      }
    }
  },
  "bmorphism/manifold-mcp-server": {
    "mcpServers": {
      "manifold": {
        "command": "node",
        "args": [
          "/path/to/manifold-mcp-server/build/index.js"
        ],
        "env": {
          "MANIFOLD_API_KEY": "your_api_key_here"
        }
      }
    }
  },
  "aiyogg/tinypng-mcp-server": {
    "mcpServers": {
      "tinypng": {
        "command": "bun",
        "args": [
          "/path/to/tinypng-mcp-server/src/index.ts"
        ],
        "env": {
          "TINYPNG_API_KEY": "your-tinypng-api-key"
        }
      }
    }
  },
  "rezapex/shopify-mcp-server-main": {
    "mcpServers": {
      "shopify": {
        "command": "npx",
        "args": [
          "-y",
          "shopify-mcp-server"
        ],
        "env": {
          "SHOPIFY_ACCESS_TOKEN": "<TOKEN>",
          "MYSHOPIFY_DOMAIN": "<SHOP>.myshopify.com"
        }
      }
    }
  },
  "hanweg/mcp-sqlexpress": {
    "mcpServers": {
      "sqlexpress": {
        "command": "uv",
        "args": [
          "--directory",
          "PATH\\TO\\PROJECT\\mcp-sqlexpress",
          "run",
          "mcp-server-sqlexpress",
          "--server",
          "server\\instance",
          "--auth",
          "windows",
          "--trusted-connection",
          "yes",
          "--trust-server-certificate",
          "yes",
          "--allowed-databases",
          "database1,database2"
        ]
      }
    }
  },
  "mcpdotdirect/evm-mcp-server": {
    "mcpServers": {
      "evm-mcp-sse": {
        "url": "http://localhost:3001/sse"
      }
    }
  },
  "TheApeMachine/mcp-server-devops-bridge": {
    "mcpServers": {
      "devops-bridge": {
        "command": "/full/path/to/mcp-server-devops-bridge/mcp-server-devops-bridge",
        "args": [],
        "env": {
          "AZURE_DEVOPS_ORG": "organization",
          "AZDO_PAT": "personal_access_token",
          "AZURE_DEVOPS_PROJECT": "project",
          "SLACK_DEFAULT_CHANNEL": "channel_id",
          "SLACK_BOT_TOKEN": "bot_token",
          "GITHUB_PAT": "personal_access_token",
          "OPENAI_API_KEY": "openaikey",
          "QDRANT_URL": "http://localhost:6333",
          "QDRANT_API_KEY": "yourkey",
          "NEO4J_URL": "yourneo4jinstance",
          "NEO4J_USER": "neo4j",
          "NEO4J_PASSWORD": "neo4jpassword"
        }
      }
    }
  },
  "mkusaka/mcp-notify-server": {
    "mcpServers": {
      "notify": {
        "command": "npx",
        "args": [
          "-y",
          "@mkusaka/mcp-notify-server"
        ]
      }
    }
  },
  "dopehunter/n8n_MCP_server_complete": {
    "mcpServers": {
      "n8n": {
        "command": "npx",
        "args": [
          "-y",
          "@dopehunter/n8n-mcp-server"
        ]
      }
    }
  },
  "supercorp-ai/supergateway": {
    "mcpServers": {
      "supermachineExampleDocker": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "supercorp/supergateway",
          "--sse",
          "https://mcp-server-ab71a6b2-cd55-49d0-adba-562bc85956e3.supermachine.app"
        ]
      }
    }
  },
  "landicefu/temp-notes-mcp-server": {
    "mcpServers": {
      "temp-notes": {
        "command": "node",
        "args": [
          "/path/to/temp-notes-mcp-server/build/index.js"
        ],
        "disabled": false
      }
    }
  },
  "TarcisioPhilips/mcp-server-poc": {
    "mcpServers": {
      "mcp-server": {
        "command": "python",
        "args": [
          "ABSOLUTE/PATH/TO/main.py"
        ]
      }
    }
  },
  "hrs-asano/claude-mcp-trello": {
    "mcpServers": {
      "trello": {
        "command": "{YOUR_NODE_PATH}",
        "args": [
          "{YOUR_PATH}/claude-mcp-trello/build/index.js"
        ],
        "env": {
          "TRELLO_API_KEY": "{YOUR_KEY}",
          "TRELLO_TOKEN": "{YOUR_TOKEN}",
          "TRELLO_BOARD_ID": "{YOUR_BOARD_ID}"
        }
      }
    }
  },
  "yogi-miraje/mcp-us-city-weather": {
    "mcpServers": {
      "my_python_server": {
        "command": "/Users/<user_name>/.local/bin/uv",
        "args": [
          "--directory",
          "/Users/<user_name>/<git_repository_path>",
          "run",
          "weather.py"
        ]
      }
    }
  },
  "steel-dev/steel-mcp-server": {
    "mcpServers": {
      "steel-puppeteer": {
        "command": "node",
        "args": [
          "path/to/steel-puppeteer/dist/index.js"
        ],
        "env": {
          "STEEL_LOCAL": "false",
          "STEEL_API_KEY": "your_api_key_here"
        }
      }
    }
  },
  "MushroomFleet/TranscriptionTools-MCP": {
    "mcpServers": {
      "transcription-tools": {
        "command": "node",
        "args": [
          "/path/to/TranscriptionTools-MCP/build/index.js"
        ],
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "sirmews/mcp-pinecone": {
    "mcpServers": {
      "mcp-pinecone": {
        "command": "uvx",
        "args": [
          "--index-name",
          "{your-index-name}",
          "--api-key",
          "{your-secret-api-key}",
          "mcp-pinecone"
        ]
      }
    }
  },
  "bonninr/freecad_mcp": {
    "mcpServers": {
      "freecad": {
        "command": "/usr/local/bin/python3",
        "args": [
          "/Users/USER/Library/Preferences/FreeCAD/Mod/freecad_mcp/src/freecad_bridge.py"
        ]
      }
    }
  },
  "cyberchitta/scrapling-fetch-mcp": {
    "mcpServers": {
      "Cyber-Chitta": {
        "command": "uvx",
        "args": [
          "scrapling-fetch-mcp"
        ]
      }
    }
  },
  "lucasmontano/mcp-montano-server": {
    "mcpServers": {
      "montano-mcp-server": {
        "command": "node",
        "args": [
          "path/to/mcp-montano-server/build/index.js"
        ]
      }
    }
  },
  "notorious-d-e-v/payai-mcp-server": {
    "mcpServers": {
      "payai-mcp-server": {
        "command": "npx",
        "args": [
          "-y",
          "payai-mcp-server@latest",
          "https://mcp.payai.network"
        ]
      }
    }
  },
  "miles990/MyMcpServer": {
    "mcpServers": {
      "MyMcpServer": {
        "command": "/path/to/MyMcpServer/build/index.js"
      }
    }
  },
  "elliotxx/favicon-mcp-server": {
    "mcpServers": {
      "favicon-mcp-server": {
        "command": "go",
        "args": [
          "run",
          "main.go"
        ],
        "cwd": "/path/to/favicon-mcp-server",
        "env": {}
      }
    }
  },
  "block/code-mcp": {
    "mcpServers": {
      "code-mcp-server": {
        "command": "npx",
        "args": [
          "code-mcp-server"
        ],
        "env": {}
      }
    }
  },
  "bartwisch/MCPRules": {
    "mcpServers": {
      "rules": {
        "command": "node",
        "args": [
          "/path/to/rules-server/build/index.js"
        ],
        "disabled": false,
        "alwaysAllow": []
      }
    }
  },
  "co-browser/browser-use-mcp-server": {
    "mcpServers": {
      "browser-server": {
        "command": "browser-use-mcp-server",
        "args": [
          "run",
          "server",
          "--port",
          "8000",
          "--stdio",
          "--proxy-port",
          "9000"
        ],
        "env": {
          "OPENAI_API_KEY": "your-api-key"
        }
      }
    }
  },
  "punkpeye/file-edit-check-server": {
    "mcpServers": {
      "file-edit-check": {
        "command": "node",
        "args": [
          "/path/to/file-edit-check-server/build/index.js"
        ],
        "disabled": false,
        "alwaysAllow": []
      }
    }
  },
  "MediFinderBot/medifinder-mcp": {
    "mcpServers": {
      "MedifinderMCP": {
        "command": "C:\\path\\to\\project\\venv\\Scripts\\python.exe",
        "args": [
          "C:\\path\\to\\project\\main.py"
        ],
        "env": {
          "DB_HOST": "localhost",
          "DB_PORT": "5432",
          "DB_NAME": "medifinderbot",
          "DB_USER": "your_user",
          "DB_PASSWORD": "your_password",
          "DEBUG": "True",
          "ENV": "development",
          "SERVER_NAME": "MedifinderMCP",
          "SERVER_VERSION": "1.0.0",
          "MCP_SERVER_NAME": "MedifinderMCP",
          "MCP_SERVER_DESCRIPTION": "MCP server for medicine inventory queries",
          "MAX_SEARCH_RESULTS": "50",
          "SEARCH_SIMILARITY_THRESHOLD": "0.3"
        }
      }
    }
  },
  "StarRocks/mcp-server-starrocks": {
    "mcpServers": {
      "mcp-server-starrocks": {
        "command": "uv",
        "args": [
          "--directory",
          "path/to/mcp-server-starrocks",
          "run",
          "mcp-server-starrocks"
        ],
        "env": {
          "STARROCKS_HOST": "default localhost",
          "STARROCKS_PORT": "default 9030",
          "STARROCKS_USER": "default root",
          "STARROCKS_PASSWORD": "default empty"
        }
      }
    }
  },
  "sarankrishna/wheather-mcp": {
    "mcpServers": {
      "blender": {
        "command": "uvx",
        "args": [
          "blender-mcp"
        ]
      }
    }
  },
  "mikegehard/isolated-commands-mcp-server": {
    "mcpServers": {
      "isolated-commands-mcp-server": {
        "command": "/path/to/isolated-commands-mcp-server/build/index.js"
      }
    }
  },
  "MCP-Mirror/ccc0168_modes-mcp-server": {
    "mcpServers": {
      "modes": {
        "command": "node",
        "args": [
          "/path/to/modes-mcp-server/build/index.js"
        ],
        "env": {
          "MODES_CONFIG_PATH": "/path/to/custom/modes.json"
        },
        "disabled": false,
        "alwaysAllow": []
      }
    }
  },
  "Funmula-Corp/BigGo-MCP-Server": {
    "mcpServers": {
      "biggo-mcp-server": {
        "command": "uvx",
        "args": [
          "BigGo-MCP-Server@latest"
        ],
        "env": {
          "BIGGO_MCP_SERVER_CLIENT_ID": "CLIENT_ID",
          "BIGGO_MCP_SERVER_CLIENT_SECRET": "CLIENT_SECRET",
          "BIGGO_MCP_SERVER_REGION": "REGION"
        }
      }
    }
  },
  "zhangzhongnan928/mcp-coinbase-commerce": {
    "mcpServers": {
      "coinbase-commerce": {
        "command": "node",
        "args": [
          "/path/to/mcp-coinbase-commerce/dist/index.js"
        ],
        "env": {
          "COINBASE_COMMERCE_API_KEY": "your_api_key_here"
        }
      }
    }
  },
  "NishizukaKoichi/fastapi-mcp-server": {
    "mcpServers": {
      "fastapi-mcp": {
        "command": "python",
        "args": [
          "-m",
          "fastapi_mcp_server.server"
        ]
      }
    }
  },
  "okooo5km/time-mcp-server": {
    "mcpServers": {
      "RealTime": {
        "command": "time-mcp-server"
      }
    }
  },
  "KyrieTangSheng/mcp-server-nationalparks": {
    "mcpServers": {
      "nationalparks": {
        "command": "npx",
        "args": [
          "-y",
          "mcp-server-nationalparks"
        ],
        "env": {
          "NPS_API_KEY": "YOUR_NPS_API_KEY"
        }
      }
    }
  },
  "21st-dev/magic-mcp": {
    "mcpServers": {
      "@21st-dev/magic": {
        "command": "npx",
        "args": [
          "-y",
          "@21st-dev/magic@latest",
          "API_KEY=your-api-key"
        ]
      }
    }
  },
  "AnuragRai017/python-docs-server-MCP-Server": {
    "mcpServers": {
      "python-docs-server": {
        "command": "/path/to/python-docs-server/build/index.js"
      }
    }
  },
  "FradSer/mcp-server-to-markdown": {
    "mcpServers": {
      "to-markdown": {
        "command": "mcp-server-to-markdown",
        "args": {
          "CLOUDFLARE_API_TOKEN": "your_api_token",
          "CLOUDFLARE_ACCOUNT_ID": "your_account_id"
        }
      }
    }
  },
  "Akira-Papa/akirapapa-mcp-notion-server": {
    "mcpServers": {
      "notion": {
        "command": "node",
        "args": [
          "your-built-file-path"
        ],
        "env": {
          "NOTION_API_TOKEN": "your-integration-token"
        }
      }
    }
  },
  "burningion/video-editing-mcp": {
    "mcpServers": {
      "video-editor-mcp": {
        "command": "uv",
        "args": [
          "--directory",
          "/Users/YOURDIRECTORY/video-editor-mcp",
          "run",
          "video-editor-mcp",
          "YOURAPIKEY"
        ]
      }
    }
  },
  "AgentWong/iac-memory-mcp-server": {
    "mcpServers": {
      "iac-memory": {
        "command": "uvx",
        "args": [
          "--from",
          "git+https://github.com/AgentWong/iac-memory-mcp-server.git",
          "python",
          "-m",
          "iac_memory_mcp_server"
        ],
        "env": {
          "DATABASE_URL": "sqlite:////home/herman/iac.db"
        }
      }
    }
  },
  "privetin/wikimedia": {
    "mcpServers": {
      "wikimedia": {
        "command": "uvx",
        "args": [
          "wikimedia"
        ]
      }
    }
  },
  "ibraheem4/eventbrite-mcp": {
    "mcpServers": {
      "eventbrite": {
        "command": "npx",
        "args": [
          "-y",
          "@ibraheem4/eventbrite-mcp"
        ],
        "env": {
          "EVENTBRITE_API_KEY": "your-eventbrite-api-key"
        },
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "ppl-ai/modelcontextprotocol": {
    "mcpServers": {
      "perplexity-ask": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-perplexity-ask"
        ],
        "env": {
          "PERPLEXITY_API_KEY": "YOUR_API_KEY_HERE"
        }
      }
    }
  },
  "dubin555/clickhouse_mcp_server": {
    "mcpServers": {
      "clickhouse": {
        "command": "uv",
        "args": [
          "--directory",
          "/path/to/clickhouse_mcp_server",
          "run",
          "-m",
          "clickhouse_mcp_server.server"
        ],
        "env": {
          "CLICKHOUSE_HOST": "localhost",
          "CLICKHOUSE_PORT": "8123",
          "CLICKHOUSE_USER": "default",
          "CLICKHOUSE_PASSWORD": "CHANGE_TO_YOUR_PASSWORD",
          "CLICKHOUSE_DATABASE": "default"
        }
      }
    }
  },
  "PoliTwit1984/second-opinion-mcp-server": {
    "mcpServers": {
      "second-opinion": {
        "command": "node",
        "args": [
          "/path/to/second-opinion-server/build/index.js"
        ],
        "env": {
          "GEMINI_API_KEY": "your-gemini-api-key",
          "PERPLEXITY_API_KEY": "your-perplexity-api-key",
          "STACK_EXCHANGE_KEY": "your-stack-exchange-key"
        }
      }
    }
  },
  "MCP-Mirror/trevorwilkerson_Windows-MCP-Server-Installation-Verification-Guide": {
    "mcpServers": {
      "sequential-thinking": {
        "command": "C:\\Program Files\\odejs\\ode.exe",
        "args": [
          "C:\\Users\\Username\\AppData\\Roaming\\pm\\ode_modules\\@modelcontextprotocol\\server-sequential-thinking\\dist\\index.js"
        ]
      }
    }
  },
  "nexon33/search-fetch-server-mcp": {
    "mcpServers": {
      "search-fetch-server": {
        "command": "node",
        "args": [
          "/path/to/search-fetch-server/build/index.js"
        ]
      }
    }
  },
  "wazzan/mcp-coincap-jj": {
    "mcpServers": {
      "mcp-coincap-jj": {
        "command": "cmd.exe",
        "args": [
          "/c",
          "C:\\Program Files\\odejs\\px.cmd",
          "C:\\Users\\YOUR-WINDOWS-USERNAME\\repos\\github\\mcp-coincap-jj"
        ],
        "env": {
          "COINCAP_API_KEY": "YOUR_API_KEY_HERE"
        },
        "disabled": false,
        "alwaysAllow": [
          "])</script><script>self.__next_f.push([1,"
        ]
      }
    }
  },
  "bmorphism/marginalia-mcp-server": {
    "mcpServers": {
      "say": {
        "command": "node",
        "args": [
          "/Users/barton/worlds/servers/src/say-mcp-server/build/index.js"
        ]
      }
    }
  },
  "MubarakHAlketbi/game-asset-mcp": {
    "mcpServers": {
      "game-asset-generator": {
        "command": "node",
        "args": [
          "/full/path/to/game-asset-mcp/src/index.js"
        ]
      }
    }
  },
  "zueai/vercel-api-mcp": {
    "mcpServers": {
      "vercel": {
        "command": "npx",
        "args": [
          "vercel-mcp VERCEL_API_KEY=<YOUR_API_KEY>"
        ]
      }
    }
  },
  "madhukarkumar/mcp-ts-starter": {
    "mcpServers": {
      "hello-world": {
        "command": "node",
        "args": [
          "<path-to-repo>/build/stdio.js"
        ]
      }
    }
  },
  "justjoehere/mcp_gradio_client": {
    "mcpServers": {
      "stdio_server_name": {
        "type": "stdio",
        "command": "uvx",
        "args": [],
        "env": {}
      },
      "sse_server_name": {
        "type": "sse",
        "url": "http://127.0.0.1:3001/sse",
        "headers": {}
      }
    }
  },
  "burakdirin/mysqldb-mcp-server": {
    "mcpServers": {
      "mysqldb-mcp-server": {
        "command": "uvx",
        "args": [
          "mysqldb-mcp-server"
        ],
        "env": {
          "MYSQL_HOST": "localhost",
          "MYSQL_USER": "root",
          "MYSQL_PASSWORD": "password",
          "MYSQL_DATABASE": "[optional]",
          "MYSQL_READONLY": "true"
        }
      }
    }
  },
  "mrchi/caiyun-weather-mcp-server": {
    "mcpServers": {
      "weather": {
        "command": "uv",
        "env": {},
        "args": [
          "--directory",
          "<your repo directory>",
          "run",
          "--env-file",
          ".env",
          "servers/caiyun_weather.py"
        ]
      }
    }
  },
  "JackKuo666/Google-Scholar-MCP-Server": {
    "mcpServers": {
      "google-scholar": {
        "command": "bash",
        "args": [
          "-c",
          "source /home/YOUR/PATH/.venv/bin/activate && python /home/YOUR/PATH/google_scholar_mcp_server.py"
        ],
        "env": {},
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "ctvidic/strava-mcp-server": {
    "mcpServers": {
      "Strava": {
        "command": "python",
        "args": [
          "src/strava_server.py"
        ],
        "cwd": "/path/to/strava_mcp",
        "env": {
          "STRAVA_CLIENT_ID": "your_client_id",
          "STRAVA_CLIENT_SECRET": "your_client_secret",
          "STRAVA_REFRESH_TOKEN": "your_refresh_token"
        }
      }
    }
  },
  "nbbaier/mcp-turso": {
    "mcpServers": {
      "turso": {
        "command": "npx",
        "args": [
          "-y",
          "mcp-turso",
          "--logs",
          "/Users/<username>/path/to/dir/mcp-logs.log"
        ],
        "env": {
          "TURSO_DATABASE_URL": "your_url",
          "TURSO_AUTH_TOKEN": "your_token"
        }
      }
    }
  },
  "amgadabdelhafez/dbx-mcp-server": {
    "mcpServers": {
      "dbx": {
        "command": "node",
        "args": [
          "/path/to/dbx-mcp-server/build/index.js"
        ]
      }
    }
  },
  "metatool-ai/mcp-server-metamcp": {
    "mcpServers": {
      "MetaMCP": {
        "command": "npx",
        "args": [
          "-y",
          "@metamcp/mcp-server-metamcp@latest"
        ],
        "env": {
          "METAMCP_API_KEY": "<your api key>"
        }
      }
    }
  },
  "davidteren/claude-server": {
    "mcpServers": {
      "claude-server": {
        "command": "node",
        "args": [
          "/path/to/claude-server/build/index.js"
        ]
      }
    }
  },
  "yuru-sha/mcp-server-dify": {
    "mcpServers": {
      "dify": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-dify",
          "https://your-dify-api-endpoint",
          "your-dify-api-key"
        ]
      }
    }
  },
  "loonghao/wecom-bot-mcp-server": {
    "mcpServers": {
      "wecom": {
        "command": "uvx",
        "args": [
          "wecom-bot-mcp-server"
        ],
        "env": {
          "WECOM_WEBHOOK_URL": "your-webhook-url"
        }
      }
    }
  },
  "getfounded/mcp-tool-kit": {
    "mcpServers": {
      "unified": {
        "command": "docker",
        "args": [
          "exec",
          "-i",
          "mcp-tool-kit-mcp-server-1",
          "python",
          "-u",
          "mcp_unified_server.py"
        ],
        "useStdio": true
      }
    }
  },
  "kazuph/mcp-pocket": {
    "mcpServers": {
      "pocket": {
        "command": "npx",
        "args": [
          "tsx",
          "/path/to/mcp-pocket/index.ts"
        ],
        "env": {
          "POCKET_CONSUMER_KEY": "your-pocket-consumer-key",
          "POCKET_ACCESS_TOKEN": "your-pocket-access-token"
        }
      }
    }
  },
  "akseyh/bear-mcp-server": {
    "mcpServers": {
      "bear": {
        "command": "node",
        "args": [
          ".../build/index.js"
        ]
      }
    }
  },
  "twolven/mcp-optionsflow": {
    "mcpServers": {
      "optionsflow": {
        "command": "python",
        "args": [
          "path/to/optionsflow.py"
        ]
      }
    }
  },
  "garc33/js-sandbox-mcp-server": {
    "mcpServers": {
      "js-sandbox": {
        "command": "/path/to/js-sandbox/build/index.js"
      }
    }
  },
  "MCP-Mirror/Sunwood-ai-labs_github-kanban-mcp-server": {
    "mcpServers": {
      "github-kanban": {
        "command": "github-kanban-mcp-server"
      }
    }
  },
  "Garblesnarff/gemini-mcp-server": {
    "mcpServers": {
      "gemini-image": {
        "command": "/bin/bash",
        "args": [
          "-c",
          "/path/to/your/gemini-mcp-wrapper.sh"
        ],
        "env": {
          "GEMINI_API_KEY": "YOUR_GEMINI_API_KEY_HERE",
          "DEBUG": "true"
        }
      }
    }
  },
  "ZZZHDW/mcp-server-kusto": {
    "mcpServers": {
      "kusto": {
        "command": "uv",
        "args": [
          "--directory",
          "{{PATH_TO_PROJECT}}\\mcp-server-kusto\\src\\mcp_server_kusto",
          "run",
          "mcp-server-kusto",
          "--cluster",
          "{{ADX_CLUSTER_URL}}"
        ]
      }
    }
  },
  "adamwattis/resource-hub-server": {
    "mcpServers": {
      "resource-hub-server": {
        "command": "npx @adamwattis/resource-hub-server"
      }
    }
  },
  "Asphere-xyz/aapi-mcp-server": {
    "mcpServers": {
      "aapi": {
        "command": "npx",
        "args": [
          "-y",
          "@asphere/aapi-mcp-server"
        ],
        "env": {
          "ANKR_API_KEY": "<YOUR_KEY>"
        }
      }
    }
  },
  "noahlozevski/mcp-idb": {
    "mcpServers": {
      "idb": {
        "command": "npx",
        "args": [
          "-y",
          "@noahlozevski/idb"
        ]
      }
    }
  },
  "ruibaby/1panel-mcp": {
    "mcpServers": {
      "Deploy to 1Panel": {
        "url": "http://localhost:3000/sse"
      }
    }
  },
  "kiliczsh/mcp-mongo-server": {
    "mcpServers": {
      "mongodb": {
        "command": "npx",
        "args": [
          "-y",
          "mcp-mongo-server",
          "mongodb://muhammed:kilic@mongodb.localhost/sample_namespace"
        ]
      },
      "mongodb-readonly": {
        "command": "npx",
        "args": [
          "-y",
          "mcp-mongo-server",
          "mongodb://muhammed:kilic@mongodb.localhost/sample_namespace",
          "--read-only"
        ]
      },
      "mongodb-github": {
        "command": "npx",
        "args": [
          "-y",
          "github:kiliczsh/mcp-mongo-server",
          "mongodb://muhammed:kilic@mongodb.localhost/sample_namespace",
          "--read-only"
        ]
      }
    }
  },
  "ctoouli/mcp-stock-market": {
    "mcpServers": {
      "stock-market": {
        "command": "node",
        "args": [
          "/ABSOLUTE/PATH/TO/PARENT/FOLDER/mcp-stock-market/build/index.js"
        ]
      }
    }
  },
  "angrysky56/mcp-logic": {
    "mcpServers": {
      "mcp-logic": {
        "command": "uv",
        "args": [
          "--directory",
          "path/to/mcp-logic/src/mcp_logic",
          "run",
          "mcp_logic",
          "--prover-path",
          "path/to/Prover9-Mace4/bin-win32"
        ]
      }
    }
  },
  "tumf/mcp-text-editor": {
    "mcpServers": {
      "text-editor": {
        "command": "uvx",
        "args": [
          "mcp-text-editor"
        ]
      }
    }
  },
  "SAhmadUmass/notion-mcp-server": {
    "mcpServers": {
      "notion": {
        "command": "node",
        "args": [
          "/Users/shaheerahmad/Documents/notion-mcp-server/dist/index.js",
          "--notion-api-key=YOUR_ACTUAL_API_KEY_HERE"
        ]
      }
    }
  },
  "HubbleVision/hubble-ai-mcp": {
    "mcpServers": {
      "hubble-tool": {
        "command": "npx",
        "args": [
          "-y",
          "hubble-mcp-tool"
        ],
        "env": {
          "HUBBLE_API_KEY": "your_api_key"
        }
      }
    }
  },
  "pavelanni/mcp-server-minio-go": {
    "mcpServers": {
      "aistor": {
        "command": "/PATH/TO/YOUR/mcp-server-minio-go",
        "args": [
          "--allow-write",
          "--allow-delete",
          "--allow-admin",
          "--allowed-directories",
          "~/Desktop",
          "~/Documents"
        ],
        "env": {
          "MINIO_ENDPOINT": "play.min.io",
          "MINIO_ACCESS_KEY": "REPLACE_WITH_ACCESS_KEY",
          "MINIO_SECRET_KEY": "REPLACE_WITH_SECRET_KEY",
          "MINIO_USE_SSL": "true"
        }
      }
    }
  },
  "MCP-Mirror/datalayer_jupyter-mcp-server": {
    "mcpServers": {
      "jupyter": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "-e",
          "SERVER_URL",
          "-e",
          "TOKEN",
          "-e",
          "NOTEBOOK_PATH",
          "--network=host",
          "datalayer/jupyter-mcp-server:latest"
        ],
        "env": {
          "SERVER_URL": "http://localhost:8888",
          "TOKEN": "MY_TOKEN",
          "NOTEBOOK_PATH": "notebook.ipynb"
        }
      }
    }
  },
  "PoliTwit1984/mcp-perplexity-server": {
    "mcpServers": {
      "perplexity": {
        "command": "node",
        "args": [
          "/absolute/path/to/perplexity-server/build/index.js"
        ],
        "env": {
          "PERPLEXITY_API_KEY": "your-api-key-here"
        }
      }
    }
  },
  "MCP-Mirror/blazickjp_arxiv-mcp-server": {
    "mcpServers": {
      "arxiv-mcp-server": {
        "command": "uv",
        "args": [
          "run",
          "arxiv-mcp-server",
          "--storage-path",
          "/path/to/paper/storage"
        ]
      }
    }
  },
  "MCP-Mirror/loglmhq_mcp-server-github-repo": {
    "mcpServers": {
      "mcp-server-github-repo": {
        "command": "/path/to/mcp-server-github-repo/build/index.js"
      }
    }
  },
  "Swayingleaves/cockroachdb-mcp-server": {
    "mcpServers": {
      "cockroachdb-mcp": {
        "command": "uv",
        "args": [
          "--directory",
          "/Users/local/cockroachdb-mcp",
          "run",
          "server.py"
        ],
        "jdbc_url": "jdbc:postgresql://localhost:26257/defaultdb",
        "username": "root",
        "password": "root"
      }
    }
  },
  "mcpdotdirect/template-mcp-server": {
    "mcpServers": {
      "my-mcp-stdio": {
        "command": "npm",
        "args": [
          "start"
        ],
        "env": {
          "NODE_ENV": "development"
        }
      },
      "my-mcp-sse": {
        "url": "http://localhost:3001/sse"
      }
    }
  },
  "MCP-Mirror/ruchernchong_mcp-server-google-analytics": {
    "mcpServers": {
      "google-analytics": {
        "command": "npx",
        "args": [
          "-y",
          "mcp-server-google-analytics"
        ],
        "env": {
          "GOOGLE_CLIENT_EMAIL": "your-service-account@project.iam.gserviceaccount.com",
          "GOOGLE_PRIVATE_KEY": "your-private-key",
          "GA_PROPERTY_ID": "your-ga4-property-id"
        }
      }
    }
  },
  "lloydzhou/bitable-mcp": {
    "mcpServers": {
      "bitable-mcp": {
        "command": "python",
        "args": [
          "-m",
          "bitable_mcp"
        ],
        "env": {
          "PERSONAL_BASE_TOKEN": "your-personal-base-token",
          "APP_TOKEN": "your-app-token"
        }
      }
    }
  },
  "BurtTheCoder/mcp-shodan": {
    "mcpServers": {
      "shodan": {
        "command": "mcp-shodan",
        "env": {
          "SHODAN_API_KEY": "your-actual-api-key-here"
        }
      }
    }
  },
  "oschina/mcp-gitee": {
    "mcpServers": {
      "gitee": {
        "command": "mcp-gitee",
        "env": {
          "GITEE_API_BASE": "https://gitee.com/api/v5",
          "GITEE_ACCESS_TOKEN": "<your personal access token>"
        }
      }
    }
  },
  "jonemo/openpyxl-mcp-server": {
    "mcpServers": {
      "inspect_excel_xlsx_file": {
        "command": "/Users/jonas/repos/openpyxl_mcp_server/venv/bin/python",
        "args": [
          "/Users/jonas/repos/openpyxl_mcp_server/openpyxl_mcp_server.py"
        ]
      }
    }
  },
  "financial-datasets/mcp-server": {
    "mcpServers": {
      "financial-datasets": {
        "command": "/path/to/uv",
        "args": [
          "--directory",
          "/absolute/path/to/financial-datasets-mcp",
          "run",
          "server.py"
        ]
      }
    }
  },
  "f440/docbase-mcp-server": {
    "mcpServers": {
      "Framelink Figma MCP": {
        "command": "cmd",
        "args": [
          "/c",
          "npx",
          "-y",
          "figma-developer-mcp",
          "--figma-api-key=YOUR-KEY",
          "--stdio"
        ]
      }
    }
  },
  "arpitbatra123/mcp-googletasks": {
    "mcpServers": {
      "google-tasks": {
        "command": "node",
        "args": [
          "/path/to/google-tasks-mcp/build/index.js"
        ],
        "env": {
          "GOOGLE_CLIENT_ID": "your_client_id_here",
          "GOOGLE_CLIENT_SECRET": "your_client_secret_here",
          "GOOGLE_REDIRECT_URI": "http://localhost:3000/oauth2callback"
        }
      }
    }
  },
  "aaronsb/google-workspace-mcp": {
    "mcpServers": {
      "google-workspace-mcp": {
        "command": "docker",
        "args": [
          "run",
          "--rm",
          "-i",
          "-v",
          "/home/aaron/.mcp/google-workspace-mcp:/app/config",
          "-e",
          "GOOGLE_CLIENT_ID",
          "-e",
          "GOOGLE_CLIENT_SECRET",
          "-e",
          "LOG_MODE=strict",
          "ghcr.io/aaronsb/google-workspace-mcp:latest"
        ],
        "env": {
          "GOOGLE_CLIENT_ID": "123456789012-abcdef3gh1jklmn2pqrs4uvw5xyz6789.apps.googleusercontent.com",
          "GOOGLE_CLIENT_SECRET": "GOCSPX-abcdefghijklmnopqrstuvwxyz1234"
        },
        "autoApprove": [],
        "disabled": false
      }
    }
  },
  "apify/actors-mcp-server": {
    "mcpServers": {
      "actors-mcp-server": {
        "command": "npx",
        "args": [
          "-y",
          "@apify/actors-mcp-server",
          "--actors",
          "lukaskrivka/google-maps-with-contact-details,apify/instagram-scraper"
        ],
        "env": {
          "APIFY_TOKEN": "your-apify-token"
        }
      }
    }
  },
  "tembo-io/mcp-server-tembo": {
    "mcpServers": {
      "mcp-server-tembo": {
        "command": "node",
        "env": {
          "TEMBO_API_KEY": "your_tembo_api_key"
        },
        "args": [
          "/absolute/path/to/cloned/repo/mcp-server-tembo/dist/index.js"
        ]
      }
    }
  },
  "OwenQian/mcp-server-manager": {
    "mcpServers": {
      "filesystem": {
        "url": "http://localhost:8090/sse"
      },
      "youtube": {
        "url": "http://localhost:8092/sse"
      }
    }
  },
  "nickclyde/duckduckgo-mcp-server": {
    "mcpServers": {
      "ddg-search": {
        "command": "uvx",
        "args": [
          "duckduckgo-mcp-server"
        ]
      }
    }
  },
  "explorium-ai/mcp-explorium": {
    "mcpServers": {
      "Explorium": {
        "command": "<UV_INSTALL_PATH>",
        "args": [
          "run",
          "--directory",
          "<REPOSITORY_PATH>",
          "mcp",
          "run",
          "local_dev_server.py"
        ],
        "env": {
          "EXPLORIUM_API_KEY": "<YOUR_API_KEY>"
        }
      }
    }
  },
  "garc33/bitbucket-server-mcp-server": {
    "mcpServers": {
      "bitbucket": {
        "command": "node",
        "args": [
          "/path/to/bitbucket-server/build/index.js"
        ],
        "env": {
          "BITBUCKET_URL": "https://your-bitbucket-server.com",
          "BITBUCKET_TOKEN": "your-access-token",
          "BITBUCKET_USERNAME": "your-username",
          "BITBUCKET_PASSWORD": "your-password",
          "BITBUCKET_DEFAULT_PROJECT": "your-default-project"
        }
      }
    }
  },
  "spences10/mcp-perplexity-search": {
    "mcpServers": {
      "mcp-perplexity-search": {
        "command": "wsl.exe",
        "args": [
          "bash",
          "-c",
          "source ~/.nvm/nvm.sh && PERPLEXITY_API_KEY=your-perplexity-api-key /home/username/.nvm/versions/node/v20.12.1/bin/npx mcp-perplexity-search"
        ]
      }
    }
  },
  "MCP-Mirror/crazyrabbitLTC_mcp-coingecko-server": {
    "mcpServers": {
      "coingecko": {
        "command": "node",
        "args": [
          "/path/to/coingecko-server/build/index.js"
        ],
        "env": {
          "COINGECKO_API_KEY": "your-api-key-here"
        }
      }
    }
  },
  "AnuragRai017/database-updater-MCP-Server": {
    "mcpServers": {
      "database-updater": {
        "command": "/path/to/database-updater/build/index.js"
      }
    }
  },
  "MCP-Mirror/hmk_attio-mcp-server": {
    "mcpServers": {
      "attio": {
        "command": "npx",
        "args": [
          "attio-mcp-server"
        ],
        "env": {
          "ATTIO_API_KEY": "YOUR_ATTIO_API_KEY"
        }
      }
    }
  },
  "metoro-io/metoro-mcp-server": {
    "mcpServers": {
      "metoro-mcp-server": {
        "command": "<your path to Metoro MCP server go executable>/metoro-mcp-server",
        "args": [],
        "env": {
          "METORO_AUTH_TOKEN": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjdXN0b21lcklkIjoiOThlZDU1M2QtYzY4ZC00MDRhLWFhZjItNDM2ODllNWJiMGUzIiwiZW1haWwiOiJ0ZXN0QGNocmlzYmF0dGFyYmVlLmNvbSIsImV4cCI6MTgyMTI0NzIzN30.7G6alDpcZh_OThYj293Jce5rjeOBqAhOlANR_Fl5auw",
          "METORO_API_URL": "https://demo.us-east.metoro.io"
        }
      }
    }
  },
  "okto-hq/okto-mcp-server": {
    "mcpServers": {
      "okto": {
        "command": "npx",
        "env": {
          "OKTO_ENVIRONMENT": "sandbox",
          "OKTO_CLIENT_PRIVATE_KEY": "your_private_key_here",
          "OKTO_CLIENT_SWA": "your_swa_here"
        },
        "args": [
          "@okto_web3/okto-mcp-server@latest"
        ]
      }
    }
  },
  "blurrah/mcp-graphql": {
    "mcpServers": {
      "mcp-graphql": {
        "command": "npx",
        "args": [
          "mcp-graphql"
        ],
        "env": {
          "ENDPOINT": "http://localhost:3000/graphql"
        }
      }
    }
  },
  "samuraikun/aws-s3-mcp": {
    "globalShortcut": "",
    "mcpServers": {
      "s3": {
        "command": "your-absolute-path-to-node",
        "args": [
          "your-absolute-path-to-aws-s3-mcp/dist/index.js"
        ],
        "env": {
          "AWS_REGION": "your-aws-region",
          "S3_BUCKETS": "your-s3-buckets",
          "S3_MAX_BUCKETS": "your-max-buckets",
          "AWS_ACCESS_KEY_ID": "your-access-key",
          "AWS_SECRET_ACCESS_KEY": "your-secret-key"
        }
      }
    }
  },
  "siddheshutd/x-mcp-server": {
    "mcpServers": {
      "x-mcp-server": {
        "command": "node",
        "args": [
          "/ABSOLUTE/PATH/TO/PARENT/FOLDER/x-mcp-server/build/index.js"
        ],
        "env": {
          "X_API_KEY": "your-x-api-key",
          "X_API_KEY_SECRET": "your-x-api-key-secret",
          "X_ACCESS_TOKEN": "your-x-access-token",
          "X_ACCESS_TOKEN_SECRET": "your-x-access-token-secret"
        }
      }
    }
  },
  "jasondsmith72/CWM-MCP": {
    "mcpServers": [
      {
        "name": "ConnectWise Manage MCP",
        "description": "MCP server for ConnectWise Manage API integration",
        "proxyUrl": "http://localhost:3000"
      }
    ]
  },
  "MCP-Mirror/tatn_mcp-server-diff-typescript": {
    "mcpServers": {
      "mcp-server-diff-typescript": {
        "command": "node",
        "args": [
          "/path/to/mcp-server-diff-typescript/build/index.js"
        ]
      }
    }
  },
  "CodifyAG/mcp-server-harvest-time-tracking": {
    "mcpServers": {
      "mcp-server-harvest-time-tracking": {
        "command": "python",
        "args": [
          "-m",
          "src.server"
        ],
        "cwd": "/path/to/mcp-server-harvest-time-tracking",
        "env": {
          "HARVEST_ACCOUNT_ID": "your-harvest-account-id",
          "HARVEST_ACCESS_TOKEN": "your-harvest-access-token"
        }
      }
    }
  },
  "zerubroberts/safetyculture-mcp-server": {
    "mcpServers": {
      "safetyculture": {
        "command": "python",
        "args": [
          "/path/to/your/project/src/main.py"
        ]
      }
    }
  },
  "GongRzhe/Audio-MCP-Server": {
    "mcpServers": {
      "audio-interface": {
        "command": "/path/to/your/.venv/bin/python",
        "args": [
          "/path/to/your/audio_server.py"
        ],
        "env": {
          "PYTHONPATH": "/path/to/your/audio-mcp-server"
        }
      }
    }
  },
  "xue160709/yt-mcp-server": {
    "mcpServers": {
      "yt-mcp-server": {
        "command": "npx",
        "args": [
          "yt-mcp-server"
        ]
      }
    }
  },
  "plapinski/PHPocalypse-MCP": {
    "mcpServers": {
      "phpocalypse-mcp": {
        "command": "npx",
        "args": [
          "tsx",
          "/Absolute/Path/To/PHPocalypse-MCP/src/index.ts",
          "--config",
          "/Absolute/Path/To/Your/PHP/Based/Project/phpocalypse-mcp.yaml"
        ]
      }
    }
  },
  "qianwens/azure-deploy-mcp-server": {
    "mcpServers": {
      "memory": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-memory"
        ],
        "env": {
          "MEMORY_FILE_PATH": "/path/to/custom/memory.json"
        }
      }
    }
  },
  "heltonteixeira/ragdocs": {
    "mcpServers": {
      "ragdocs": {
        "command": "node",
        "args": [
          "@mcpservers/ragdocs"
        ],
        "env": {
          "QDRANT_URL": "http://127.0.0.1:6333",
          "EMBEDDING_PROVIDER": "openai",
          "OPENAI_API_KEY": "your-api-key"
        }
      }
    }
  },
  "idyll/party-time-mcp": {
    "mcpServers": {
      "partytime": {
        "command": "/path/to/your/party_time_mcp",
        "args": []
      }
    }
  },
  "GongRzhe/Quickchart-MCP-Server": {
    "mcpServers": {
      "quickchart-server": {
        "command": "npx",
        "args": [
          "-y",
          "@gongrzhe/quickchart-mcp-server"
        ]
      }
    }
  },
  "MCP-Mirror/kentaro_mcp-local-command-server": {
    "mcpServers": {
      "local-command-server": {
        "command": "/path/to/mcp-local-command-server/build/index.js"
      }
    }
  },
  "devabdultech/hn-mcp": {
    "mcpServers": {
      "hackernews": {
        "command": "npx",
        "args": [
          "-y",
          "@devabdultech/hn-mcp-server"
        ]
      }
    }
  },
  "openledger/Open-Ledger-MCP-Server": {
    "mcpServers": {
      "openledger": {
        "url": "http://localhost:8080/mcp"
      }
    }
  },
  "Greg-Swiftomatic/substack-mcp-server": {
    "mcpServers": {
      "substack": {
        "command": "python",
        "args": [
          "/ABSOLUTE/PATH/TO/substack-mcp-server/substack_mcp.py"
        ]
      }
    }
  },
  "secmate-ai/CyberSecurity-MCPs": {
    "mcpServers": {
      "sqlmap-server": {
        "command": "/path/to/sqlmap-mcp/build/index.js"
      },
      "quake-server": {
        "command": "node",
        "args": [
          "/path/to/quake-server/build/index.js"
        ],
        "env": {
          "QUAKE_API_KEY": "xxxxxx-xxxx-xxxx-xxxx-xxxxxxx"
        },
        "disabled": false,
        "alwaysAllow": []
      }
    }
  },
  "abhishekbhakat/mcp_server_code_assist": {
    "mcpServers": {
      "code-assist": {
        "command": "docker",
        "args": [
          "run",
          "--rm",
          "-i",
          "--mount",
          "type=bind,src=/Users/username,dst=/Users/username",
          "mcp/code-assist"
        ]
      }
    }
  },
  "obinopaul/nba-mcp-server": {
    "mcpServers": {
      "nba_mcp_server": {
        "command": "/path/to/your/python",
        "args": [
          "/path/to/nba_server.py"
        ]
      }
    }
  },
  "jootsuki/backlog-mcp-server": {
    "mcpServers": {
      "backlog": {
        "command": "docker",
        "args": [
          "exec",
          "-i",
          "backlog-mcp-server",
          "node",
          "build/index.js"
        ],
        "env": {
          "BACKLOG_SPACE_URL": "https://your-space.backlog.com",
          "BACKLOG_API_KEY": "your_api_key"
        }
      }
    }
  },
  "Muralikrishankp/Twitter-MCP-Server-for-Claude": {
    "mcpServers": {
      "twitter-trends": {
        "command": "C:\\Users\\YOUR_USERNAME\\twitter-trends-mcp\\.venv\\Scripts\\python.exe",
        "args": [
          "C:\\Users\\YOUR_USERNAME\\twitter-trends-mcp\\twitter_server_run.py"
        ],
        "env": {
          "PYTHONPATH": "C:\\Users\\YOUR_USERNAME\\twitter-trends-mcp\\src",
          "PYTHONUNBUFFERED": "1"
        },
        "cwd": "C:\\Users\\YOUR_USERNAME\\twitter-trends-mcp"
      }
    }
  },
  "fabian1710/mcp-intercom": {
    "mcpServers": {
      "intercom": {
        "command": "node",
        "args": [
          "/path/to/mcp-intercom/dist/index.js"
        ],
        "env": {
          "INTERCOM_API_KEY": "your_api_key_here"
        }
      }
    }
  },
  "leonardsellem/n8n-mcp-server": {
    "mcpServers": {
      "n8n-local": {
        "command": "node",
        "args": [
          "/path/to/your/cloned/n8n-mcp-server/build/index.js"
        ],
        "env": {
          "N8N_API_URL": "http://your-n8n-instance:5678/api/v1",
          "N8N_API_KEY": "YOUR_N8N_API_KEY"
        },
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "davidamom/snowflake-mcp": {
    "mcpServers": {
      "snowflake": {
        "command": "/usr/bin/python3",
        "args": [
          "/path/to/snowflake-mcp/server.py"
        ]
      }
    }
  },
  "Dbillionaer/polygon-mcp": {
    "mcpServers": {
      "polygon": {
        "command": "node",
        "args": [
          "path/to/polygon-mcp.js"
        ],
        "env": {
          "POLYGON_MAINNET_RPC": "https://polygon-rpc.com",
          "POLYGON_AMOY_RPC": "https://rpc-amoy.polygon.technology",
          "ETHEREUM_RPC_URL": "https://eth-sepolia.g.alchemy.com/v2/YOUR_ALCHEMY_KEY",
          "POLYGONSCAN_API_KEY": "YOUR_EXPLORER_API_KEY",
          "PRIVATE_KEY": "your_private_key_here",
          "DEFAULT_NETWORK": "amoy",
          "DEFAULT_SLIPPAGE": "0.5",
          "DEFAULT_DEADLINE_MINUTES": "20"
        },
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "ScrapeGraphAI/scrapegraph-mcp": {
    "mcpServers": {
      "@ScrapeGraphAI-scrapegraph-mcp": {
        "command": "npx",
        "args": [
          "-y",
          "@smithery/cli@latest",
          "run",
          "@ScrapeGraphAI/scrapegraph-mcp",
          "--config",
          "{\"scrapegraphApiKey\":\"YOUR-SGAI-API-KEY\"}"
        ]
      }
    }
  },
  "kmwebnet/MCP-Server-for-sensor-device": {
    "mcpServers": {
      "CO2 sensor": {
        "command": "node",
        "args": [
          "...mcp-server-for-sensor-device/index.js"
        ],
        "env": {}
      }
    }
  },
  "MCP-Mirror/nahmanmate_better-auth-mcp-server": {
    "mcpServers": {
      "better-auth-mcp-server": {
        "command": "node",
        "args": [
          "/path/to/better-auth-mcp-server/build/index.js"
        ],
        "disabled": false,
        "alwaysAllow": []
      }
    }
  },
  "MCP-Mirror/Nayshins_mcp-server-ccxt": {
    "mcpServers": {
      "crypto": {
        "command": "python",
        "args": [
          "/path/to/crypto_server.py"
        ]
      }
    }
  },
  "ai-yliu/filesystem-mcp-server": {
    "mcpServers": {
      "filesystem-server": {
        "command": "node",
        "args": [
          "/path/to/filesystem-server/build/index.js",
          "/path/to/allowed/dir1",
          "/path/to/allowed/dir2"
        ],
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "TomCools/twitch-mcp": {
    "mcpServers": {
      "twitch-mcp-tomcools": {
        "command": "jbang",
        "args": [
          "--quiet",
          "-Dtwitch.channel=YOUR_CHANNEL_NAME",
          "-Dtwitch.auth=YOUR_API_KEY",
          "be.tomcools:twitch-mcp:1.0.0-SNAPSHOT:runner"
        ]
      }
    }
  },
  "StevenBtw/uv-docs-mcp": {
    "mcpServers": {
      "uv-docs": {
        "command": "uvx",
        "args": [
          "uv-docs"
        ]
      }
    }
  },
  "blazickjp/arxiv-mcp-server": {
    "mcpServers": {
      "arxiv-mcp-server": {
        "command": "uv",
        "args": [
          "--directory",
          "path/to/cloned/arxiv-mcp-server",
          "run",
          "arxiv-mcp-server",
          "--storage-path",
          "/path/to/paper/storage"
        ]
      }
    }
  },
  "reeeeemo/ancestry-mcp": {
    "mcpServers": {
      "ancestry": {
        "command": "mcp-server-ancestry",
        "args": [
          "--gedcom-path",
          "path/to/your/gedcom/files"
        ]
      }
    }
  },
  "apinetwork/piapi-mcp-server": {
    "mcpServers": {
      "piapi": {
        "command": "node",
        "args": [
          "/absolute/path/to/piapi-mcp-server/dist/index.js"
        ],
        "env": {
          "PIAPI_API_KEY": "your_api_key_here"
        }
      }
    }
  },
  "danielma-tic/fillout-mcp-server": {
    "mcpServers": {
      "fillout": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-fillout"
        ],
        "env": {
          "FILLOUT_API_KEY": "your-fillout-api-key"
        }
      }
    }
  },
  "acryldata/mcp-server-datahub": {
    "mcpServers": {
      "datahub": {
        "command": "uvx",
        "args": [
          "mcp-server-datahub"
        ],
        "env": {
          "DATAHUB_GMS_URL": "<your-datahub-url>",
          "DATAHUB_GMS_TOKEN": "<your-datahub-token>"
        }
      }
    }
  },
  "RayanZaki/mcp-google-contacts-server": {
    "mcpServers": {
      "google-contacts-server": {
        "command": "uv",
        "args": [
          "--directory",
          "/path/to/mcp-google-contacts-server",
          "run",
          "main.py"
        ],
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "zenturacp/tavily-server": {
    "mcpServers": {
      "tavily-server": {
        "command": "/path/to/tavily-server/build/index.js"
      }
    }
  },
  "spences10/mcp-sequentialthinking-tools": {
    "mcpServers": {
      "mcp-sequentialthinking-tools": {
        "command": "wsl.exe",
        "args": [
          "bash",
          "-c",
          "source ~/.nvm/nvm.sh && /home/username/.nvm/versions/node/v20.12.1/bin/npx mcp-sequentialthinking-tools"
        ]
      }
    }
  },
  "spolepaka/youtube-mcp": {
    "mcpServers": {
      "youtube-search": {
        "command": "node",
        "args": [
          "/absolute/path/to/youtube-mcp/build/index.js"
        ]
      }
    }
  },
  "AshikNesin/pushover-mcp": {
    "mcpServers": {
      "pushover": {
        "command": "npx",
        "args": [
          "-y",
          "pushover-mcp@latest",
          "start",
          "--token",
          "YOUR_TOKEN",
          "--user",
          "YOUR_USER"
        ]
      }
    }
  },
  "arturonaredo/mcp-server-simulator-ios-idb": {
    "mcpServers": {
      "ios-simulator": {
        "command": "node",
        "args": [
          "/path/to/mcp-server-simulator-ios-idb/dist/index.js"
        ],
        "env": {}
      }
    }
  },
  "MCP-Mirror/Flux159_mcp-server-kubernetes": {
    "mcpServers": {
      "kubernetes": {
        "command": "npx",
        "args": [
          "mcp-server-kubernetes"
        ]
      }
    }
  },
  "gleanwork/mcp-server": {
    "mcpServers": {
      "glean": {
        "command": "npx",
        "args": [
          "-y",
          "@gleanwork/mcp-server"
        ],
        "env": {
          "GLEAN_SUBDOMAIN": "<glean instance subdomain>",
          "GLEAN_API_TOKEN": "<glean api token>"
        }
      }
    }
  },
  "seonglae/mcp-notion": {
    "mcpServers": {
      "notion-texonom": {
        "command": "node",
        "args": [
          "/path/to/mcp/build/index.js"
        ],
        "env": {
          "ROOT_PAGE": "$SOME_UUID"
        }
      }
    }
  },
  "bankless/onchain-mcp": {
    "mcpServers": {
      "bankless": {
        "command": "npx",
        "args": [
          "@bankless/onchain-mcp"
        ],
        "env": {
          "BANKLESS_API_TOKEN": "your_api_token_here"
        }
      }
    }
  },
  "MCP-Mirror/aliargun_mcp-server-gemini": {
    "mcpServers": {
      "gemini": {
        "command": "npx",
        "args": [
          "-y",
          "github:aliargun/mcp-server-gemini"
        ],
        "env": {
          "GEMINI_API_KEY": "your_api_key_here"
        }
      }
    }
  },
  "samuelgursky/davinci-resolve-mcp": {
    "mcpServers": {
      "davinci-resolve": {
        "name": "DaVinci Resolve MCP",
        "command": "/path/to/your/venv/bin/python",
        "args": [
          "/path/to/your/davinci-resolve-mcp/src/main.py"
        ]
      }
    }
  },
  "RoryRedbox/gameanalytics-mcp-server": {
    "mcpServers": {
      "gameanalytics-server": {
        "command": "/path/to/gameanalytics-server/build/index.js"
      }
    }
  },
  "n0r1h/backlog-mcp-server": {
    "mcpServers": {
      "backlog-mcp-server": {
        "command": "/path/to/backlog-mcp-server/build/index.js"
      }
    }
  },
  "lenwood/cfbd-mcp-server": {
    "mcpServers": {
      "cfbd-mcp-server": {
        "command": "uv",
        "args": [
          "--directory",
          "/full/path/to/cfbd-mcp-server",
          "run",
          "cfbd-mcp-server"
        ],
        "env": {
          "CFB_API_KEY": "xxx",
          "PATH": "/full/path/to/python"
        }
      }
    }
  },
  "elizabethtrykin/8sleep-mcp": {
    "mcpServers": {
      "eight_sleep": {
        "command": "node",
        "args": [
          "/absolute/path/to/eight-sleep-mcp/build/index.js"
        ],
        "env": {
          "EIGHT_SLEEP_EMAIL": "your_email",
          "EIGHT_SLEEP_PASSWORD": "your_password",
          "EIGHT_SLEEP_USER_ID": "your_user_id",
          "EIGHT_SLEEP_CLIENT_ID": "your_client_id",
          "EIGHT_SLEEP_CLIENT_SECRET": "your_client_secret"
        }
      }
    }
  },
  "pci-frontend/mcp-server-gitlab": {
    "mcpServers": {
      "gitlab": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-gitlab"
        ],
        "env": {
          "GITLAB_PERSONAL_ACCESS_TOKEN": "<YOUR_TOKEN>",
          "GITLAB_API_URL": "https://gitlab.com/api/v4"
        }
      }
    }
  },
  "RafaelCartenet/mcp-databricks-server": {
    "mcpServers": {
      "databricks": {
        "command": "python",
        "args": [
          "/path/to/your/mcp-databricks-server/main.py"
        ]
      }
    }
  },
  "illuminaresolutions/n8n-mcp-server": {
    "mcpServers": {
      "n8n": {
        "command": "n8n-mcp-server",
        "env": {
          "N8N_HOST": "https://your-n8n-instance.com",
          "N8N_API_KEY": "your-api-key-here"
        }
      }
    }
  },
  "hexitex/MCP-Backup-Server": {
    "mcpServers": {
      "backup": {
        "command": "node",
        "args": [
          "./dist/index.js"
        ],
        "env": {
          "BACKUP_DIR": "./.code_backups",
          "EMERGENCY_BACKUP_DIR": "./.code_emergency_backups",
          "MAX_VERSIONS": "20"
        }
      }
    }
  },
  "wysh3/perplexity-mcp-zerver": {
    "mcpServers": {
      "web-search": {
        "command": "node",
        "args": [
          "/path/to/perplexity-mcp-zerver/build/index.js"
        ],
        "env": {}
      }
    }
  },
  "dkeesey/todoist-mcp-server": {
    "mcpServers": {
      "mcp-todoist": {
        "command": "/absolute/path/to/start-todoist-mcp.sh",
        "args": []
      }
    }
  },
  "hmk/box-mcp-server": {
    "mcpServers": {
      "box": {
        "command": "npx",
        "args": [
          "box-mcp-server"
        ],
        "env": {
          "BOX_DEV_TOKEN": "YOUR_DEV_TOKEN_GOES_HERE"
        }
      }
    }
  },
  "tmhr1850/backlog-mcp-server": {
    "mcpServers": {
      "backlog": {
        "command": "npx",
        "args": [
          "-y",
          "@tmhr1850/backlog-mcp-server"
        ],
        "env": {
          "BACKLOG_DOMAIN": "your-domain.backlog.com",
          "BACKLOG_API_KEY": "your-api-key"
        }
      }
    }
  },
  "MCP-Mirror/evangstav_python-memory-mcp-server": {
    "mcpServers": {
      "memory": {
        "command": "uvx",
        "args": [
          "memory-mcp-server"
        ]
      }
    }
  },
  "MCP-Mirror/ravenwits_mcp-server-arangodb": {
    "mcpServers": {
      "arango": {
        "command": "node",
        "args": [
          "/path/to/arango-server/build/index.js"
        ],
        "env": {
          "ARANGO_URL": "your_database_url",
          "ARANGO_DATABASE": "your_database_name",
          "ARANGO_USERNAME": "your_username",
          "ARANGO_PASSWORD": "your_password"
        }
      }
    }
  },
  "marcopesani/mcp-server-serper": {
    "mcpServers": {
      "github.com/marcopesani/mcp-server-serper": {
        "command": "npx",
        "args": [
          "-y",
          "serper-search-scrape-mcp-server"
        ],
        "env": {
          "SERPER_API_KEY": "your_api_key_here"
        },
        "disabled": false,
        "autoApprove": [
          "google_search",
          "scrape"
        ]
      }
    }
  },
  "FrankGenGo/solana-web3js-mcp-server": {
    "mcpServers": {
      "solana": {
        "command": "node",
        "args": [
          "/absolute/path/to/solana-web3js-mcp-server/dist/index.js"
        ]
      }
    }
  },
  "MCP-Mirror/madhukarkumar_singlestore-mcp-server": {
    "mcpServers": {
      "singlestore": {
        "command": "uv",
        "args": [
          "--directory",
          "path/to/singlestore_mcp_server",
          "run",
          "singlestore_mcp_server"
        ],
        "env": {
          "SINGLESTORE_HOST": "your_workspace_host",
          "SINGLESTORE_PORT": "3306",
          "SINGLESTORE_USER": "your_username",
          "SINGLESTORE_PASSWORD": "your_password",
          "SINGLESTORE_DATABASE": "your_database"
        }
      }
    }
  },
  "1broseidon/mcp-jira-server": {
    "mcpServers": {
      "jira": {
        "command": "node",
        "args": [
          "/path/to/jira-server/build/index.js"
        ],
        "env": {
          "JIRA_EMAIL": "your-email@example.com",
          "JIRA_API_TOKEN": "your-api-token",
          "JIRA_DOMAIN": "your-domain"
        }
      }
    }
  },
  "kukapay/token-minter-mcp": {
    "mcpServers": {
      "Token-Minter-MCP": {
        "command": "node",
        "args": [
          "path/to/token-minter-mcp/server/index.js"
        ],
        "env": {
          "INFURA_KEY": "your infura key",
          "PRIVATE_KEY": "your private key"
        }
      }
    }
  },
  "MCP-Mirror/TakumiY235_uniprot-mcp-server": {
    "mcpServers": {
      "uniprot": {
        "command": "uv",
        "args": [
          "--directory",
          "path/to/uniprot-mcp-server",
          "run",
          "uniprot-mcp-server"
        ]
      }
    }
  },
  "MCP-Mirror/jmonsellier_gmail-mcp-server": {
    "mcpServers": {
      "gdrive": {
        "command": "uv",
        "args": [
          "--directory",
          "[absolute-path-to-git-repo]",
          "run",
          "gmail",
          "--creds-file-path",
          "[absolute-path-to-credentials-file]",
          "--token-path",
          "[absolute-path-to-access-tokens-file]"
        ]
      }
    }
  },
  "manascb1344/together-mcp-server": {
    "mcpServers": {
      "together-image-gen": {
        "command": "npx",
        "args": [
          "together-mcp@latest -y"
        ],
        "env": {
          "TOGETHER_API_KEY": "<API KEY>"
        }
      }
    }
  },
  "PhialsBasement/nmap-mcp-server": {
    "mcpServers": {
      "nmap": {
        "command": "node",
        "args": [
          "C:\\Users\\YOUR_USERNAME\\Downloads\\mcp-nmap-server\\dist\\index.js"
        ]
      }
    },
    "globalShortcut": "Ctrl+Q"
  },
  "irvinebroque/remote-mcp-server-d2w": {
    "mcpServers": {
      "math": {
        "command": "npx",
        "args": [
          "mcp-remote",
          "https://worker-name.account-name.workers.dev/sse"
        ]
      }
    }
  },
  "MCP-Mirror/Vic563_Memgpt-MCP-Server": {
    "mcpServers": {
      "letta-memgpt": {
        "command": "/path/to/memgpt-server/build/index.js",
        "env": {
          "OPENAI_API_KEY": "your-openai-key",
          "ANTHROPIC_API_KEY": "your-anthropic-key",
          "OPENROUTER_API_KEY": "your-openrouter-key"
        }
      }
    }
  },
  "gbti-network/mcp-basic-test": {
    "mcpServers": {
      "super-secret": {
        "command": "npx",
        "args": [
          "--yes",
          "node",
          "<path-to-project>/index.js"
        ],
        "disabled": false,
        "autoApprove": [
          "getSecretPassphrase"
        ]
      }
    }
  },
  "aipotheosis-labs/aipolabs-mcp": {
    "mcpServers": {
      "aipolabs-mcp-apps": {
        "command": "uvx",
        "args": [
          "aipolabs-mcp",
          "apps-server",
          "--apps",
          "BRAVE_SEARCH,GMAIL",
          "--linked-account-owner-id",
          "<LINKED_ACCOUNT_OWNER_ID>"
        ],
        "env": {
          "AIPOLABS_ACI_API_KEY": "<AIPOLABS_ACI_API_KEY>"
        }
      }
    }
  },
  "MCP-Mirror/ZZZHDW_mcp-server-kusto": {
    "mcpServers": {
      "kusto": {
        "command": "uv",
        "args": [
          "--directory",
          "{{PATH_TO_PROJECT}}\\mcp-server-kusto\\src\\mcp_server_kusto",
          "run",
          "mcp-server-kusto",
          "--cluster",
          "{{ADX_CLUSTER_URL}}"
        ]
      }
    }
  },
  "dkmaker/mcp-azure-tablestorage": {
    "mcpServers": {
      "tablestore": {
        "command": "node",
        "args": [
          "C:/path/to/your/mcp-azure-tablestorage/build/index.js"
        ],
        "env": {
          "AZURE_STORAGE_CONNECTION_STRING": "your_connection_string_here"
        }
      }
    }
  },
  "GBA-BI/bioos-mcp-server": {
    "mcpServers": {
      "bioos": {
        "command": "path/to/uv",
        "args": [
          "--directory",
          "path/to/bioos-mcp-server",
          "run",
          "path/to/bioos-mcp-server/src/bioos_mcp/bioos_mcp_server.py"
        ],
        "env": {
          "PYTHONPATH": "path/to/bioos-mcp-server/src"
        }
      }
    }
  },
  "norisuke3/mcp-state-server": {
    "mcpServers": {
      "state-server": {
        "command": "/path/to/state-server/build/index.js"
      }
    }
  },
  "datastax/astra-db-mcp": {
    "mcpServers": {
      "astra-db-mcp": {
        "command": "npx",
        "args": [
          "-y",
          "@datastax/astra-db-mcp"
        ],
        "env": {
          "ASTRA_DB_APPLICATION_TOKEN": "your_astra_db_token",
          "ASTRA_DB_API_ENDPOINT": "your_astra_db_endpoint"
        }
      }
    }
  },
  "reminia/task-tracker": {
    "mcpServers": {
      "task-tracker": {
        "command": "uv",
        "args": [
          "--directory",
          "/path/to/task-tracker",
          "run",
          "task-tracker"
        ]
      }
    }
  },
  "edanyal/mcp-client": {
    "mcpServers": {
      "memory": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-memory"
        ]
      },
      "filesystem": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-filesystem",
          "/path/to/allowed/directory"
        ]
      },
      "brave-search": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-brave-search"
        ],
        "env": {
          "BRAVE_API_KEY": "your-api-key"
        }
      }
    }
  },
  "abshkbh/arrakis-mcp-server": {
    "mcpServers": {
      "arrakis": {
        "command": "<path-to-uv>",
        "args": [
          "--directory",
          "<path-to-repo>",
          "run",
          "arrakis_mcp_server.py"
        ]
      }
    }
  },
  "Ejb503/systemprompt-mcp-core": {
    "mcpServers": {
      "systemprompt-agent-server": {
        "command": "/path/to/systemprompt-agent-server/build/index.js"
      }
    }
  },
  "xianzong85/mysql-server-MCP-Server": {
    "mcpServers": {
      "mysql": {
        "command": "/path/to/mysql-server/build/index.js",
        "env": {
          "MYSQL_HOST": "your-mysql-host",
          "MYSQL_USER": "your-mysql-user",
          "MYSQL_PASSWORD": "your-mysql-password",
          "MYSQL_DATABASE": "your-mysql-database"
        }
      }
    }
  },
  "akhidasTech/github-agentic-chat-mcp": {
    "mcpServers": {
      "github-chat": {
        "command": "/absolute/path/to/bin/github-agentic-chat-mcp"
      }
    }
  },
  "kapilduraphe/okta-mcp-server": {
    "mcpServers": {
      "okta": {
        "command": "node",
        "args": [
          "PATH_TO_PROJECT_DIRECTORY/dist/index.js"
        ],
        "env": {
          "OKTA_ORG_URL": "https://your-domain.okta.com",
          "OKTA_API_TOKEN": "your-api-token"
        }
      }
    }
  },
  "sirmews/apple-notes-mcp": {
    "mcpServers": {
      "apple-notes-mcp": {
        "command": "uvx",
        "args": [
          "apple-notes-mcp"
        ]
      }
    }
  },
  "bmorphism/say-mcp-server": {
    "mcpServers": {
      "say": {
        "command": "node",
        "args": [
          "/path/to/say-mcp-server/build/index.js"
        ]
      }
    }
  },
  "fleagne/backlog-mcp-server": {
    "mcpServers": {
      "backlog": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "-e",
          "BACKLOG_API_KEY=YOUR_API_KEY_HERE",
          "-e",
          "BACKLOG_SPACE_ID=YOUR_SPACE_ID_HERE",
          "mcp/backlog"
        ],
        "env": {
          "BACKLOG_API_KEY": "YOUR_API_KEY_HERE",
          "BACKLOG_SPACE_ID": "YOUR_SPACE_ID_HERE"
        }
      }
    }
  },
  "difybase/dify-connect-mcp": {
    "mcpServers": {
      "dify-connect-mcp": {
        "command": "/bin/bash",
        "args": [
          "<\u00e3\u0083\u00aa\u00e3\u0083\u009d\u00e3\u0082\u00b8\u00e3\u0083\u0088\u00e3\u0083\u00aa\u00e3\u0081\u00ae\u00e3\u0083\u0091\u00e3\u0082\u00b9>/run-mcp.sh"
        ],
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "manolaz/amoca-sendai-agent-kit-mcp-server": {
    "mcpServers": {
      "agent-kit": {
        "command": "node",
        "env": {
          "RPC_URL": "your_solana_rpc_url_here",
          "SOLANA_PRIVATE_KEY": "your_private_key_here"
        },
        "args": [
          "/ABSOLUTE/PATH/TO/YOUR/PROJECT"
        ]
      }
    }
  },
  "Warashi/mcp-server-pipecd": {
    "mcpServers": {
      "pipecd": {
        "command": "/Users/sawada/go/bin/mcp-server-pipecd",
        "args": [],
        "env": {
          "PIPECD_HOST": "demo.pipecd.dev:443",
          "PIPECD_API_KEY_FILE": "/Users/sawada/.config/mcp-server-pipecd/api_key",
          "PIPECD_INSECURE": "false"
        }
      }
    }
  },
  "udaysy007/servers": {
    "mcpServers": {
      "filesystem": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-filesystem",
          "/path/to/allowed/files"
        ]
      },
      "git": {
        "command": "uvx",
        "args": [
          "mcp-server-git",
          "--repository",
          "path/to/git/repo"
        ]
      },
      "github": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-github"
        ],
        "env": {
          "GITHUB_PERSONAL_ACCESS_TOKEN": "<YOUR_TOKEN>"
        }
      },
      "postgres": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-postgres",
          "postgresql://localhost/mydb"
        ]
      }
    }
  },
  "tadasant/mcp-server-ssh-rails-runner": {
    "mcpServers": {
      "ssh-rails-runner": {
        "command": "npx",
        "args": [
          "mcp-server-ssh-rails-runner"
        ],
        "env": {
          "SSH_HOST": "your.remote.host",
          "SSH_USER": "your_ssh_user",
          "SSH_PRIVATE_KEY_PATH": "your_SSH_PRIVATE_KEY_PATH",
          "RAILS_WORKING_DIR": "/path/to/rails/app/root"
        }
      }
    }
  },
  "osomai/servicenow-mcp": {
    "mcpServers": {
      "ServiceNow": {
        "command": "/Users/yourusername/dev/servicenow-mcp/.venv/bin/python",
        "args": [
          "-m",
          "servicenow_mcp.cli"
        ],
        "env": {
          "SERVICENOW_INSTANCE_URL": "https://your-instance.service-now.com",
          "SERVICENOW_USERNAME": "your-username",
          "SERVICENOW_PASSWORD": "your-password",
          "SERVICENOW_AUTH_TYPE": "basic"
        }
      }
    }
  },
  "MCP-Mirror/mikegehard_isolated-commands-mcp-server": {
    "mcpServers": {
      "isolated-commands-mcp-server": {
        "command": "/path/to/isolated-commands-mcp-server/build/index.js"
      }
    }
  },
  "MCP-Mirror/tatn_mcp-server-diff-python": {
    "mcpServers": {
      "mcp-server-diff-python": {
        "command": "uv",
        "args": [
          "--directory",
          "path\\to\\mcp-server-diff-python",
          "run",
          "mcp-server-diff-python"
        ]
      }
    }
  },
  "mackenly/mcp-fathom-analytics": {
    "mcpServers": {
      "fathom-analytics": {
        "command": "npx",
        "args": [
          "-y",
          "mcp-fathom-analytics"
        ],
        "env": {
          "FATHOM_API_KEY": "your_api_key_here"
        }
      }
    }
  },
  "MCP-Mirror/bmorphism_marginalia-mcp-server": {
    "mcpServers": {
      "marginalia": {
        "command": "node",
        "args": [
          "/path/to/marginalia-mcp-server/build/index.js"
        ]
      }
    }
  },
  "royshil/obs-mcp": {
    "mcpServers": {
      "obs": {
        "command": "node",
        "args": [
          "<obs-mcp_root>/build/index.js"
        ],
        "env": {
          "OBS_WEBSOCKET_PASSWORD": "<password_from_obs>"
        }
      }
    }
  },
  "mark3labs/mcphost": {
    "mcpServers": {
      "sqlite": {
        "command": "uvx",
        "args": [
          "mcp-server-sqlite",
          "--db-path",
          "/tmp/foo.db"
        ]
      },
      "filesystem": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-filesystem",
          "/tmp"
        ]
      }
    }
  },
  "MCP-Mirror/langfuse_mcp-server-langfuse": {
    "mcpServers": {
      "langfuse": {
        "command": "node",
        "args": [
          "<absolute-path>/build/index.js"
        ],
        "env": {
          "LANGFUSE_PUBLIC_KEY": "your-public-key",
          "LANGFUSE_SECRET_KEY": "your-secret-key",
          "LANGFUSE_BASEURL": "https://cloud.langfuse.com"
        }
      }
    }
  },
  "GarethCott/enhanced-postgres-mcp-server": {
    "mcpServers": {
      "postgres": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-postgres",
          "postgresql://localhost/mydb"
        ]
      }
    }
  },
  "itay1542/brokers-mcp": {
    "mcpServers": {
      "brokerage_service": {
        "command": "uv",
        "args": [
          "--directory",
          "<path_to_portfolio_service>",
          "run",
          "--package",
          "brokerage_service",
          "python",
          "brokerage_service/src/server.py"
        ],
        "env": {
          "IBKR_ACCOUNT_ID": "your_account_id",
          "IBKR_CLIENT_ID": "1",
          "IBKR_HOST": "127.0.0.1",
          "IBKR_PORT": "7496",
          "TRADESTATION_API_KEY": "your_api_key",
          "TRADESTATION_API_SECRET": "your_api_secret",
          "TS_REFRESH_TOKEN": "your_refresh_token",
          "TS_ACCOUNT_ID": "your_account_id"
        }
      },
      "market_data_service": {
        "command": "uv",
        "args": [
          "--directory",
          "<path_to_portfolio_service>",
          "run",
          "--package",
          "market_data_service",
          "python",
          "market_data_service/src/server.py"
        ],
        "env": {
          "TRADESTATION_API_KEY": "your_api_key",
          "TRADESTATION_API_SECRET": "your_api_secret",
          "TS_REFRESH_TOKEN": "your_refresh_token",
          "TS_ACCOUNT_ID": "your_account_id",
          "IBKR_ACCOUNT_ID": "your_account_id",
          "IBKR_CLIENT_ID": "2",
          "IBKR_HOST": "127.0.0.1",
          "IBKR_PORT": "7496"
        }
      },
      "research_service": {
        "command": "uv",
        "args": [
          "--directory",
          "<path_to_portfolio_service>",
          "run",
          "--package",
          "research_service",
          "python",
          "research_service/src/server.py"
        ]
      }
    }
  },
  "baryhuang/mcp-server-aws-resources-python": {
    "mcpServers": {
      "aws-resources": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "-e",
          "AWS_PROFILE=default",
          "-v",
          "~/.aws:/root/.aws",
          "buryhuang/mcp-server-aws-resources:latest"
        ]
      }
    }
  },
  "Chakra-Network/mcp-server": {
    "mcpServers": {
      "chakra": {
        "command": "uvx",
        "args": [
          "chakra-mcp"
        ],
        "env": {
          "db_session_key": "YOUR_DB_SESSION_KEY"
        }
      }
    }
  },
  "MCP-Mirror/handfuloflight_convex-mcp-server": {
    "mcpServers": {
      "convex-mcp-server": {
        "command": "/path/to/convex-mcp-server/build/index.js"
      }
    }
  },
  "wrediam/coolify-mcp-server": {
    "mcpServers": {
      "coolify": {
        "command": "cmd",
        "args": [
          "/c",
          "npx",
          "-y",
          "coolify-mcp-server"
        ],
        "env": {
          "COOLIFY_BASE_URL": "your-coolify-url",
          "COOLIFY_TOKEN": "your-api-token"
        },
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "yuniko-software/minecraft-mcp-server": {
    "mcpServers": {
      "minecraft": {
        "command": "npx",
        "args": [
          "-y",
          "github:yuniko-software/minecraft-mcp-server",
          "--host",
          "localhost",
          "--port",
          "25565",
          "--username",
          "ClaudeBot"
        ]
      }
    }
  },
  "5ajaki/veri5ight": {
    "mcpServers": {
      "veri5ight": {
        "command": "node",
        "args": [
          "/absolute/path/to/veri5ight/dist/index.js"
        ]
      }
    }
  },
  "kortexa-ai/worker17": {
    "mcpServers": {
      "worker17": {
        "command": "mcp-proxy",
        "args": [
          "http://localhost:4000/sse"
        ]
      }
    }
  },
  "ilyazub/serpapi-mcp-server": {
    "mcpServers": {
      "serpapi": {
        "command": "python",
        "args": [
          "path/to/server.py"
        ]
      }
    }
  },
  "OtotaO/unsloth-mcp-server": {
    "mcpServers": {
      "unsloth-server": {
        "command": "node",
        "args": [
          "/path/to/unsloth-server/build/index.js"
        ],
        "env": {
          "HUGGINGFACE_TOKEN": "your_token_here"
        },
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "rados10/youtube-watchlater-mcp": {
    "mcpServers": {
      "youtube-watchlater": {
        "command": "node",
        "args": [
          "/path/to/youtube-watchlater/build/index.js"
        ],
        "env": {
          "OAUTH_CLIENT_ID": "your_client_id",
          "OAUTH_CLIENT_SECRET": "your_client_secret",
          "OAUTH_REFRESH_TOKEN": "your_refresh_token"
        }
      }
    }
  },
  "fusedio/fused-mcp": {
    "mcpServers": {
      "qgis": {
        "command": "/Users/<YOUR_USERNAME>/.local/bin/uv",
        "args": [
          "..."
        ]
      }
    }
  },
  "petrbroz/aps-mcp-server": {
    "mcpServers": {
      "autodesk-platform-services": {
        "command": "node",
        "args": [
          "/absolute/path/to/aps-mcp-server/build/server.js"
        ]
      }
    }
  },
  "nsxdavid/clickup-mcp-server": {
    "mcpServers": {
      "clickup": {
        "command": "npx",
        "args": [
          "-y",
          "clickup-mcp-server"
        ],
        "env": {
          "CLICKUP_API_TOKEN": "YOUR_API_TOKEN_HERE"
        },
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "abel9851/mariadb-mcp-server": {
    "mcpServers": {
      "mariadb_mcp_server": {
        "command": "/PATH/TO/uv",
        "args": [
          "--directory",
          "/YOUR/SOURCE/PATH/mariadb-mcp-server/src/mariadb_mcp_server",
          "run",
          "server.py"
        ],
        "env": {
          "MARIADB_HOST": "127.0.0.1",
          "MARIADB_USER": "USER",
          "MARIADB_PASSWORD": "PASSWORD",
          "MARIADB_DATABASE": "DATABASE",
          "MARIADB_PORT": "3306"
        }
      }
    }
  },
  "landicefu/android-adb-mcp-server": {
    "mcpServers": {
      "android-adb": {
        "command": "node",
        "args": [
          "/path/to/android-adb-mcp-server/build/index.js"
        ],
        "env": {},
        "disabled": false,
        "alwaysAllow": []
      }
    }
  },
  "rickydata-indexer/notion_mcp_server": {
    "mcpServers": {
      "notion-kb": {
        "command": "uv",
        "args": [
          "run",
          "--with",
          "fastmcp",
          "--with",
          "python-dotenv",
          "--with",
          "requests",
          "fastmcp",
          "run",
          "/absolute/path/to/notion_mcp_server.py"
        ],
        "env": {
          "DIFY_API_BACKEND_KEY": "your-api-key"
        }
      }
    }
  },
  "dkpoulsen/flutter-tools": {
    "mcpServers": {
      "flutter-tools": {
        "command": "node",
        "args": [
          "/path/to/flutter-tools/build/index.js"
        ],
        "env": {}
      }
    }
  },
  "avacx/hai-mcp-server": {
    "mcpServers": {
      "hai": {
        "command": "C:\\Users\\\u4f60\u7684\u7528\u6237\u540d\\Documents\\Cline\\MCP\\hai-mcp-server\\venv\\Scripts\\python.exe",
        "args": [
          "C:\\Users\\\u4f60\u7684\u7528\u6237\u540d\\Documents\\Cline\\MCP\\hai-mcp-server\\run.py"
        ],
        "cwd": "C:\\Users\\\u4f60\u7684\u7528\u6237\u540d\\Documents\\Cline\\MCP\\hai-mcp-server",
        "env": {
          "PYTHONUNBUFFERED": "1",
          "TENCENTCLOUD_SECRET_ID": "\u4f60\u7684SecretId",
          "TENCENTCLOUD_SECRET_KEY": "\u4f60\u7684SecretKey",
          "TENCENTCLOUD_REGION": "ap-beijing"
        }
      }
    }
  },
  "MCP-Mirror/mamertofabian_elevenlabs-mcp-server": {
    "mcpServers": {
      "elevenlabs": {
        "command": "uv",
        "args": [
          "--directory",
          "path/to/elevenlabs-mcp-server",
          "run",
          "elevenlabs-mcp-server"
        ],
        "env": {
          "ELEVENLABS_API_KEY": "your-api-key",
          "ELEVENLABS_VOICE_ID": "your-voice-id",
          "ELEVENLABS_MODEL_ID": "eleven_flash_v2",
          "ELEVENLABS_STABILITY": "0.5",
          "ELEVENLABS_SIMILARITY_BOOST": "0.75",
          "ELEVENLABS_STYLE": "0.1",
          "ELEVENLABS_OUTPUT_DIR": "output"
        }
      }
    }
  },
  "SeanLF/weather-mcp": {
    "mcpServers": {
      "weather": {
        "command": "/path/to/python",
        "args": [
          "/path/to/weather-mcp/weather.py"
        ]
      }
    }
  },
  "yuki-koma2/my-mcp-servers": {
    "mcpServers": {
      "github": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "-e",
          "GITHUB_PERSONAL_ACCESS_TOKEN",
          "mcp/github"
        ],
        "env": {
          "GITHUB_PERSONAL_ACCESS_TOKEN": "ghp_your_token_here"
        }
      }
    }
  },
  "MCP-Mirror/splendasucks_webperfect-mcp-server": {
    "mcpServers": {
      "webperfect": {
        "command": "node",
        "args": [
          "/path/to/webperfect-mcp-server/build/index.js"
        ],
        "env": {}
      }
    }
  },
  "pydantic/logfire-mcp": {
    "mcpServers": {
      "logfire": {
        "command": "uvx",
        "args": [
          "logfire-mcp"
        ],
        "env": {
          "LOGFIRE_READ_TOKEN": "YOUR_TOKEN"
        },
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "vlyl/mcpc": {
    "mcpServers": {
      "weather": {
        "command": "uv",
        "args": [
          "--directory",
          "/ABSOLUTE/PATH/TO/PROJECT",
          "run",
          "server.py"
        ]
      }
    }
  },
  "delorenj/mcp-server-trello": {
    "mcpServers": {
      "trello": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-trello"
        ],
        "env": {
          "TRELLO_API_KEY": "your-api-key",
          "TRELLO_TOKEN": "your-token",
          "TRELLO_BOARD_ID": "your-board-id"
        }
      }
    }
  },
  "farzad528/mcp-server-azure-ai-search": {
    "mcpServers": {
      "azure-search": {
        "command": "C:path\\tomcp-server-azure-ai-search.venvScriptspython.exe",
        "args": [
          "C:path\\tomcp-server-azure-ai-searchazure_search_server.py"
        ],
        "env": {
          "AZURE_SEARCH_SERVICE_ENDPOINT": "https://your-service-name.search.windows.net",
          "AZURE_SEARCH_INDEX_NAME": "your-index-name",
          "AZURE_SEARCH_API_KEY": "your-api-key"
        }
      }
    }
  },
  "ProgramComputer/NASA-MCP-server": {
    "mcpServers": {
      "nasa-mcp": {
        "command": "npx",
        "args": [
          "-y",
          "@programcomputer/nasa-mcp-server"
        ],
        "env": {
          "NASA_API_KEY": "your-api-key"
        }
      }
    }
  },
  "appwrite/mcp": {
    "mcpServers": {
      "appwrite": {
        "command": "uvx",
        "args": [
          "mcp-server-appwrite"
        ],
        "env": {
          "APPWRITE_PROJECT_ID": "your-project-id",
          "APPWRITE_API_KEY": "your-api-key",
          "APPWRITE_ENDPOINT": "https://cloud.appwrite.io/v1"
        }
      }
    }
  },
  "oakenai/mcp-edit-file-lines": {
    "mcpServers": {
      "edit-file-lines": {
        "command": "node",
        "args": [
          "/path/to/edit-file-lines/build/index.js",
          "<allowed-directory>"
        ],
        "env": {
          "MCP_EDIT_STATE_TTL": "300000"
        }
      }
    }
  },
  "solana-foundation/solana-dev-mcp": {
    "mcpServers": {
      "solana-dev": {
        "command": "node",
        "args": [
          "<full-path-to-repo>/dist/index.js"
        ]
      }
    }
  },
  "amidabuddha/unichat-ts-mcp-server": {
    "mcpServers": {
      "unichat-ts-mcp-server": {
        "command": "npx",
        "args": [
          "-y",
          "unichat-ts-mcp-server"
        ],
        "env": {
          "UNICHAT_MODEL": "YOUR_PREFERRED_MODEL_NAME",
          "UNICHAT_API_KEY": "YOUR_VENDOR_API_KEY"
        }
      }
    }
  },
  "zengwenliang416/mcp-server-sequential-thinking": {
    "mcpServers": {
      "sequential-thinking": {
        "command": "node",
        "args": [
          "/absolute/path/to/sequential-thinking/dist/index.js"
        ]
      }
    }
  },
  "Garoth/dalle-mcp": {
    "mcpServers": {
      "dalle-mcp": {
        "command": "node",
        "args": [
          "/path/to/dalle-mcp-server/build/index.js"
        ],
        "env": {
          "OPENAI_API_KEY": "your-api-key-here",
          "SAVE_DIR": "/path/to/save/directory"
        },
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "self-tech-labs/entscheidsuche-MCP-server": {
    "mcpServers": {
      "entscheidsuche": {
        "command": "node",
        "args": [
          "/absolute/path/to/entscheidsuche-mcp-server/build/index.js"
        ]
      }
    }
  },
  "andybrandt/mcp-simple-arxiv": {
    "mcpServers": {
      "simple-arxiv": {
        "command": "C:\\Users\\YOUR_USERNAME\\AppData\\Local\\Programs\\Python\\Python311\\python.exe",
        "args": [
          "-m",
          "mcp_simple_arxiv"
        ]
      }
    }
  },
  "AlexKissiJr/unreal-mcp-server": {
    "mcpServers": {
      "github": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-github"
        ],
        "env": {
          "GITHUB_PERSONAL_ACCESS_TOKEN": "<YOUR_TOKEN>"
        }
      }
    }
  },
  "MCP-Mirror/cyanheads_obsidian-mcp-server": {
    "mcpServers": {
      "obsidian-mcp-server": {
        "command": "node",
        "args": [
          "/path/to/obsidian-mcp-server/build/index.js"
        ],
        "env": {
          "OBSIDIAN_API_KEY": "your_api_key_here",
          "VERIFY_SSL": "false",
          "OBSIDIAN_PROTOCOL": "https",
          "OBSIDIAN_HOST": "127.0.0.1",
          "OBSIDIAN_PORT": "27124",
          "REQUEST_TIMEOUT": "5000",
          "MAX_CONTENT_LENGTH": "52428800",
          "MAX_BODY_LENGTH": "52428800",
          "RATE_LIMIT_WINDOW_MS": "900000",
          "RATE_LIMIT_MAX_REQUESTS": "200",
          "TOOL_TIMEOUT_MS": "60000"
        }
      }
    }
  },
  "Cam10001110101/mcp-server-ollama-deep-researcher": {
    "mcpServers": {
      "ollama-deep-researcher": {
        "command": "docker",
        "args": [
          "exec",
          "-i",
          "ollama-deep-researcher-mcp",
          "node",
          "build/index.js"
        ],
        "env": {}
      }
    }
  },
  "cyanheads/mcp-ts-template": {
    "mcpServers": {
      "atlas": {
        "command": "node",
        "args": [
          "/path/to/mcp-ts-template/dist/index.js"
        ],
        "env": {}
      }
    }
  },
  "JetBrains/mcp-jetbrains": {
    "mcpServers": {
      "jetbrains": {
        "command": "npx",
        "args": [
          "-y",
          "@jetbrains/mcp-proxy"
        ]
      }
    }
  },
  "TeglonLabs/coin-flip-mcp": {
    "mcpServers": {
      "coin-flip": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-coin-flip"
        ]
      }
    }
  },
  "anaisbetts/mcp-installer": {
    "mcpServers": {
      "mcp-installer": {
        "command": "npx",
        "args": [
          "@anaisbetts/mcp-installer"
        ]
      }
    }
  },
  "stat-guy/terminal": {
    "mcpServers": {
      "terminal": {
        "command": "node",
        "args": [
          "[PATH_TO_REPO]/dist/index.js"
        ],
        "env": {
          "PERMISSION_REQUIRED": "true"
        }
      }
    }
  },
  "jcdiv47/mcp-server-memory": {
    "mcpServers": {
      "memory": {
        "command": "python",
        "args": [
          "-m",
          "mcp_server_memory"
        ]
      }
    }
  },
  "r-huijts/rijksmuseum-mcp": {
    "mcpServers": {
      "rijksmuseum-server": {
        "command": "node",
        "args": [
          "/path/to/rijksmuseum-server/build/index.js"
        ],
        "env": {
          "RIJKSMUSEUM_API_KEY": "your_api_key_here"
        }
      }
    }
  },
  "sunsetcoder/flightradar24-mcp-server": {
    "mcpServers": {
      "flightradar24-server": {
        "command": "node",
        "args": [
          "/Users/<username>/<FULL_PATH...>/flightradar24-mcp-server/dist/index.js"
        ],
        "env": {
          "FR24_API_KEY": "your_api_key_here",
          "FR24_API_URL": "https://fr24api.flightradar24.com"
        }
      }
    }
  },
  "Nocodeboy/youtube-mcp-server": {
    "mcpServers": {
      "youtube": {
        "command": "node",
        "args": [
          "path/to/youtube-mcp-server/index.js"
        ],
        "env": {
          "YOUTUBE_API_KEY": "your_api_key_here"
        }
      }
    }
  },
  "gotoolkits/mcp-wecombot-server": {
    "mcpServers": {
      "mcp-wecombot-server": {
        "command": "mcp-wecombot-server",
        "env": {
          "WECOM_BOT_WEBHOOK_KEY": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx"
        }
      }
    }
  },
  "1Panel-dev/mcp-1panel": {
    "mcpServers": {
      "mcp-1panel": {
        "url": "http://localhost:8000/sse"
      }
    }
  },
  "dvcrn/mcp-server-siri-shortcuts": {
    "mcpServers": {
      "siri-shortcuts": {
        "command": "npx",
        "args": [
          "mcp-server-siri-shortcuts"
        ]
      }
    }
  },
  "tsmztech/mcp-server-salesforce": {
    "mcpServers": {
      "salesforce": {
        "command": "npx",
        "args": [
          "-y",
          "@tsmztech/mcp-server-salesforce"
        ],
        "env": {
          "SALESFORCE_CONNECTION_TYPE": "OAuth_2.0_Client_Credentials",
          "SALESFORCE_CLIENT_ID": "your_client_id",
          "SALESFORCE_CLIENT_SECRET": "your_client_secret",
          "SALESFORCE_INSTANCE_URL": "https://your-domain.my.salesforce.com"
        }
      }
    }
  },
  "StrawHatAI/claude-dev-tools": {
    "mcpServers": {
      "desktop-commander": {
        "command": "npx",
        "args": [
          "-y",
          "@wonderwhy-er/desktop-commander"
        ]
      }
    }
  },
  "meilisearch/meilisearch-mcp": {
    "mcpServers": {
      "meilisearch": {
        "command": "uvx",
        "args": [
          "-n",
          "meilisearch-mcp"
        ]
      }
    }
  },
  "Automata-Labs-team/MCP-Server-Playwright": {
    "mcpServers": {
      "playwright": {
        "command": "npx",
        "args": [
          "-y",
          "@automatalabs/mcp-server-playwright"
        ]
      }
    }
  },
  "mektigboy/server-hyperliquid": {
    "mcpServers": {
      "brave-search": {
        "command": "npx",
        "args": [
          "-y",
          "@mektigboy/server-hyperliquid"
        ]
      }
    }
  },
  "ZubeidHendricks/azure-onenote-mcp-server": {
    "mcpServers": {
      "onenote": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-onenote"
        ],
        "env": {
          "AZURE_TENANT_ID": "<YOUR_TENANT_ID>",
          "AZURE_CLIENT_ID": "<YOUR_CLIENT_ID>",
          "AZURE_CLIENT_SECRET": "<YOUR_CLIENT_SECRET>"
        }
      }
    }
  },
  "langfuse/mcp-server-langfuse": {
    "mcpServers": {
      "langfuse": {
        "command": "node",
        "args": [
          "<absolute-path>/build/index.js"
        ],
        "env": {
          "LANGFUSE_PUBLIC_KEY": "your-public-key",
          "LANGFUSE_SECRET_KEY": "your-secret-key",
          "LANGFUSE_BASEURL": "https://cloud.langfuse.com"
        }
      }
    }
  },
  "MCP-Mirror/felores_gdrive-mcp-server": {
    "mcpServers": {
      "gdrive": {
        "command": "node",
        "args": [
          "path/to/gdrive-mcp-server/dist/index.js"
        ],
        "env": {
          "GOOGLE_APPLICATION_CREDENTIALS": "path/to/gdrive-mcp-server/credentials/gcp-oauth.keys.json",
          "MCP_GDRIVE_CREDENTIALS": "path/to/gdrive-mcp-server/credentials/.gdrive-server-credentials.json"
        }
      }
    }
  },
  "nailuoGG/anki-mcp-server": {
    "mcpServers": {
      "anki": {
        "command": "npx",
        "args": [
          "--yes",
          "anki-mcp-server"
        ]
      }
    }
  },
  "openSVM/zig-mcp-server": {
    "mcpServers": {
      "zig": {
        "command": "node",
        "args": [
          "/path/to/zig-mcp-server/build/index.js"
        ],
        "env": {
          "GITHUB_TOKEN": "your_token_here",
          "NODE_OPTIONS": "--experimental-vm-modules"
        },
        "restart": true
      }
    }
  },
  "frozenlib/mcp-attr-example-cargo-metadata": {
    "mcpServers": {
      "cargo-metadata": {
        "command": "path/to/mcp-attr-example-cargo-metadata"
      }
    }
  },
  "netboxlabs/netbox-mcp-server": {
    "mcpServers": {
      "netbox": {
        "command": "uv",
        "args": [
          "--directory",
          "/path/to/netbox-mcp-server",
          "run",
          "server.py"
        ],
        "env": {
          "NETBOX_URL": "https://netbox.example.com/",
          "NETBOX_TOKEN": "<your-api-token>"
        }
      }
    }
  },
  "QuantGeekDev/docker-mcp": {
    "mcpServers": {
      "docker-mcp": {
        "command": "uvx",
        "args": [
          "docker-mcp"
        ]
      }
    }
  },
  "MCP-Mirror/alexgoller_illumio-mcp-server": {
    "mcpServers": {
      "illumio-mcp": {
        "command": "uv",
        "args": [
          "--directory",
          "/Users/alex.goller/git/illumio-mcp",
          "run",
          "illumio-mcp"
        ],
        "env": {
          "PCE_HOST": "your-pce-host",
          "PCE_PORT": "your-pce-port",
          "PCE_ORG_ID": "1",
          "API_KEY": "api_key",
          "API_SECRET": "api_secret"
        }
      }
    }
  },
  "MCP-Mirror/aldrin-labs_solana-docs-mcp-server": {
    "mcpServers": {
      "solana-docs-server": {
        "command": "/path/to/solana-docs-server/build/index.js"
      }
    }
  },
  "allenporter/mcp-server-home-assistant": {
    "mcpServers": {
      "Home-assistant": {
        "command": "uv",
        "args": [
          "--directory",
          "/Users/allen/Development/mcp-server-home-assistant",
          "run",
          "mcp-server-home-assistant",
          "-v",
          "-v"
        ],
        "env": {
          "HOME_ASSISTANT_WEB_SOCKET_URL": "http://localhost:8123/api/websocket",
          "HOME_ASSISTANT_API_TOKEN": "byJhbVci0iJIUzI1ii1sInR5cCI6IkpXVCJ9....."
        }
      }
    }
  },
  "AI-FE/dify-mcp-server": {
    "mcpServers": {
      "dify-server": {
        "command": "node",
        "args": [
          "your/path/dify-server/build/index.js"
        ],
        "env": {
          "DIFY_API_KEY": "***"
        }
      }
    }
  },
  "WilliamCloudQi/matlab-mcp-server": {
    "mcpServers": {
      "matlab-server": {
        "command": "node",
        "args": [
          "/path/to/matlab-server/build/index.js"
        ],
        "env": {
          "MATLAB_PATH": "/path/to/matlab/executable"
        },
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "ducthinh993/mcp-server-endoflife": {
    "mcpServers": {
      "eol": {
        "command": "npx",
        "args": [
          "/path/to/eol-mcp-server/build/index.js"
        ]
      }
    }
  },
  "kouui/web-search-duckduckgo": {
    "mcpServers": {
      "web-search-duckduckgo": {
        "command": "uv",
        "args": [
          "--directory",
          "/path/to/web-search-duckduckgo",
          "run",
          "main.py"
        ]
      }
    }
  },
  "ryaker/MCP-JS-Server-Template": {
    "mcpServers": {
      "template-server": {
        "command": "node",
        "args": [
          "/full/path/to/simplified-template-mcp-server.js"
        ],
        "env": {
          "NODE_OPTIONS": "--no-deprecation"
        }
      }
    }
  },
  "SailFish-Finance/educhain-ai-agent-kit": {
    "mcpServers": {
      "sailfish": {
        "command": "node",
        "args": [
          "/path/to/SubgraphMCP/build/index.js"
        ],
        "env": {
          "RPC_URL": "https://your-edu-rpc-url.com"
        }
      }
    }
  },
  "browserbase/mcp-server-browserbase.git": {
    "mcpServers": {
      "baidu-map": {
        "command": "npx",
        "args": [
          "-y",
          "@baidumap/mcp-server-baidu-map"
        ],
        "env": {
          "BAIDU_MAP_API_KEY": "xxx"
        }
      }
    }
  },
  "MCP-Mirror/allenporter_mcp-server-home-assistant": {
    "mcpServers": {
      "Home-assistant": {
        "command": "uv",
        "args": [
          "--directory",
          "/Users/allen/Development/mcp-server-home-assistant",
          "run",
          "mcp-server-home-assistant",
          "-v",
          "-v"
        ],
        "env": {
          "HOME_ASSISTANT_WEB_SOCKET_URL": "http://localhost:8123/api/websocket",
          "HOME_ASSISTANT_API_TOKEN": "byJhbVci0iJIUzI1ii1sInR5cCI6IkpXVCJ9....."
        }
      }
    }
  },
  "MCP-Mirror/KBB99_mcp-registry-server": {
    "mcpServers": {
      "mcp-registry-server": {
        "command": "node",
        "args": [
          "./path/to/build/mcp-registry-server/dist/index.js"
        ]
      }
    }
  },
  "junjiem/dify-plugin-agent-mcp_sse": {
    "mcpServers": {
      "server_name1": {
        "url": "http://127.0.0.1:8000/sse",
        "headers": {},
        "timeout": 60,
        "sse_read_timeout": 300
      },
      "server_name2": {
        "url": "http://127.0.0.1:8001/sse"
      }
    }
  },
  "suhail-ak-s/mcp-typesense-server": {
    "mcpServers": {
      "typesense": {
        "command": "npx",
        "args": [
          "-y",
          "typesense-mcp-server",
          "--host",
          "your-typesense-host",
          "--port",
          "8108",
          "--protocol",
          "http",
          "--api-key",
          "your-api-key"
        ]
      }
    }
  },
  "mohammeduvaiz/figma-mcp-server": {
    "mcpServers": {
      "figma-mcp": {
        "url": "http://localhost:3000/sse",
        "env": {
          "API_KEY": "your_secure_api_key"
        }
      }
    }
  },
  "everaldo/mcp-mistral-ocr": {
    "mcpServers": {
      "mistral-ocr": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "-e",
          "MISTRAL_API_KEY",
          "-e",
          "OCR_DIR",
          "-v",
          "C:/path/to/your/files:/data/ocr",
          "mcp-mistral-ocr:latest"
        ],
        "env": {
          "MISTRAL_API_KEY": "<YOUR_MISTRAL_API_KEY>",
          "OCR_DIR": "C:/path/to/your/files"
        }
      }
    }
  },
  "Sunwood-ai-labs/aira-mcp-server": {
    "mcpServers": {
      "aira": {
        "command": "node",
        "args": [
          "path/to/aira-mcp-server/build/index.js"
        ]
      }
    }
  },
  "trevorwilkerson/Windows-MCP-Server-Installation-Verification-Guide": {
    "mcpServers": {
      "sequential-thinking": {
        "command": "C:\\Program Files\\odejs\\ode.exe",
        "args": [
          "C:\\Users\\Username\\AppData\\Roaming\\pm\\ode_modules\\@modelcontextprotocol\\server-sequential-thinking\\dist\\index.js"
        ]
      }
    }
  },
  "qianniuspace/mcp-security-audit": {
    "mcpServers": {
      "mcp-security-audit": {
        "command": "npx",
        "args": [
          "-y",
          "/path/to/mcp-security-audit/build/index.js"
        ]
      }
    }
  },
  "imankamyabi/dynamodb-mcp-server": {
    "mcpServers": {
      "dynamodb": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "-e",
          "AWS_ACCESS_KEY_ID",
          "-e",
          "AWS_SECRET_ACCESS_KEY",
          "-e",
          "AWS_REGION",
          "-e",
          "AWS_SESSION_TOKEN",
          "mcp/dynamodb-mcp-server"
        ],
        "env": {
          "AWS_ACCESS_KEY_ID": "your_access_key",
          "AWS_SECRET_ACCESS_KEY": "your_secret_key",
          "AWS_REGION": "your_region",
          "AWS_SESSION_TOKEN": "your_session_token"
        }
      }
    }
  },
  "jzinno/biomart-mcp": {
    "mcpServers": {
      "Biomart": {
        "command": "uv",
        "args": [
          "run",
          "--with",
          "mcp[cli]",
          "--with",
          "pybiomart",
          "mcp",
          "run",
          "/your/path/to/biomart-mcp.py"
        ]
      }
    }
  },
  "piplabs/story-sdk-mcp": {
    "mcpServers": {
      "storyscan-mcp": {
        "command": "uv",
        "args": [
          "--directory",
          "~/path/to/story-mcp-hub/storyscan-mcp",
          "run",
          "server.py"
        ]
      },
      "story-sdk-mcp": {
        "command": "uv",
        "args": [
          "--directory",
          "~/path/to/story-mcp-hub/story-sdk-mcp",
          "run",
          "server.py"
        ]
      }
    }
  },
  "AzureCosmosDB/azure-cosmos-mcp-server": {
    "mcpServers": {
      "cosmosdb": {
        "command": "node",
        "args": [
          "C:/Cosmos/azure-cosmos-mcp/dist/index.js"
        ],
        "env": {
          "COSMOSDB_URI": "Your Cosmos DB Account URI",
          "COSMOSDB_KEY": "Your Cosmos DB KEY",
          "COSMOS_DATABASE_ID": "Your Database ID",
          "COSMOS_CONTAINER_ID": "Vehicles"
        }
      }
    }
  },
  "YanxingLiu/dify-mcp-server": {
    "mcpServers": {
      "mcp-server-rag-web-browser": {
        "command": "uv",
        "args": [
          "--directory",
          "/Users/lyx/Downloads/dify-mcp-server",
          "run",
          "dify_mcp_server"
        ],
        "env": {
          "CONFIG_PATH": "/Users/lyx/Downloads/config.yaml"
        }
      }
    }
  },
  "MCP-Mirror/DMontgomery40_deepseek-mcp-server": {
    "mcpServers": {
      "deepseek": {
        "command": "npx",
        "args": [
          "-y",
          "deepseek-mcp-server"
        ],
        "env": {
          "DEEPSEEK_API_KEY": "your-api-key"
        }
      }
    }
  },
  "techspawn/mcp-turboclient": {
    "mcpServers": {
      "server1": {
        "command": "your_command",
        "args": [
          "arg1",
          "arg2"
        ]
      },
      "server2": {
        "command": "another_command",
        "args": [
          "arg1",
          "arg2"
        ]
      }
    }
  },
  "jjsantos01/qgis_mcp": {
    "mcpServers": {
      "qgis": {
        "command": "uv",
        "args": [
          "--directory",
          "/ABSOLUTE/PATH/TO/PARENT/REPO/FOLDER/qgis_mcp/src/qgis_mcp",
          "run",
          "qgis_mcp_server.py"
        ]
      }
    }
  },
  "MCP-Mirror/d-kimuson_esa-mcp-server": {
    "mcpServers": {
      "esa-mcp-server": {
        "command": "npx",
        "args": [
          "-y",
          "esa-mcp-server@latest"
        ]
      },
      "env": {
        "ESA_API_KEY": "your api key here",
        "DEFAULT_ESA_TEAM": "your default esa team"
      }
    }
  },
  "starbops/harvester-mcp-server": {
    "mcpServers": {
      "harvester": {
        "command": "/path/to/harvester-mcp-server",
        "args": [
          "--kubeconfig",
          "/path/to/kubeconfig.yaml",
          "--log-level",
          "info"
        ]
      }
    }
  },
  "comet-ml/opik-mcp": {
    "mcpServers": {
      "opik": {
        "command": "/path/to/node",
        "args": [
          "/path/to/opik-mcp/build/index.js",
          "--apiUrl",
          "https://www.comet.com/opik/api",
          "--apiKey",
          "YOUR_API_KEY",
          "--workspace",
          "default",
          "--debug",
          "true"
        ],
        "env": {
          "OPIK_API_BASE_URL": "https://www.comet.com/opik/api",
          "OPIK_API_KEY": "YOUR_API_KEY",
          "OPIK_WORKSPACE_NAME": "default"
        }
      }
    }
  },
  "ccc0168/modes-mcp-server": {
    "mcpServers": {
      "modes": {
        "command": "node",
        "args": [
          "/path/to/modes-mcp-server/build/index.js"
        ],
        "env": {
          "MODES_CONFIG_PATH": "/path/to/custom/modes.json"
        },
        "disabled": false,
        "alwaysAllow": []
      }
    }
  },
  "ymadd/shadcn-ui-mcp-server": {
    "mcpServers": {
      "shadcn-ui-server": {
        "command": "/path/to/shadcn-ui-server/build/index.js"
      }
    }
  },
  "MCP-Mirror/peterparker57_cpp-builder-mcp-server": {
    "mcpServers": {
      "cpp-builder": {
        "command": "node",
        "args": [
          "path/to/cpp-builder-mcp-server/dist/index.js"
        ],
        "env": {}
      }
    }
  },
  "openbnb-org/mcp-server-airbnb": {
    "mcpServers": {
      "airbnb": {
        "command": "npx",
        "args": [
          "-y",
          "@openbnb/mcp-server-airbnb",
          "--ignore-robots-txt"
        ]
      }
    }
  },
  "YuChenSSR/mindmap-mcp-server": {
    "mcpServers": {
      "mindmap-converter": {
        "command": "docker",
        "args": [
          "run",
          "--rm",
          "-i",
          "-v",
          "/path/to/output/folder:/output",
          "ychen94/mindmap-converter-mcp:latest"
        ]
      }
    }
  },
  "2b3pro/markdown2pdf-mcp": {
    "mcpServers": {
      "markdown2pdf": {
        "command": "node",
        "args": [
          "path/to/markdown2pdf-mcp/build/index.js"
        ],
        "env": {
          "M2P_OUTPUT_DIR": "/path/to/output/directory"
        }
      }
    }
  },
  "anarcher/raindrop-io-mcp-server": {
    "mcpServers": {
      "raindrop": {
        "command": "/path/to/raindrop-mcp-server",
        "env": {
          "RAINDROP_TOKEN": "your_access_token_here"
        }
      }
    }
  },
  "MCP-Mirror/bmorphism_slowtime-mcp-server": {
    "mcpServers": {
      "slowtime": {
        "command": "node",
        "args": [
          "/path/to/slowtime-mcp-server/build/index.js"
        ]
      }
    }
  },
  "c-cf/imf-data-mcp": {
    "mcpServers": {
      "imf": {
        "command": "uvx",
        "args": [
          "imf-data-mcp"
        ]
      }
    }
  },
  "MCP-Mirror/Msparihar_mcp-server-firecrawl": {
    "mcpServers": {
      "firecrawl": {
        "command": "mcp-server-firecrawl",
        "env": {
          "FIRECRAWL_API_KEY": "your-api-key"
        }
      }
    }
  },
  "aldrin-labs/solana-docs-mcp-server": {
    "mcpServers": {
      "solana-docs-server": {
        "command": "/path/to/solana-docs-server/build/index.js"
      }
    }
  },
  "anpigon/mcp-server-obsidian-omnisearch": {
    "mcpServers": {
      "obsidian-omnisearch": {
        "command": "uvx",
        "args": [
          "mcp-server-obsidian-omnisearch",
          "/path/to/your/obsidian/vault"
        ]
      }
    }
  },
  "d-kimuson/esa-mcp-server": {
    "mcpServers": {
      "esa-mcp-server": {
        "command": "npx",
        "args": [
          "-y",
          "esa-mcp-server@latest"
        ],
        "env": {
          "ESA_API_KEY": "your api key here",
          "DEFAULT_ESA_TEAM": "your default esa team"
        }
      }
    }
  },
  "MCP-Mirror/baryhuang_mcp-server-any-openapi": {
    "mcpServers": {
      "any_openapi": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "-e",
          "OPENAPI_JSON_DOCS_URL=https://api.example.com/openapi.json",
          "-e",
          "MCP_API_PREFIX=finance",
          "buryhuang/mcp-server-any-openapi:latest"
        ]
      }
    }
  },
  "zxkane/mcp-server-amazon-bedrock": {
    "mcpServers": {
      "amazon-bedrock": {
        "command": "npx",
        "args": [
          "-y",
          "@zxkane/mcp-server-amazon-bedrock"
        ],
        "env": {
          "AWS_PROFILE": "your_profile_name",
          "AWS_ACCESS_KEY_ID": "your_access_key",
          "AWS_SECRET_ACCESS_KEY": "your_secret_key",
          "AWS_REGION": "us-east-1"
        }
      }
    }
  },
  "andylee20014/mcp-replicate-flux": {
    "mcpServers": {
      "redis": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-redis",
          "redis://localhost:6379"
        ]
      }
    }
  },
  "wrale/mcp-server-make": {
    "mcpServers": {
      "make": {
        "command": "uvx",
        "args": [
          "mcp-server-make",
          "--make-path",
          "/absolute/path/to/Makefile",
          "--working-dir",
          "/absolute/path/to/working/dir"
        ]
      }
    }
  },
  "formulahendry/mcp-server-code-runner": {
    "mcpServers": {
      "mcp-server-code-runner": {
        "command": "npx",
        "args": [
          "-y",
          "mcp-server-code-runner@latest"
        ]
      }
    }
  },
  "MCP-Mirror/wopal-cn_mcp-hotnews-server": {
    "mcpServers": {
      "mcp-server-hotnews": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "wopal/mcp-server-hotnews"
        ]
      }
    }
  },
  "MCP-Mirror/cyanheads_git-mcp-server": {
    "mcpServers": {
      "git": {
        "command": "node",
        "args": [
          "/path/to/git-mcp-server/build/index.js"
        ],
        "env": {
          "GIT_DEFAULT_PATH": "/optional/default/path/for/git/operations"
        }
      }
    }
  },
  "MCP-Mirror/roychri_mcp-server-asana": {
    "mcpServers": {
      "asana": {
        "command": "npx",
        "args": [
          "-y",
          "@roychri/mcp-server-asana"
        ],
        "env": {
          "ASANA_ACCESS_TOKEN": "your-asana-access-token"
        }
      }
    }
  },
  "ThreatFlux/YaraFlux": {
    "mcpServers": {
      "yaraflux-mcp-server": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "--env",
          "JWT_SECRET_KEY=your-secret-key",
          "--env",
          "ADMIN_PASSWORD=your-admin-password",
          "--env",
          "DEBUG=true",
          "--env",
          "PYTHONUNBUFFERED=1",
          "threatflux/yaraflux-mcp-server:latest"
        ],
        "disabled": false,
        "autoApprove": [
          "scan_url",
          "scan_data",
          "list_yara_rules",
          "get_yara_rule"
        ]
      }
    }
  },
  "MCP-Mirror/GongRzhe_Gmail-MCP-Server": {
    "mcpServers": {
      "gmail": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "-v",
          "mcp-gmail:/gmail-server",
          "-e",
          "GMAIL_CREDENTIALS_PATH=/gmail-server/credentials.json",
          "mcp/gmail"
        ]
      }
    }
  },
  "pnizer/wweb-mcp": {
    "mcpServers": {
      "whatsapp": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "wweb-mcp:latest",
          "-m",
          "mcp",
          "-s",
          "local",
          "-c",
          "api",
          "-t",
          "command",
          "--api-base-url",
          "http://host.docker.internal:3001/api",
          "--api-key",
          "1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"
        ]
      }
    }
  },
  "maquina-app/rails-mcp-server": {
    "mcpServers": {
      "railsMcpServer": {
        "command": "ruby",
        "args": [
          "/full/path/to/rails-mcp-server/exe/rails-mcp-server"
        ]
      }
    }
  },
  "delorenj/mcp-server-ticketmaster": {
    "mcpServers": {
      "ticketmaster": {
        "command": "npx",
        "args": [
          "-y",
          "@delorenj/mcp-server-ticketmaster"
        ],
        "env": {
          "TICKETMASTER_API_KEY": "your-api-key-here"
        }
      }
    }
  },
  "MCP-Mirror/Alesion30_my-mcp-server": {
    "mcpServers": {
      "myMcp": {
        "command": "node",
        "args": [
          "xxx/my-mcp-server/build/main.js"
        ]
      }
    }
  },
  "ibraheem4/linear-mcp": {
    "mcpServers": {
      "linear-mcp": {
        "command": "node",
        "args": [
          "/path/to/linear-mcp/build/index.js"
        ],
        "env": {
          "LINEAR_API_KEY": "your-api-key-here"
        },
        "disabled": false,
        "alwaysAllow": []
      }
    }
  },
  "j4ckp0t85/Figma-Context-MCP-tokens": {
    "mcpServers": {
      "figma-developer-mcp": {
        "command": "npx",
        "args": [
          "-y",
          "figma-developer-mcp",
          "--stdio"
        ],
        "env": {
          "FIGMA_API_KEY": "<your-figma-api-key>"
        }
      }
    }
  },
  "moyu6027/deepseek-MCP-server": {
    "mcpServers": {
      "deepseek-mcp": {
        "command": "uv",
        "args": [
          "--directory",
          "PATH_TO_DEEPSEEK_MCP_SERVER",
          "run",
          "server.py"
        ]
      }
    }
  },
  "Dishant27/linkedin-mcp-server": {
    "mcpServers": {
      "linkedin": {
        "command": "node",
        "args": [
          "/absolute/path/to/linkedin-mcp-server/dist/index.js"
        ],
        "env": {
          "LINKEDIN_CLIENT_ID": "your_client_id",
          "LINKEDIN_CLIENT_SECRET": "your_client_secret"
        }
      }
    }
  },
  "AudienseCo/mcp-tweetbinder": {
    "mcpServers": {
      "tweetbinder": {
        "command": "node",
        "args": [
          "/absolute/path/to/build/index.js"
        ],
        "env": {
          "TWEETBINDER_API_TOKEN": "your-bearer-token-here"
        }
      }
    }
  },
  "obinopaul/soccer-mcp-server": {
    "mcpServers": {
      "soccer_server": {
        "command": "/path/to/your/python",
        "args": [
          "/path/to/soccer_server.py"
        ],
        "env": {
          "RAPID_API_KEY_FOOTBALL": "your_api_key_here"
        }
      }
    }
  },
  "yamaton/mcp-dice": {
    "mcpServers": {
      "dice": {
        "command": "wsl",
        "args": [
          "-e",
          "zsh",
          "-lc",
          "uv run --directory path/to/mcp-dice-repo mcp-dice"
        ]
      }
    }
  },
  "orbit-logistics/notion-mcp-server": {
    "mcpServers": {
      "notion": {
        "command": "npx",
        "args": [
          "-y",
          "mcp-sequential-thinking-test",
          "-t",
          "<notion_integration_token>"
        ]
      }
    }
  },
  "Nazruden/clickup-mcp-server": {
    "mcpServers": {
      "clickup": {
        "command": "npx",
        "args": [
          "@mcp/clickup-server"
        ],
        "env": {
          "CLICKUP_CLIENT_ID": "your_client_id",
          "CLICKUP_CLIENT_SECRET": "your_client_secret",
          "CLICKUP_REDIRECT_URI": "http://localhost:3000/oauth/callback"
        }
      }
    }
  },
  "hanweg/mcp-pdf-tools": {
    "mcpServers": {
      "pdf-tools": {
        "command": "uv",
        "args": [
          "--directory",
          "PATH_TO\\mcp-pdf-tools",
          "run",
          "pdf-tools"
        ]
      }
    }
  },
  "v-3/discordmcp": {
    "mcpServers": {
      "discord": {
        "command": "node",
        "args": [
          "path/to/discordmcp/build/index.js"
        ],
        "env": {
          "DISCORD_TOKEN": "your_discord_bot_token_here"
        }
      }
    }
  },
  "weetime/prometheus-mcp-server": {
    "mcpServers": {
      "prometheus-mcp-server": {
        "command": "npx prometheus-mcp-server",
        "env": {
          "PROMETHEUS_HOST": "http://your-prometheus-instance:9090"
        }
      }
    }
  },
  "MCP-Mirror/ducthinh993_mcp-server-endoflife": {
    "mcpServers": {
      "eol": {
        "command": "npx",
        "args": [
          "/path/to/eol-mcp-server/build/index.js"
        ]
      }
    }
  },
  "executeautomation/mcp-playwright": {
    "mcpServers": {
      "playwright": {
        "command": "npx",
        "args": [
          "-y",
          "@executeautomation/playwright-mcp-server"
        ]
      }
    }
  },
  "MCP-Mirror/ajbr0wn_gmail-mcp-server": {
    "mcpServers": {
      "gmail": {
        "command": "/path/to/conda/envs/mcp-gmail/bin/python",
        "args": [
          "-m",
          "gmail_mcp_server.server"
        ],
        "env": {
          "PYTHONPATH": "/path/to/gmail-mcp-server/src",
          "GMAIL_CREDENTIALS_FILE": "/path/to/credentials.json",
          "GMAIL_TOKEN_FILE": "/path/to/token.json"
        }
      }
    }
  },
  "evalstate/mcp-miro": {
    "mcpServers": {
      "mcp-miro": {
        "command": "/path/to/node-or-npx",
        "arguments": [
          "/path/to/mcp-miro/build/index.js",
          "--token",
          "MIRO-OAUTH-KEY"
        ]
      }
    }
  },
  "fred-em/headline-vibes": {
    "mcpServers": {
      "headline-vibes": {
        "command": "node",
        "args": [
          "/path/to/headline-vibes/build/index.mjs"
        ],
        "env": {
          "NEWS_API_KEY": "your-api-key-here"
        },
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "delano/postman-mcp-server": {
    "mcpServers": {
      "postman": {
        "command": "node",
        "args": [
          "/path/to/postman-api-server/build/index.js"
        ],
        "env": {
          "POSTMAN_API_KEY": "CHANGEME"
        }
      }
    }
  },
  "rahul-roy-glean/glean-mcp-server": {
    "mcpServers": {
      "glean": {
        "command": "uv",
        "args": [
          "--directory",
          "<PATH_TO_CHECKOUT>",
          "run",
          "glean_server.py"
        ]
      }
    }
  },
  "cheqd/mcp-toolkit": {
    "mcpServers": {
      "Cheqd": {
        "command": "npx",
        "args": [
          "-y",
          "@cheqd/mcp-toolkit"
        ],
        "env": {
          "TOOLS": "credo,<other available tools>"
        }
      }
    }
  },
  "dinghuazhou/sample-mcp-server-tos": {
    "mcpServers": {
      "TOS-mcp-server": {
        "command": "uvx",
        "args": [
          "tos-mcp-server"
        ]
      }
    }
  },
  "MCP-Mirror/steel-dev_steel-mcp-server": {
    "mcpServers": {
      "steel-puppeteer": {
        "command": "node",
        "args": [
          "path/to/steel-puppeteer/dist/index.js"
        ],
        "env": {
          "STEEL_LOCAL": "false",
          "STEEL_API_KEY": "your_api_key_here"
        }
      }
    }
  },
  "kevinwatt/mysql-mcp": {
    "mcpServers": {
      "mysql": {
        "command": "npx",
        "args": [
          "-y",
          "@kevinwatt/mysql-mcp"
        ],
        "env": {
          "MYSQL_HOST": "127.0.0.1",
          "MYSQL_PORT": "3306",
          "MYSQL_USER": "root",
          "MYSQL_PASS": "",
          "MYSQL_DB": "your_database"
        }
      }
    }
  },
  "aitiwari/weather": {
    "mcpServers": {
      "baidu-map": {
        "command": "npx",
        "args": [
          "-y",
          "@baidumap/mcp-server-baidu-map"
        ],
        "env": {
          "BAIDU_MAP_API_KEY": "xxx"
        }
      }
    }
  },
  "win4r/arxiv-search-MCP-Server": {
    "mcpServers": {
      "arxiv-search": {
        "command": "node",
        "args": [
          "/path/to/arxiv-search/build/index.js"
        ],
        "disabled": false,
        "alwaysAllow": []
      }
    }
  },
  "junyuan-qi/lark-mcp-server": {
    "mcpServers": {
      "lark-mcp-server": {
        "command": "node",
        "args": [
          "/path/to/lark-mcp-server/build/index.js"
        ],
        "env": {
          "LARK_APP_ID": "your_app_id",
          "LARK_APP_SECRET": "your_app_secret",
          "LARK_USER_ID": "target_user_id",
          "LARK_CALENDAR_ID": "target_calendar_id",
          "LARK_USER_ACCESS_TOKEN": "your_user_access_token"
        }
      }
    }
  },
  "okooo5km/memory-mcp-server": {
    "mcpServers": {
      "memory": {
        "command": "memory-mcp-server",
        "env": {
          "MEMORY_FILE_PATH": "/path/to/your/memory.json"
        }
      }
    }
  },
  "mshk/mcp-rss-crawler": {
    "mcpServers": {
      "rss-crawler": {
        "command": "/path/to/bun",
        "args": [
          "run",
          "/path/to/mcp-rss-crawler/apps/mcp-server/src/mcp-cli.ts"
        ],
        "cwd": "/path/to/mcp-rss-crawler",
        "env": {
          "PORT": "5556",
          "DB_DIR": "/path/to/mcp-rss-crawler",
          "FIRECRAWL_API_KEY": "fc-<YOUR_FIRECRAWL_API_KEY>"
        }
      }
    }
  },
  "tekorex/mcp2http": {
    "mcpServers": {
      "my-mcp-server": {
        "command": "npx",
        "args": [
          "-y",
          "mcp2http",
          "https://example.com/mcp",
          "Authorization: Bearer token123"
        ]
      }
    }
  },
  "domdomegg/airtable-mcp-server": {
    "mcpServers": {
      "airtable": {
        "command": "npx",
        "args": [
          "-y",
          "airtable-mcp-server"
        ],
        "env": {
          "AIRTABLE_API_KEY": "pat123.abc123"
        }
      }
    }
  },
  "robertredbox/apptweak-mcp": {
    "mcpServers": {
      "apptweak-server": {
        "command": "node",
        "args": [
          "/path/to/apptweak-mcp/build/index.js"
        ],
        "env": {
          "APPTWEAK_API_KEY": "your-api-key-here"
        },
        "disabled": false,
        "alwaysAllow": []
      }
    }
  },
  "DumoeDss/mcp-server-software": {
    "mcpServers": {
      "software_manager": {
        "command": "python",
        "args": [
          "path/to/mcp_server_software.py"
        ]
      }
    }
  },
  "phact/mcp-google-docs": {
    "mcpServers": {
      "time": {
        "command": "python",
        "args": [
          "-m",
          "mcp_server_time"
        ]
      }
    }
  },
  "ihor-sokoliuk/mcp-searxng": {
    "mcpServers": {
      "searxng": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "-e",
          "SEARXNG_URL",
          "mcp-server-searxng:latest"
        ],
        "env": {
          "SEARXNG_URL": "YOUR_SEARXNG_INSTANCE_URL"
        }
      }
    }
  },
  "ClickHouse/mcp-clickhouse": {
    "mcpServers": {
      "mcp-clickhouse": {
        "command": "uv",
        "args": [
          "run",
          "--with",
          "mcp-clickhouse",
          "--python",
          "3.13",
          "mcp-clickhouse"
        ],
        "env": {
          "CLICKHOUSE_HOST": "<clickhouse-host>",
          "CLICKHOUSE_USER": "<clickhouse-user>",
          "CLICKHOUSE_PASSWORD": "<clickhouse-password>",
          "CLICKHOUSE_DATABASE": "<optional-database>"
        }
      }
    }
  },
  "MCP-Mirror/reminia_zendesk-mcp-server": {
    "mcpServers": {
      "zendesk": {
        "command": "uv",
        "args": [
          "--directory",
          "/path/to/zendesk-mcp-server",
          "run",
          "zendesk"
        ]
      }
    }
  },
  "kimtaeyoon83/mcp-server-youtube-transcript": {
    "mcpServers": {
      "youtube-transcript": {
        "command": "npx",
        "args": [
          "-y",
          "@kimtaeyoon83/mcp-server-youtube-transcript"
        ]
      }
    }
  },
  "jakeyShakey/umami_mcp_server": {
    "mcpServers": {
      "analytics_service": {
        "command": "uv",
        "args": [
          "--directory",
          "/path/to/analytics_service",
          "run",
          "analytics-service"
        ],
        "env": {
          "UMAMI_API_URL": "https://example.com",
          "UMAMI_USERNAME": "yourUmamiUsername",
          "UMAMI_PASSWORD": "yourUmamiPassword",
          "UMAMI_TEAM_ID": "yourUmamiTeamId"
        }
      }
    }
  },
  "baranwang/mcp-trends-hub": {
    "mcpServers": {
      "trends-hub": {
        "command": "npx",
        "args": [
          "-y",
          "mcp-trends-hub@latest"
        ]
      }
    }
  },
  "picahq/mcp-server": {
    "mcpServers": {
      "pica-mcp-server": {
        "command": "node",
        "args": [
          "/path/to/pica-mcp-server/build/index.js"
        ],
        "env": {
          "PICA_SECRET": "YOUR_PICA_SECRET_KEY"
        }
      }
    }
  },
  "mailgun/mailgun-mcp-server": {
    "mcpServers": {
      "mailgun": {
        "command": "node",
        "args": [
          "CHANGE/THIS/PATH/TO/mailgun-mcp-server/src/mailgun-mcp.js"
        ],
        "env": {
          "MAILGUN_API_KEY": "YOUR-mailgun-api-key"
        }
      }
    }
  },
  "ausboss/mcp-ollama-agent": {
    "mcpServers": {
      "filesystem": {
        "command": "npx",
        "args": [
          "@modelcontextprotocol/server-filesystem",
          "./"
        ]
      }
    },
    "ollama": {
      "host": "http://localhost:11434",
      "model": "qwen2.5:latest"
    }
  },
  "rahgadda/openapi_mcp_server": {
    "mcpServers": {
      "openapi_mcp_server": {
        "command": "uv",
        "args": [
          "run",
          "openapi_mcp_server"
        ],
        "env": {
          "DEBUG": "1",
          "API_BASE_URL": "https://petstore.swagger.io/v2",
          "OPENAPI_SPEC_PATH": "https://petstore.swagger.io/v2/swagger.json",
          "API_HEADERS": "Accept:application/json",
          "API_WHITE_LIST": "addPet,updatePet,findPetsByStatus"
        }
      }
    }
  },
  "stephen37/mcp-server-milvus": {
    "mcpServers": {
      "milvus": {
        "command": "/PATH/TO/uv",
        "args": [
          "--directory",
          "/path/to/mcp-server-milvus/src/mcp_server_milvus",
          "run",
          "server.py",
          "--milvus-uri",
          "http://127.0.0.1:19530"
        ]
      }
    }
  },
  "MCP-Mirror/gotoolkits_mcp-difyworkflow-server": {
    "mcpServers": {
      "mcp-difyworkflow-server": {
        "command": "mcp-difyworkflow-server",
        "args": [
          "-base-url",
          "http://localhost/v1"
        ],
        "env": {
          "DIFY_WORKFLOW_NAME": "workflow-translator\u00e2\u0080\u009c,workflow-genImag",
          "DIFY_API_KEYS": "appkey-xxxxxxxxxxxa,appkey-xxxxxxxxxxxb"
        }
      }
    }
  },
  "shuakami/mcp-download": {
    "mcpServers": {
      "download-mcp": {
        "command": "python3",
        "args": [
          "/home/\u00e4\u00bd\u00a0\u00e7\u009a\u0084\u00e7\u0094\u00a8\u00e6\u0088\u00b7\u00e5\u0090\u008d/mcp-download/bridging_download_mcp.py"
        ]
      }
    }
  },
  "adhikasp/mcp-client-cli": {
    "systemPrompt": "You are an AI assistant helping a software engineer...",
    "llm": {
      "provider": "openai",
      "model": "gpt-4",
      "api_key": "your-openai-api-key",
      "temperature": 0.7,
      "base_url": "https://api.openai.com/v1"
    },
    "mcpServers": {
      "fetch": {
        "command": "uvx",
        "args": [
          "mcp-server-fetch"
        ],
        "requires_confirmation": [
          "fetch"
        ],
        "enabled": true,
        "exclude_tools": []
      },
      "brave-search": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-brave-search"
        ],
        "env": {
          "BRAVE_API_KEY": "your-brave-api-key"
        },
        "requires_confirmation": [
          "brave_web_search"
        ]
      },
      "youtube": {
        "command": "uvx",
        "args": [
          "--from",
          "git+https://github.com/adhikasp/mcp-youtube",
          "mcp-youtube"
        ]
      }
    }
  },
  "MCP-Mirror/abhiz123_todoist-mcp-server": {
    "mcpServers": {
      "todoist": {
        "command": "npx",
        "args": [
          "-y",
          "@abhiz123/todoist-mcp-server"
        ],
        "env": {
          "TODOIST_API_TOKEN": "your_api_token_here"
        }
      }
    }
  },
  "MCP-Mirror/hmk_box-mcp-server": {
    "mcpServers": {
      "box": {
        "command": "npx",
        "args": [
          "box-mcp-server"
        ],
        "env": {
          "BOX_DEV_TOKEN": "YOUR_DEV_TOKEN_GOES_HERE"
        }
      }
    }
  },
  "amekala/adspirer-mcp-server": {
    "mcpServers": {
      "adspirer": {
        "command": "adspirer-mcp",
        "args": [
          "start"
        ],
        "env": {
          "API_KEY": "your_api_key_here"
        }
      }
    }
  },
  "nickgnd/tmux-mcp": {
    "mcpServers": {
      "tmux": {
        "command": "npx",
        "args": [
          "-y",
          "tmux-mcp",
          "--shell-type=fish"
        ]
      }
    }
  },
  "seyhunak/agentcraft-mcp": {
    "mcpServers": {
      "AgentCraft": {
        "command": "python",
        "args": [
          "-m",
          "agentcraft_mcp.server"
        ],
        "env": {
          "AGENTCRAFT_BEARER_TOKEN": "Your AgentCraft Bearer Token for authorization",
          "ENVIRONMENT": "PRODUCTION"
        }
      }
    }
  },
  "BigUncle/Fast-Whisper-MCP-Server": {
    "mcpServers": {
      "whisper": {
        "command": "python",
        "args": [
          "D:/path/to/whisper_server.py"
        ],
        "env": {}
      }
    }
  },
  "zenml-io/mcp-zenml": {
    "mcpServers": {
      "zenml": {
        "command": "/usr/local/bin/uv",
        "args": [
          "run",
          "path/to/zenml_server.py"
        ],
        "env": {
          "LOGLEVEL": "INFO",
          "NO_COLOR": "1",
          "PYTHONUNBUFFERED": "1",
          "PYTHONIOENCODING": "UTF-8",
          "ZENML_STORE_URL": "https://your-zenml-server-goes-here.com",
          "ZENML_STORE_API_KEY": "your-api-key-here"
        }
      }
    }
  },
  "zhsama/duckduckgo-mcp-server": {
    "online": {
      "mcpServers": {
        "duckduckgo-search": {
          "command": "npx",
          "args": [
            "-y",
            "duckduckgo-mcp-server"
          ]
        }
      }
    },
    "local": {
      "mcpServers": {
        "duckduckgo-search": {
          "command": "node",
          "args": [
            "/path/to/duckduckgo-search/build/index.js"
          ]
        }
      }
    }
  },
  "jonator/osmosis-agent-toolkit": {
    "mcpServers": {
      "Osmosis": {
        "command": "npx",
        "args": [
          "-y",
          "@osmosis-agent-toolkit/mcp"
        ],
        "env": {
          "OSMOSIS_MNEMONIC": "<your mnemonic here>"
        }
      }
    }
  },
  "mprokopov/ledger-mcp-server": {
    "mcpServers": {
      "ledger-service": {
        "command": "uvx",
        "args": [
          "ledger-service"
        ]
      }
    }
  },
  "strowk/mcp-k8s-go": {
    "mcpServers": {
      "mcp_k8s_go": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "-v",
          "~/.kube/config:/home/nonroot/.kube/config",
          "--rm",
          "mcpk8s/server:latest"
        ]
      }
    }
  },
  "Lullabot/tugboat-mcp": {
    "mcpServers": {
      "tugboat-mcp": {
        "command": "node",
        "args": [
          "/path/to/tugboat-mcp/dist/index.js"
        ],
        "env": {
          "TUGBOAT_API_KEY": "your-api-key-here"
        }
      }
    }
  },
  "puravparab/Gitingest-MCP": {
    "mcpServers": {
      "gitingest": {
        "command": "<path to uv>/uv",
        "args": [
          "run",
          "--with",
          "mcp[cli]",
          "--with-editable",
          "<path to gitingest-mcp project>/gitingest_mcp",
          "mcp",
          "run",
          "<path to gitingest-mcp project>/gitingest-mcp/src/gitingest_mcp/server.py"
        ]
      }
    }
  },
  "Heratiki/locallama-mcp": {
    "mcpServers": {
      "locallama": {
        "command": "node",
        "args": [
          "/path/to/locallama-mcp"
        ],
        "env": {
          "LM_STUDIO_ENDPOINT": "http://localhost:1234/v1",
          "OLLAMA_ENDPOINT": "http://localhost:11434/api",
          "DEFAULT_LOCAL_MODEL": "qwen2.5-coder-3b-instruct",
          "TOKEN_THRESHOLD": "1500",
          "COST_THRESHOLD": "0.02",
          "QUALITY_THRESHOLD": "0.07",
          "OPENROUTER_API_KEY": "your_openrouter_api_key_here"
        },
        "disabled": false
      }
    }
  },
  "jonfreeland/mongodb-mcp": {
    "mcpServers": {
      "mongodb": {
        "command": "node",
        "args": [
          "/path/to/mongodb-server/build/index.js"
        ],
        "env": {
          "MONGODB_URI": "mongodb://username:password@hostname:port/database",
          "MONGODB_DEFAULT_DATABASE": "your_default_db"
        }
      }
    }
  },
  "wpnbos/buienradar-mcp-server": {
    "mcpServers": {
      "precipitation": {
        "command": "uv",
        "args": [
          "--directory",
          "/ABSOLUTE/PATH/TO/PARENT/FOLDER/buienradar-mcp-server",
          "run",
          "server.py"
        ]
      }
    }
  },
  "TeamDman/mcp-server-hello": {
    "mcpServers": {
      "current-time": {
        "command": "mcp-rs-template",
        "args": [
          "--mcp"
        ],
        "env": {
          "API_KEY": "xxxx"
        }
      }
    }
  },
  "zenturacp/perplexity-server": {
    "mcpServers": {
      "perplexity-server": {
        "command": "/path/to/perplexity-server/build/index.js"
      }
    }
  },
  "MCP-Mirror/jakedahn_deno2-playwright-mcp-server": {
    "mcpServers": {
      "playwright": {
        "command": "/path/to/deno2-playwright-mcp-server/playwright-server"
      }
    }
  },
  "lifinance/lifi-mcp": {
    "mcpServers": {
      "lifi": {
        "command": "lifi-mcp",
        "args": [
          "server",
          "--keystore",
          "your-keystore",
          "--password",
          "your-password"
        ]
      }
    }
  },
  "idoru/influxdb-mcp-server": {
    "mcpServers": {
      "influxdb": {
        "command": "node",
        "args": [
          "/path/to/influxdb-mcp-server/src/index.js"
        ],
        "env": {
          "INFLUXDB_TOKEN": "your_token",
          "INFLUXDB_URL": "http://localhost:8086",
          "INFLUXDB_ORG": "your_org"
        }
      }
    }
  },
  "MattMorgis/nuanced-mcp": {
    "mcpServers": {
      "nuanced": {
        "command": "uv",
        "args": [
          "--directory",
          "/path/to/nuanced-mcp",
          "run",
          "nuanced_mcp_server.py"
        ]
      }
    }
  },
  "isaacphi/mcp-gdrive": {
    "mcpServers": {
      "gdrive": {
        "command": "npx",
        "args": [
          "-y",
          "@isaacphi/mcp-gdrive"
        ],
        "env": {
          "CLIENT_ID": "<CLIENT_ID>",
          "CLIENT_SECRET": "<CLIENT_SECRET>",
          "GDRIVE_CREDS_DIR": "/path/to/config/directory"
        }
      }
    }
  },
  "bitflower/mcp-servers": {
    "mcpServers": {
      "filesystem": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-filesystem",
          "/path/to/allowed/files"
        ]
      },
      "git": {
        "command": "uvx",
        "args": [
          "mcp-server-git",
          "--repository",
          "path/to/git/repo"
        ]
      },
      "github": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-github"
        ],
        "env": {
          "GITHUB_PERSONAL_ACCESS_TOKEN": "<YOUR_TOKEN>"
        }
      },
      "postgres": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-postgres",
          "postgresql://localhost/mydb"
        ]
      }
    }
  },
  "dhartunian/cockroachdb-mcp-server": {
    "mcpServers": {
      "crdb": {
        "command": "node",
        "args": [
          "/path/to/cockroachdb-mcp-server/dist/server.js",
          "postgres://root@127.0.0.1:26257/testdb",
          "your_auth_token"
        ]
      }
    }
  },
  "MCP-Mirror/JoshuaRileyDev_app-store-connect-mcp-server": {
    "mcpServers": {
      "app-store-connect": {
        "command": "npx",
        "args": [
          "-y",
          "@your-org/app-store-connect-mcp-server"
        ],
        "env": {
          "APP_STORE_CONNECT_KEY_ID": "YOUR_KEY_ID",
          "APP_STORE_CONNECT_ISSUER_ID": "YOUR_ISSUER_ID",
          "APP_STORE_CONNECT_P8_PATH": "/path/to/your/auth-key.p8"
        }
      }
    }
  },
  "a-ssign/tech-mcp-server": {
    "mcpServers": {
      "local": {
        "command": "deno",
        "args": [
          "run",
          "--allow-net",
          "--allow-env",
          "--allow-read",
          "/path/to/src/server.ts"
        ],
        "env": {},
        "disabled": false,
        "alwaysAllow": {
          "GITHUB_TOKEN": "ghp_xxxxx"
        }
      }
    }
  },
  "da-okazaki/mcp-neo4j-server": {
    "mcpServers": {
      "neo4j": {
        "command": "npx",
        "args": [
          "@alanse/mcp-neo4j-server"
        ],
        "env": {
          "NEO4J_URI": "bolt://localhost:7687",
          "NEO4J_USERNAME": "neo4j",
          "NEO4J_PASSWORD": "your-password"
        }
      }
    }
  },
  "dstotijn/mcp-dutch-postal-codes": {
    "mcpServers": {
      "dutch-postal-codes": {
        "command": "go",
        "args": [
          "run",
          "github.com/dstotijn/mcp-dutch-postal-codes@main"
        ]
      }
    }
  },
  "T1nker-1220/memories-with-lessons-mcp-server": {
    "mcpServers": {
      "memory": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-memory"
        ],
        "env": {
          "MEMORY_FILE_PATH": "/path/to/custom/memory.json"
        }
      }
    }
  },
  "MCP-Mirror/fireproof-storage_mcp-database-server": {
    "mcpServers": {
      "fireproof": {
        "command": "/path/to/fireproof-mcp/build/index.js"
      }
    }
  },
  "MCP-Mirror/laodev1_perplexity-mcp-server": {
    "mcpServers": {
      "perplexity": {
        "command": "node",
        "args": [
          "path\\to\\perplexity-mcp-server\\dist\\index.js"
        ],
        "env": {
          "PERPLEXITY_API_KEY": "YOUR_PERPLEXITY_API_KEY"
        }
      }
    }
  },
  "alxspiker/Windows-Command-Line-MCP-Server": {
    "mcpServers": {
      "windows-cmd": {
        "command": "node",
        "args": [
          "/path/to/dist/index.js"
        ]
      }
    }
  },
  "btwiuse/npm-search-mcp-server": {
    "mcpServers": {
      "npm-search": {
        "command": "uvx",
        "args": [
          "npm-search-mcp-server"
        ]
      }
    }
  },
  "kagisearch/kagimcp": {
    "mcpServers": {
      "kagi": {
        "command": "uv",
        "args": [
          "--directory",
          "/ABSOLUTE/PATH/TO/PARENT/FOLDER/kagimcp",
          "run",
          "kagimcp"
        ],
        "env": {
          "KAGI_API_KEY": "YOUR_API_KEY_HERE",
          "KAGI_SUMMARIZER_ENGINE": "YOUR_ENGINE_CHOICE_HERE"
        }
      }
    }
  },
  "CamdenClark/anki-mcp-server": {
    "mcpServers": {
      "anki-mcp": {
        "command": "node",
        "args": [
          "d:\\anki-mcp-server\\build\\index.js"
        ]
      }
    }
  },
  "runekaagaard/mcp-alchemy": {
    "mcpServers": {
      "my_cratedb": {
        "command": "uvx",
        "args": [
          "--from",
          "mcp-alchemy==2025.04.09.091234",
          "--with",
          "sqlalchemy-cratedb>=0.42.0.dev1",
          "mcp-alchemy"
        ],
        "env": {
          "DB_URL": "crate://user:password@localhost:4200/?schema=testdrive"
        }
      }
    }
  },
  "hvkshetry/autocad-mcp": {
    "mcpServers": {
      "autocad-lisp": {
        "command": "path\\to\\autocad-mcp\\venv\\Scripts\\python.exe",
        "args": [
          "path\\to\\autocad-mcp\\server_lisp.py"
        ]
      }
    }
  },
  "ibraheem4/clover-mcp": {
    "mcpServers": {
      "clover": {
        "command": "npx",
        "args": [
          "-y",
          "@ibraheem4/clover-mcp"
        ],
        "env": {
          "CLOVER_CLIENT_ID": "your-clover-client-id",
          "CLOVER_CLIENT_SECRET": "your-clover-client-secret",
          "CLOVER_BASE_URL": "https://apisandbox.dev.clover.com"
        },
        "disabled": false,
        "autoApprove": [
          "initiate_oauth_flow",
          "get_merchant_info",
          "list_inventory",
          "list_orders"
        ]
      }
    }
  },
  "MCP-Mirror/HarshJ23_deepseek-claude-MCP-server": {
    "mcpServers": {
      "deepseek-claude": {
        "command": "uv",
        "args": [
          "--directory",
          "C:\\ABSOLUTE\\PATH\\TO\\PARENT\\FOLDER\\deepseek-claude",
          "run",
          "server.py"
        ]
      }
    }
  },
  "jagan-shanmugam/mattermost-mcp-bridge": {
    "mcpServers": {
      "ollama-mcp-server": {
        "command": "python",
        "args": [
          "ollama-mcp-server/src/ollama_mcp_server/main.py"
        ],
        "type": "stdio"
      },
      "simple-mcp-server": {
        "command": "python",
        "args": [
          "simple-mcp-server/server.py"
        ],
        "type": "stdio"
      },
      "mattermost-mcp-server": {
        "command": "python",
        "args": [
          "mattermost-mcp-server/src/mattermost_mcp_server/server.py"
        ],
        "type": "stdio"
      }
    }
  },
  "GMKR/mcp-imagegen": {
    "mcpServers": {
      "imagegenerator": {
        "command": "pnpx",
        "args": [
          "-y",
          "tsx",
          "/path/to/mcp-imagegen/src/index.ts"
        ],
        "env": {
          "PROVIDER": "replicate",
          "REPLICATE_API_TOKEN": "your-replicate-api-token"
        }
      }
    }
  },
  "crazyrabbitLTC/mcp-snapshot-server": {
    "mcpServers": {
      "snapshot": {
        "command": "node",
        "args": [
          "/ABSOLUTE/PATH/TO/snapshot-server/build/index.js"
        ]
      }
    }
  },
  "bingal/FastDomainCheck-MCP-Server": {
    "mcpServers": {
      "fastdomaincheck": {
        "command": "path/to/FastDomainCheck-MCP-Server.exe",
        "args": []
      }
    }
  },
  "cardinalblue/prompt-book-mcp-server": {
    "mcpServers": {
      "prompt-book-server": {
        "command": "npx",
        "args": [
          "-y",
          "@piccollage/prompt-book-mcp-server"
        ],
        "disabled": false,
        "alwaysAllow": []
      }
    }
  },
  "Tomocrystal/generate_image-mcp-server": {
    "mcpServers": {
      "genimg-mcp": {
        "command": "/path/to/genimg-mcp/dist/index.js",
        "env": {
          "OPENAI_API_KEY": "sk-xxxxx",
          "OPENAI_MODEL_ID": "dall-e-3"
        }
      }
    }
  },
  "GongRzhe/Image-Generation-MCP-Server": {
    "mcpServers": {
      "image-gen": {
        "command": "node",
        "args": [
          "/path/to/image-gen-server/build/index.js"
        ],
        "env": {
          "REPLICATE_API_TOKEN": "your-replicate-api-token",
          "MODEL": "alternative-model-name"
        },
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "quazaai/UnityMCPIntegration": {
    "mcpServers": {
      "unity-mcp-server": {
        "command": "node",
        "args": [
          "<path-to-project>/mcpServer/build/index.js"
        ]
      }
    }
  },
  "RafalWilinski/aws-mcp": {
    "mcpServers": {
      "aws": {
        "command": "/Users/<USERNAME>/.nvm/versions/node/v20.10.0/bin/node",
        "args": [
          "<WORKSPACE_PATH>/aws-mcp/node_modules/tsx/dist/cli.mjs",
          "<WORKSPACE_PATH>/aws-mcp/index.ts",
          "--prefix",
          "<WORKSPACE_PATH>/aws-mcp",
          "start"
        ]
      }
    }
  },
  "MCP-Mirror/shaike1_mcp-server-ssh": {
    "mcpServers": {
      "ssh": {
        "command": "node",
        "args": [
          "%APPDATA%/npm/node_modules/mcp-ssh/dist/server.js"
        ],
        "env": {
          "SSH_PORT": "8889",
          "SSH_LOG_LEVEL": "info"
        }
      }
    }
  },
  "simonberner/mcp-server-calculator": {
    "mcpServers": {
      "calculator": {
        "command": "python",
        "args": [
          "<YOUR-PATH>/mcp-server-calculator/src/mcp_server_calculator/calculator.py"
        ]
      }
    }
  },
  "niledatabase/nile-mcp-server": {
    "mcpServers": {
      "nile-database": {
        "command": "node",
        "args": [
          "/path/to/your/nile-mcp-server/dist/index.js"
        ],
        "env": {
          "NILE_API_KEY": "your_api_key_here",
          "NILE_WORKSPACE_SLUG": "your_workspace_slug"
        }
      }
    }
  },
  "MCP-Mirror/yosider_cosense-mcp-server": {
    "mcpServers": {
      "cosense-mcp-server": {
        "command": "node",
        "args": [
          "/path/to/cosense-mcp-server/build/index.js"
        ],
        "env": {
          "COSENSE_PROJECT_NAME": "your_project_name",
          "COSENSE_SID": "your_sid"
        }
      }
    }
  },
  "haris-musa/excel-mcp-server": {
    "mcpServers": {
      "excel": {
        "url": "http://localhost:8000/sse",
        "env": {
          "EXCEL_FILES_PATH": "/path/to/excel/files"
        }
      }
    }
  },
  "xuezhijian/mcp_weather": {
    "mcpServers": {
      "weather": {
        "command": "python",
        "args": [
          "-m",
          "mcp_server_weather"
        ]
      }
    }
  },
  "lightconetech/mcp-gateway": {
    "mcpServers": {
      "server-name": {
        "command": "node",
        "args": [
          "/opt/homebrew/lib/node_modules/@mcphub/gateway/dist/src/mcphub-gateway.js"
        ]
      }
    }
  },
  "MCP-Mirror/recursechat_mcp-server-apple-shortcuts": {
    "mcpServers": {
      "apple-shortcuts": {
        "command": "npx",
        "args": [
          "-y",
          "mcp-server-apple-shortcuts"
        ]
      }
    }
  },
  "tejpalvirk/contextmanager": {
    "mcpServers": {
      "contextmanager": {
        "command": "npx",
        "args": [
          "-y",
          "github:tejpalvirk/contextmanager"
        ],
        "options": {
          "port": 3000,
          "domains": [
            "developer",
            "project",
            "student"
          ]
        }
      }
    }
  },
  "e2b-dev/mcp-server": {
    "mcpServers": {
      "blender": {
        "command": "uvx",
        "args": [
          "blender-mcp"
        ]
      }
    }
  },
  "isdaniel/mcp_weather_server": {
    "mcpServers": {
      "weather": {
        "command": "python",
        "args": [
          "mcp_weather_server.py"
        ],
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "skydeckai/mcp-server-aidd": {
    "mcpServers": {
      "aidd-ai-software-development-utilities": {
        "command": "uvx",
        "args": [
          "mcp-server-aidd"
        ]
      }
    }
  },
  "Cheffromspace/MCPControl": {
    "mcpServers": {
      "MCPControl": {
        "command": "npx",
        "args": [
          "--no-cache",
          "-y",
          "mcp-control"
        ]
      }
    }
  },
  "wonderwhy-er/ClaudeComputerCommander": {
    "mcpServers": {
      "desktop-commander": {
        "command": "npx",
        "args": [
          "-y",
          "@wonderwhy-er/desktop-commander"
        ]
      }
    }
  },
  "justinpbarnett/unity-mcp": {
    "mcpServers": {
      "UnityMCP": {
        "command": "uv",
        "args": [
          "run",
          "--directory",
          "/usr/local/bin/UnityMCP/UnityMcpServer/src",
          "server.py"
        ]
      }
    }
  },
  "samuelrizzo/jira-mcp-server": {
    "mcpServers": {
      "jira-mcp": {
        "command": "node",
        "args": [
          "./dist/index.js"
        ],
        "env": {
          "JIRA_HOST": "your-domain.atlassian.net",
          "JIRA_EMAIL": "your-email@example.com",
          "JIRA_API_TOKEN": "your-api-token-here"
        }
      }
    }
  },
  "lmcc-dev/mult-fetch-mcp-server": {
    "mcpServers": {
      "mult-fetch-mcp-server": {
        "command": "path-to/bin/node",
        "args": [
          "path-to/@lmcc-dev/mult-fetch-mcp-server/dist/index.js"
        ],
        "env": {
          "MCP_LANG": "en"
        }
      }
    }
  },
  "ChristophEnglisch/keycloak-model-context-protocol": {
    "mcpServers": {
      "keycloak": {
        "command": "node",
        "args": [
          "path/to/dist/index.js"
        ],
        "env": {
          "KEYCLOAK_URL": "http://localhost:8080",
          "KEYCLOAK_ADMIN": "admin",
          "KEYCLOAK_ADMIN_PASSWORD": "admin"
        }
      }
    }
  },
  "danhilse/notion_mcp": {
    "mcpServers": {
      "notion-todo": {
        "command": "/path/to/your/.venv/bin/python",
        "args": [
          "-m",
          "notion_mcp"
        ],
        "cwd": "/path/to/notion-mcp"
      }
    }
  },
  "Shawyeok/mcp-dingding-bot": {
    "mcpServers": {
      "gitlab": {
        "command": "npx",
        "args": [
          "-y",
          "mcp-dingding-bot"
        ],
        "env": {
          "DINGTALK_BOT_ACCESS_TOKEN": "<YOUR_ACCESS_TOKEN>",
          "DINGTALK_BOT_SECRET": "<YOUR_SECRET>"
        }
      }
    }
  },
  "ivo-toby/contentful-mcp": {
    "mcpServers": {
      "contentful": {
        "command": "npx",
        "args": [
          "-y",
          "@ivotoby/contentful-management-mcp-server"
        ],
        "env": {
          "CONTENTFUL_MANAGEMENT_ACCESS_TOKEN": "<Your CMA token>"
        }
      }
    }
  },
  "MCP-Mirror/vrknetha_mcp-server-firecrawl": {
    "mcpServers": {
      "mcp-server-firecrawl": {
        "command": "npx",
        "args": [
          "-y",
          "mcp-server-firecrawl"
        ],
        "env": {
          "FIRE_CRAWL_API_KEY": "YOUR_API_KEY_HERE"
        }
      }
    }
  },
  "rioriost/homebrew-age-mcp-server": {
    "mcpServers": {
      "age-manager": {
        "command": "age-mcp-server",
        "args": [
          "--pg-con-str",
          "host=your_server.postgres.database.azure.com port=5432 dbname=postgres user=your_username password=your_password",
          "--allow-write"
        ]
      }
    }
  },
  "MCP-Mirror/r-huijts_portkey-admin-mcp-server": {
    "mcpServers": {
      "portkey-server": {
        "command": "node",
        "args": [
          "/path/to/portkey-server/build/index.js"
        ],
        "env": {
          "PORTKEY_API_KEY": "your_portkey_api_key_here"
        }
      }
    }
  },
  "KBB99/mcp-registry-server": {
    "mcpServers": {
      "mcp-registry-server": {
        "command": "node",
        "args": [
          "./path/to/build/mcp-registry-server/dist/index.js"
        ]
      }
    }
  },
  "odysseus0/mcp-server-shell": {
    "mcpServers": {
      "shell": {
        "command": "python",
        "args": [
          "-m",
          "mcp_server_shell"
        ]
      }
    }
  },
  "hithereiamaliff/mcp-servers": {
    "mcpServers": {
      "perplexity": {
        "command": "wsl.exe",
        "args": [
          "bash",
          "-c",
          "export PERPLEXITY_API_KEY='YOUR_API_KEY' && /home/username/.nvm/versions/node/version/bin/node /home/username/mcp-perplexity/index.js"
        ]
      },
      "keywords-everywhere": {
        "command": "wsl.exe",
        "args": [
          "bash",
          "-c",
          "export KEYWORDS_EVERYWHERE_API_KEY='YOUR_API_KEY' && /home/username/.nvm/versions/node/version/bin/node /home/username/mcp-keywords-everywhere/index.js"
        ]
      }
    }
  },
  "xxxbrian/mcp-rquest": {
    "mcpServers": {
      "http-rquest": {
        "command": "pipx",
        "args": [
          "run",
          "mcp-rquest"
        ]
      }
    }
  },
  "kuvanov-2/mcp-server-jira": {
    "mcpServers": {
      "github.com/kuvanov-2/mcp-server-jira": {
        "command": "/path/to/mcp-server-jira/start-server.sh",
        "env": {
          "JIRA_HOST": "https://your-domain.atlassian.net",
          "JIRA_EMAIL": "your-email@example.com",
          "JIRA_API_TOKEN": "op://YOUR_VAULT_NAME/YOUR_ITEM_NAME/info/access token"
        },
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "alfredatnycu/grasshopper-mcp": {
    "mcpServers": {
      "agentql": {
        "command": "/path/to/agentql-mcp/dist/index.js",
        "env": {
          "AGENTQL_API_KEY": "YOUR_API_KEY"
        }
      }
    }
  },
  "r-huijts/portkey-admin-mcp-server": {
    "mcpServers": {
      "portkey-server": {
        "command": "node",
        "args": [
          "/path/to/portkey-server/build/index.js"
        ],
        "env": {
          "PORTKEY_API_KEY": "your_portkey_api_key_here"
        }
      }
    }
  },
  "jango-blockchained/advanced-homeassistant-mcp": {
    "mcpServers": {
      "homeassistant-mcp": {
        "command": "npx",
        "args": [
          "homeassistant-mcp"
        ],
        "env": {
          "HASS_TOKEN": "your_home_assistant_token_here",
          "HASS_HOST": "http://your_home_assistant_host:8123"
        }
      }
    }
  },
  "MCP-Mirror/non-dirty_mcp-server-restart": {
    "mcpServers": {
      "mcp-server-restart": {
        "command": "uvx",
        "args": [
          "mcp-server-restart"
        ]
      }
    }
  },
  "nguyenvanduocit/all-in-one-model-context-protocol": {
    "mcpServers": {
      "my_mcp_server": {
        "command": "all-in-one-model-context-protocol",
        "args": [
          "-env",
          "/path/to/.env"
        ]
      }
    }
  },
  "kentaro/mcp-local-command-server": {
    "mcpServers": {
      "local-command-server": {
        "command": "/path/to/mcp-local-command-server/build/index.js"
      }
    }
  },
  "athapong/aio-mcp": {
    "mcpServers": {
      "aio-mcp": {
        "command": "aio-mcp",
        "env": {
          "ENABLE_TOOLS": "",
          "OPENAI_BASE_URL": "",
          "GOOGLE_AI_API_KEY": "",
          "GITLAB_TOKEN": "",
          "GITLAB_HOST": "",
          "QDRANT_HOST": "",
          "QDRANT_API_KEY": "",
          "PROXY_URL": "",
          "OPENAI_API_KEY": "",
          "GOOGLE_TOKEN_FILE": "",
          "GOOGLE_CREDENTIALS_FILE": "",
          "ATLASSIAN_TOKEN": "",
          "BRAVE_API_KEY": "",
          "QDRANT_PORT": "",
          "ATLASSIAN_HOST": "",
          "ATLASSIAN_EMAIL": "",
          "USE_OPENROUTER": "",
          "DEEPSEEK_API_KEY": "",
          "OPENROUTER_API_KEY": "",
          "DEEPSEEK_API_BASE": "",
          "USE_OLLAMA_DEEPSEEK": "",
          "OLLAMA_URL": ""
        }
      }
    }
  },
  "6/mcp-server-rubygems": {
    "mcpServers": {
      "mcp-server-rubygems": {
        "command": "/path/to/mcp-server-rubygems/build/index.js"
      }
    }
  },
  "sammcj/mcp-snyk": {
    "mcpServers": {
      "snyk": {
        "command": "npx",
        "args": [
          "-y",
          "github:sammcj/mcp-snyk"
        ],
        "env": {
          "SNYK_API_KEY": "your_snyk_token",
          "SNYK_ORG_ID": "your_default_org_id"
        }
      }
    }
  },
  "Saml1211/PRD-MCP-Server": {
    "mcpServers": {
      "prd-creator": {
        "command": "node",
        "args": [
          "/path/to/prd-creator-mcp/dist/index.js"
        ],
        "disabled": false
      }
    }
  },
  "TimHolden/figma-mcp-server": {
    "mcpServers": {
      "figma": {
        "command": "node",
        "args": [
          "/ABSOLUTE/PATH/TO/figma-mcp-server/dist/index.js"
        ],
        "env": {
          "FIGMA_ACCESS_TOKEN": "your_token_here"
        }
      }
    }
  },
  "shannonlal/mcp-postman": {
    "mcpServers": {
      "postman-runner": {
        "command": "node",
        "args": [
          "/absolute/path/to/mcp-postman/build/index.js"
        ]
      }
    }
  },
  "nkapila6/mcp-local-rag": {
    "mcpServers": {
      "mcp-local-rag": {
        "command": "uv",
        "args": [
          "--directory",
          "<path where this folder is located>/mcp-local-rag/",
          "run",
          "src/mcp_local_rag/main.py"
        ]
      }
    }
  },
  "emanuelsistemas/supabase-mcp-server": {
    "mcpServers": {
      "supabase": {
        "command": "/full/path/to/supabase-mcp-server",
        "env": {
          "SUPABASE_PROJECT_REF": "your-project-ref",
          "SUPABASE_DB_PASSWORD": "your-db-password",
          "SUPABASE_REGION": "us-east-1",
          "SUPABASE_ACCESS_TOKEN": "your-access-token",
          "SUPABASE_SERVICE_ROLE_KEY": "your-service-role-key"
        }
      }
    }
  },
  "kukapay/nearby-search-mcp": {
    "mcpServers": {
      "nearby-search": {
        "command": "uv",
        "args": [
          "--directory",
          "path/to/nearby-search-mcp",
          "run",
          "main.py"
        ],
        "env": {
          "GOOGLE_API_KEY": "your google api key"
        }
      }
    }
  },
  "inkdropapp/mcp-server": {
    "mcpServers": {
      "inkdrop": {
        "command": "npx",
        "args": [
          "-y",
          "@inkdropapp/mcp-server"
        ],
        "env": {
          "INKDROP_LOCAL_SERVER_URL": "http://localhost:19840",
          "INKDROP_LOCAL_USERNAME": "your-local-server-username",
          "INKDROP_LOCAL_PASSWORD": "your-local-server-password"
        }
      }
    }
  },
  "shaike1/mcp-server-ssh": {
    "mcpServers": {
      "ssh": {
        "command": "node",
        "args": [
          "%APPDATA%/npm/node_modules/mcp-ssh/dist/server.js"
        ],
        "env": {
          "SSH_PORT": "8889",
          "SSH_LOG_LEVEL": "info"
        }
      }
    }
  },
  "nakamurau1/weather-mcp": {
    "mcpServers": {
      "weather": {
        "command": "node",
        "args": [
          "/absolute/path/to/your/weather-mcp/dist/index.js"
        ]
      }
    }
  },
  "CheMiguel23/MemoryMesh": {
    "mcpServers": {
      "memorymesh": {
        "command": "node",
        "args": [
          "/ABSOLUTE/PATH/TO/YOUR/PROJECT/memorymesh/dist/index.js"
        ]
      }
    }
  },
  "MCP-Mirror/leafeye_lunchmoney-mcp-server": {
    "mcpServers": {
      "lunchmoney": {
        "command": "npx",
        "args": [
          "-y",
          "lunchmoney-mcp-server"
        ],
        "env": {
          "LUNCHMONEY_TOKEN": "your_token_here"
        }
      }
    }
  },
  "PARS-DOE/autodocument": {
    "mcpServers": {
      "autodocument": {
        "command": "node",
        "args": [
          "/path/to/autodocument/build/index.js"
        ],
        "env": {
          "OPENROUTER_API_KEY": "your-api-key-here"
        },
        "disabled": false,
        "alwaysAllow": []
      }
    }
  },
  "mark3labs/mcp-filesystem-server": {
    "mcpServers": {
      "filesystem": {
        "command": "mcp-filesystem-server",
        "args": [
          "/Users/username/Desktop",
          "/path/to/other/allowed/dir"
        ]
      }
    }
  },
  "owayo/gitlab-mcp-server": {
    "mcpServers": {
      "gitlab-mcp": {
        "command": "env",
        "args": [
          "GITLAB_URL=your_gitlab_url",
          "GITLAB_PROJECT_NAME=gitlab_project_name",
          "GITLAB_API_KEY=your_gitlab_api_key",
          "GIT_REPO_PATH=/path/to/git/repo",
          "uv",
          "--directory",
          "/path/to/this-mcp-server",
          "run",
          "main.py"
        ]
      }
    }
  },
  "kjozsa/git-mcp": {
    "mcpServers": {
      "git-mcp": {
        "command": "uvx",
        "args": [
          "git-mcp"
        ],
        "env": {
          "GIT_REPOS_PATH": "/path/to/your/git/repositories"
        }
      }
    }
  },
  "elliottlawson/mcp-sentry": {
    "mcpServers": {
      "sentry": {
        "command": "mcp-sentry",
        "args": [
          "--auth-token",
          "YOUR_SENTRY_TOKEN"
        ]
      }
    }
  },
  "filipecalegario/mcp-server-strateegia": {
    "mcpServers": {
      "strateegia": {
        "command": "node",
        "args": [
          "path/to/strateegia-mcp-server/dist/index.js"
        ],
        "env": {
          "STRATEEGIA_API_KEY": "your_api_key_here"
        }
      }
    }
  },
  "felores/cloudinary-mcp-server": {
    "mcpServers": {
      "cloudinary": {
        "command": "node",
        "args": [
          "c:/path/to/cloudinary-mcp-server/dist/index.js"
        ],
        "env": {
          "CLOUDINARY_CLOUD_NAME": "your_cloud_name",
          "CLOUDINARY_API_KEY": "your_api_key",
          "CLOUDINARY_API_SECRET": "your_api_secret"
        }
      }
    }
  },
  "karayaman/lichess-mcp": {
    "mcpServers": {
      "filesystem": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-filesystem",
          "/Users/username/Desktop",
          "/Users/username/Downloads"
        ]
      },
      "lichess": {
        "command": "lichess-mcp",
        "env": {
          "LICHESS_TOKEN": "your-lichess-api-token"
        }
      }
    }
  },
  "grafana/mcp-grafana": {
    "mcpServers": {
      "grafana": {
        "command": "mcp-grafana",
        "args": [],
        "env": {
          "GRAFANA_URL": "http://localhost:3000",
          "GRAFANA_API_KEY": "<your service account token>"
        }
      }
    }
  },
  "adhikasp/mcp-git-ingest": {
    "mcpServers": {
      "mcp-git-ingest": {
        "command": "uvx",
        "args": [
          "--from",
          "git+https://github.com/adhikasp/mcp-git-ingest",
          "mcp-git-ingest"
        ]
      }
    }
  },
  "tatn/mcp-server-diff-typescript": {
    "mcpServers": {
      "mcp-server-diff-typescript": {
        "command": "node",
        "args": [
          "/path/to/mcp-server-diff-typescript/build/index.js"
        ]
      }
    }
  },
  "rishijatia/fantasy-pl-mcp": {
    "mcpServers": {
      "fantasy-pl": {
        "command": "python",
        "args": [
          "-m",
          "fpl_mcp"
        ]
      }
    }
  },
  "spences10/mcp-omnisearch": {
    "mcpServers": {
      "mcp-omnisearch": {
        "command": "wsl.exe",
        "args": [
          "bash",
          "-c",
          "TAVILY_API_KEY=key1 PERPLEXITY_API_KEY=key2 KAGI_API_KEY=key3 JINA_AI_API_KEY=key4 BRAVE_API_KEY=key5 FIRECRAWL_API_KEY=key6 node /path/to/mcp-omnisearch/dist/index.js"
        ]
      }
    }
  },
  "inkeep/mcp-server-python": {
    "mcpServers": {
      "inkeep-mcp-server": {
        "command": "uv",
        "args": [
          "--directory",
          "<YOUR_INKEEP_MCP_SERVER_ABSOLUTE_PATH>",
          "run",
          "-m",
          "inkeep_mcp_server"
        ],
        "env": {
          "INKEEP_API_BASE_URL": "https://api.inkeep.com/v1",
          "INKEEP_API_KEY": "<YOUR_INKEEP_API_KEY>",
          "INKEEP_API_MODEL": "inkeep-rag",
          "INKEEP_MCP_TOOL_NAME": "search-product-content",
          "INKEEP_MCP_TOOL_DESCRIPTION": "Retrieves product documentation about Inkeep. The query should be framed as a conversational question about Inkeep."
        }
      }
    }
  },
  "nevikashah/remote-mcp-server": {
    "mcpServers": {
      "math": {
        "command": "npx",
        "args": [
          "mcp-remote",
          "https://worker-name.account-name.workers.dev/sse"
        ]
      }
    }
  },
  "brysontang/DeltaTask": {
    "mcpServers": {
      "deltatask": {
        "command": "uv",
        "args": [
          "--directory",
          "/ABSOLUTE/PATH/TO/DeltaTask",
          "run",
          "server.py"
        ]
      }
    }
  },
  "FarseenSh/GOATsolana-mcp": {
    "mcpServers": {
      "solana-viz-mcp": {
        "command": "node",
        "args": [
          "--input-type=module",
          "/path/to/GOATsolana-mcp/build/index.js"
        ],
        "env": {
          "BIRDEYE_API_KEY": "your_birdeye_api_key",
          "COINGECKO_API_KEY": "your_coingecko_api_key",
          "ALLORA_API_KEY": "your_allora_api_key",
          "HELIUS_RPC_URL": "your_helius_rpc_url",
          "DEFAULT_WALLET_ADDRESS": "optional_default_wallet_address"
        }
      }
    }
  },
  "SirTenzin/autumn-mcp-server": {
    "mcpServers": {
      "autumn": {
        "command": "bun",
        "args": [
          "run",
          "{YOUR ABSOLUTE PATH TO index.ts}",
          "--apiKey={YOUR API KEY}"
        ]
      }
    }
  },
  "zcaceres/fetch-mcp": {
    "mcpServers": {
      "fetch": {
        "command": "node",
        "args": [
          "{ABSOLUTE PATH TO FILE HERE}/dist/index.js"
        ]
      }
    }
  },
  "jamie7893/statsource-mcp": {
    "mcpServers": {
      "statsource": {
        "command": "python",
        "args": [
          "C:/Path/To/Statsource/mcp_server.py"
        ],
        "env": {
          "API_KEY": "your_api_key",
          "DB_CONNECTION_STRING": "postgresql://postgres:postgres@localhost:5432/name_of_db",
          "DB_SOURCE_TYPE": "database"
        }
      }
    }
  },
  "rawveg/ollama-mcp": {
    "mcpServers": {
      "@rawveg/ollama-mcp": {
        "command": "npx",
        "args": [
          "-y",
          "@rawveg/ollama-mcp"
        ]
      }
    }
  },
  "MCP-Mirror/skydeckai_mcp-server-rememberizer": {
    "mcpServers": {
      "rememberizer": {
        "command": "uvx",
        "args": [
          "mcp-server-rememberizer"
        ],
        "env": {
          "REMEMBERIZER_API_TOKEN": "your_rememberizer_api_token"
        }
      }
    }
  },
  "it-beard/exa-server": {
    "mcpServers": {
      "exa": {
        "command": "node",
        "args": [
          "/path/to/exa-server/build/index.js"
        ],
        "env": {
          "EXA_API_KEY": "your-api-key-here"
        }
      }
    }
  },
  "lishenxydlgzs/aws-athena-mcp": {
    "mcpServers": {
      "athena": {
        "command": "npx",
        "args": [
          "-y",
          "@lishenxydlgzs/aws-athena-mcp"
        ],
        "env": {
          "OUTPUT_S3_PATH": "s3://your-bucket/athena-results/",
          "AWS_REGION": "us-east-1",
          "AWS_PROFILE": "default",
          "AWS_ACCESS_KEY_ID": "",
          "AWS_SECRET_ACCESS_KEY": "",
          "AWS_SESSION_TOKEN": "",
          "ATHENA_WORKGROUP": "default_workgroup",
          "QUERY_TIMEOUT_MS": "300000",
          "MAX_RETRIES": "100",
          "RETRY_DELAY_MS": "500"
        }
      }
    }
  },
  "habuma/tpapi-mcp-server": {
    "mcpServers": {
      "tpapi": {
        "command": "/path/to/java",
        "args": [
          "-jar",
          "/path/to/project/build/libs/tpapi-mcp-server-0.0.1-SNAPSHOT.jar"
        ]
      }
    }
  },
  "MCP-Mirror/akseyh_bear-mcp-server": {
    "mcpServers": {
      "bear": {
        "command": "node",
        "args": [
          ".../build/index.js"
        ]
      }
    }
  },
  "YiyangLi/okta-mcp-server": {
    "mcpServers": {
      "okta": {
        "command": "npx",
        "args": [
          "-y",
          "@yiyang.1i/okta-mcp-server"
        ],
        "env": {
          "OKTA_DOMAIN": "your-domain.okta.com",
          "API_TOKEN": "your-api-token"
        }
      }
    }
  },
  "yuna0x0/anilist-mcp": {
    "mcpServers": {
      "anilist": {
        "command": "npx",
        "args": [
          "-y",
          "anilist-mcp"
        ],
        "env": {
          "ANILIST_TOKEN": "your_api_token"
        }
      }
    }
  },
  "aminalali8/bns-mcp-server": {
    "mcpServers": {
      "bunnyshell-mcp": {
        "command": "docker",
        "args": [
          "exec",
          "-i",
          "bns-mcp-server",
          "node",
          "dist/index.js"
        ],
        "env": {
          "BNS_API_KEY": "YOUR_API_TOKEN_HERE"
        }
      }
    }
  },
  "d-zero-dev/mcp-server": {
    "mcpServers": {
      "coding_guidelines": {
        "command": "npx",
        "args": [
          "-y",
          "@d-zero/mcp-server"
        ],
        "env": {
          "FIGMA_ACCESS_TOKEN": "abcd_XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
        },
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "MCP-100/mcp-sentry": {
    "mcpServers": {
      "sentry": {
        "command": "python",
        "args": [
          "-m",
          "mcp_sentry",
          "--auth-token",
          "YOUR_SENTRY_TOKEN",
          "--project-slug",
          "YOUR_PROJECT_SLUG",
          "--organization-slug",
          "YOUR_ORGANIZATION_SLUG"
        ]
      }
    }
  },
  "9nate-drake/mcp-yfinance": {
    "mcpServers": {
      "yfinance": {
        "command": "python",
        "args": [
          "/path/to/finance_server/server.py"
        ]
      }
    }
  },
  "MCP-Mirror/mcpservers_mcp-server-chatsum": {
    "mcpServers": {
      "mcp-server-chatsum": {
        "command": "path-to/bin/node",
        "args": [
          "path-to/mcp-server-chatsum/build/index.js"
        ],
        "env": {
          "CHAT_DB_PATH": "path-to/mcp-server-chatsum/chatbot/data/chat.db"
        }
      }
    }
  },
  "SecretiveShell/MCP-searxng": {
    "mcpServers": {
      "searxng": {
        "command": "uv",
        "args": [
          "--project",
          "/absoloute/path/to/MCP-searxng/",
          "run",
          "/absoloute/path/to/MCP-searxng/mcp-searxng/main.py"
        ]
      }
    }
  },
  "kabragaurav/MCP-Server": {
    "mcpServers": {
      "Gaurav Kabra's MCP Server": {
        "command": "node",
        "args": [
          "/Users/gauravkabra/Desktop/MCPServer/index.js"
        ]
      }
    }
  },
  "taishikato/supavec-mcp-server": {
    "mcpServers": {
      "supavec": {
        "command": "node",
        "args": [
          "path/to/supavec/mcp/build/index.js"
        ],
        "env": {
          "SUPAVEC_API_KEY": "<your api key>"
        }
      }
    }
  },
  "tatsuiman/docker-mcp-servers": {
    "mcpServers": {
      "slack": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "-e",
          "SLACK_BOT_TOKEN=your-slack-bot-token",
          "-e",
          "SLACK_TEAM_ID=your-slack-team-id",
          "ghcr.io/tatsuiman/docker-mcp-notion-server-slack:main"
        ]
      },
      "notion": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "-e",
          "NOTION_API_TOKEN=your-integration-token",
          "ghcr.io/tatsuiman/docker-mcp-notion-server-notion-server:main"
        ]
      },
      "github": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "-e",
          "GITHUB_PERSONAL_ACCESS_TOKEN=your-github-token",
          "ghcr.io/tatsuiman/docker-mcp-notion-server-github:main"
        ]
      }
    }
  },
  "Verodat/verodat-mcp-server": {
    "mcpServers": {
      "verodat-consume": {
        "command": "node",
        "args": [
          "path/to/verodat-mcp-server/build/src/consume.js"
        ],
        "env": {
          "VERODAT_AI_API_KEY": "your-api-key",
          "VERODAT_API_BASE_URL": "https://verodat.io/api/v3"
        }
      },
      "verodat-design": {
        "command": "node",
        "args": [
          "path/to/verodat-mcp-server/build/src/design.js"
        ],
        "env": {
          "VERODAT_AI_API_KEY": "your-api-key",
          "VERODAT_API_BASE_URL": "https://verodat.io/api/v3"
        }
      },
      "verodat-manage": {
        "command": "node",
        "args": [
          "path/to/verodat-mcp-server/build/src/manage.js"
        ],
        "env": {
          "VERODAT_AI_API_KEY": "your-api-key",
          "VERODAT_API_BASE_URL": "https://verodat.io/api/v3"
        }
      }
    }
  },
  "NightTrek/Serper-search-mcp": {
    "mcpServers": {
      "serper-search-server": {
        "command": "/path/to/serper-search-server/build/index.js",
        "env": {
          "SERPER_API_KEY": "your_api_key_here"
        }
      }
    }
  },
  "JovanHsu/mcp-neo4j-memory-server": {
    "mcpServers": {
      "graph-memory": {
        "command": "npx",
        "args": [
          "-y",
          "@izumisy/mcp-neo4j-memory-server"
        ],
        "env": {
          "NEO4J_URI": "neo4j://localhost:7687",
          "NEO4J_USER": "neo4j",
          "NEO4J_PASSWORD": "password",
          "NEO4J_DATABASE": "memory"
        }
      }
    }
  },
  "Alec2435/python_mcp": {
    "mcpServers": {
      "python_local": {
        "command": "uvx",
        "args": [
          "python_local"
        ]
      }
    }
  },
  "MCP-Mirror/chatmcp_mcp-server-chatsum": {
    "mcpServers": {
      "mcp-server-chatsum": {
        "command": "path-to/bin/node",
        "args": [
          "path-to/mcp-server-chatsum/build/index.js"
        ],
        "env": {
          "CHAT_DB_PATH": "path-to/mcp-server-chatsum/chatbot/data/chat.db"
        }
      }
    }
  },
  "jovezhong/mcp-timeplus": {
    "mcpServers": {
      "mcp-timeplus": {
        "command": "uvx",
        "args": [
          "mcp-timeplus"
        ],
        "env": {
          "TIMEPLUS_HOST": "<timeplus-host>",
          "TIMEPLUS_PORT": "<timeplus-port>",
          "TIMEPLUS_USER": "<timeplus-user>",
          "TIMEPLUS_PASSWORD": "<timeplus-password>",
          "TIMEPLUS_SECURE": "false",
          "TIMEPLUS_VERIFY": "true",
          "TIMEPLUS_CONNECT_TIMEOUT": "30",
          "TIMEPLUS_SEND_RECEIVE_TIMEOUT": "30",
          "TIMEPLUS_READ_ONLY": "false",
          "TIMEPLUS_KAFKA_CONFIG": "{\"bootstrap.servers\":\"a.aivencloud.com:28864\", \"sasl.mechanism\":\"SCRAM-SHA-256\",\"sasl.username\":\"avnadmin\", \"sasl.password\":\"thePassword\",\"security.protocol\":\"SASL_SSL\",\"enable.ssl.certificate.verification\":\"false\"}"
        }
      }
    }
  },
  "hideya/mcp-server-weather-js": {
    "mcpServers": {
      "weather": {
        "command": "npx",
        "args": [
          "-y",
          "@h1deya/mcp-server-weather"
        ]
      }
    }
  },
  "effytech/freshdesk_mcp": {
    "mcpServers": {
      "freshdesk-mcp": {
        "command": "uvx",
        "args": [
          "freshdesk-mcp"
        ],
        "env": {
          "FRESHDESK_API_KEY": "<YOUR_FRESHDESK_API_KEY>",
          "FRESHDESK_DOMAIN": "<YOUR_FRESHDESK_DOMAIN>"
        }
      }
    }
  },
  "MCP-Mirror/da-okazaki_mcp-neo4j-server": {
    "mcpServers": {
      "neo4j": {
        "command": "npx",
        "args": [
          "@alanse/mcp-neo4j-server"
        ],
        "env": {
          "NEO4J_URI": "bolt://localhost:7687",
          "NEO4J_USERNAME": "neo4j",
          "NEO4J_PASSWORD": "your-password"
        }
      }
    }
  },
  "tumf/mcp-shell-server": {
    "mcpServers": {
      "shell": {
        "command": "uv",
        "args": [
          "--directory",
          ".",
          "run",
          "mcp-shell-server"
        ],
        "env": {
          "ALLOW_COMMANDS": "ls,cat,pwd,grep,wc,touch,find"
        }
      }
    }
  },
  "zzstoatzz/geese": {
    "mcpServers": {
      "aws-kb-retrieval": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-aws-kb-retrieval"
        ],
        "env": {
          "AWS_ACCESS_KEY_ID": "YOUR_ACCESS_KEY_HERE",
          "AWS_SECRET_ACCESS_KEY": "YOUR_SECRET_ACCESS_KEY_HERE",
          "AWS_REGION": "YOUR_AWS_REGION_HERE"
        }
      }
    }
  },
  "MCP-Mirror/xianzong85_mysql-server-MCP-Server": {
    "mcpServers": {
      "mysql": {
        "command": "/path/to/mysql-server/build/index.js",
        "env": {
          "MYSQL_HOST": "your-mysql-host",
          "MYSQL_USER": "your-mysql-user",
          "MYSQL_PASSWORD": "your-mysql-password",
          "MYSQL_DATABASE": "your-mysql-database"
        }
      }
    }
  },
  "ggerve/coding-standards-mcp": {
    "mcpServers": {
      "nortal_coding_standards": {
        "command": "uv",
        "args": [
          "run",
          "--with",
          "mcp[cli]",
          "mcp",
          "run",
          "/absolute/path/to/coding-standards-mcp/server.py"
        ]
      }
    }
  },
  "Niell007/supabase-mcp-server": {
    "mcpServers": {
      "supabase": {
        "command": "/full/path/to/supabase-mcp-server",
        "env": {
          "SUPABASE_PROJECT_REF": "your-project-ref",
          "SUPABASE_DB_PASSWORD": "your-db-password",
          "SUPABASE_REGION": "us-east-1",
          "SUPABASE_ACCESS_TOKEN": "your-access-token",
          "SUPABASE_SERVICE_ROLE_KEY": "your-service-role-key"
        }
      }
    }
  },
  "twolven/mcp-server-puppeteer-py": {
    "mcpServers": {
      "puppeteer": {
        "command": "python",
        "args": [
          "path/to/puppeteer.py"
        ]
      }
    }
  },
  "ntropy-network/ntropy-mcp": {
    "mcpServers": {
      "ntropy-mcp": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "ntropy-mcp",
          "--api-key",
          "YOUR_NTROPY_API_KEY"
        ]
      }
    }
  },
  "leehanchung/bing-search-mcp": {
    "mcpServers": {
      "bing-search": {
        "command": "uvx",
        "args": [
          "/path/to/your/bing-search-mcp"
        ],
        "env": {
          "BING_API_KEY": "your-bing-api-key"
        }
      }
    }
  },
  "neondatabase-labs/mcp-server-neon": {
    "mcpServers": {
      "neon": {
        "command": "wsl",
        "args": [
          "npx",
          "-y",
          "@neondatabase/mcp-server-neon",
          "start",
          "<YOUR_NEON_API_KEY>"
        ]
      }
    }
  },
  "cyanheads/mcp-reporter": {
    "mcpServers": {
      "atlas-mcp-server": {
        "command": "/path/to/node",
        "args": [
          "/path/to/atlas-mcp-server/dist/index.js"
        ],
        "env": {
          "NEO4J_URI": "bolt://localhost:7687",
          "NEO4J_USER": "neo4j",
          "NEO4J_PASSWORD": "your-password-here"
        }
      },
      "another-server": {
        "command": "/path/to/node",
        "args": [
          "/path/to/another-server.js"
        ],
        "env": {}
      }
    }
  },
  "dazeb/MCP-Github-Mapper": {
    "mcpServers": {
      "github-mapper": {
        "command": "node",
        "args": [
          "/home/user/Documents/Cline/MCP/github-mapper/build/index.js"
        ]
      }
    }
  },
  "MCP-Mirror/gentoro-GT_mcp-nodejs-server": {
    "mcpServers": {
      "gentoro": {
        "command": "npx",
        "args": [
          "-y",
          "@gentoro/mcp-nodejs-server"
        ],
        "env": {
          "GENTORO_API_KEY": "<your api key>",
          "GENTORO_BRIDGE_UID": "<your bridge uid>",
          "GENTORO_BASE_URL": "<url where gentoro is hosted>"
        }
      }
    }
  },
  "zcaceres/gtasks-mcp": {
    "mcpServers": {
      "gtasks": {
        "command": "/opt/homebrew/bin/node",
        "args": [
          "{ABSOLUTE PATH TO FILE HERE}/dist/index.js"
        ]
      }
    }
  },
  "kukapay/thegraph-mcp": {
    "mcpServers": {
      "thegraph-mcp": {
        "command": "uv",
        "args": [
          "--directory",
          "path/to/thegraph-mcp",
          "run",
          "main.py"
        ],
        "env": {
          "THEGRAPH_API_KEY": "your_api_key_here"
        }
      }
    }
  },
  "ctkadvisors/graphql-mcp": {
    "mcpServers": {
      "graphql": {
        "command": "node",
        "args": [
          "/absolute/path/to/dist/graphql-mcp-server.js"
        ],
        "env": {
          "GRAPHQL_API_ENDPOINT": "https://your-graphql-api.com/graphql",
          "GRAPHQL_API_KEY": "your-api-key-if-needed",
          "WHITELISTED_QUERIES": [
            "countries",
            "continent",
            "languages"
          ]
        }
      }
    }
  },
  "leafeye/lunchmoney-mcp-server": {
    "mcpServers": {
      "lunchmoney": {
        "command": "npx",
        "args": [
          "-y",
          "lunchmoney-mcp-server"
        ],
        "env": {
          "LUNCHMONEY_TOKEN": "your_token_here"
        }
      }
    }
  },
  "tatn/mcp-server-fetch-python": {
    "mcpServers": {
      "mcp-server-fetch-python": {
        "command": "uv",
        "args": [
          "--directory",
          "path\\to\\mcp-server-fetch-python",
          "run",
          "mcp-server-fetch-python"
        ]
      }
    }
  },
  "phil65/LLMling": {
    "mcpServers": {
      "llmling": {
        "command": "uvx",
        "args": [
          "mcp-server-llmling@latest",
          "start",
          "path/to/your/config.yml"
        ],
        "env": {}
      }
    }
  },
  "yanmxa/multicluster-mcp-server": {
    "mcpServers": {
      "y": {
        "command": "/path/to/multicluster-mcp-server/build/index.js"
      }
    }
  },
  "NewAITees/ollama-MCP-server": {
    "mcpServers": {
      "ollama-MCP-server": {
        "command": "uvx",
        "args": [
          "ollama-MCP-server"
        ]
      }
    }
  },
  "MCP-Mirror/identimoji_mcp-server-emojikey": {
    "mcpServers": {
      "mcp-server-emojikey": {
        "command": "npx",
        "args": [
          "@identimoji/mcp-server-emojikey"
        ],
        "env": {
          "EMOJIKEYIO_API_KEY": "your-api-key-goes-here",
          "MODEL_ID": "Claude-3-5-Sonnet-20241022"
        }
      }
    }
  },
  "tatn/mcp-server-diff-python": {
    "mcpServers": {
      "mcp-server-diff-python": {
        "command": "uv",
        "args": [
          "--directory",
          "path\\to\\mcp-server-diff-python",
          "run",
          "mcp-server-diff-python"
        ]
      }
    }
  },
  "geelen/workers-mcp-server": {
    "mcpServers": {
      "<server-alias>": {
        "command": "<absolute-path-to>/node",
        "args": [
          "<project-dir>/node_modules/tsx/dist/cli.mjs",
          "<project-dir>/scripts/local-proxy.ts",
          "<server-alias>",
          "<worker-url>",
          "<entrypoint-name>"
        ]
      }
    }
  },
  "ksysoev/mcp-go-tools": {
    "mcpServers": {
      "code-tools": {
        "command": "mcp-go-tools",
        "args": [
          "server",
          "--config=/Users/user/mcp-go-tools/example.config.yaml"
        ],
        "env": {}
      }
    }
  },
  "Xuanwo/mcp-server-opendal": {
    "mcpServers": {
      "opendal": {
        "command": "uvx",
        "args": [
          "mcp-server-opendal"
        ],
        "env": {
          "YOUR_ENV_VAR": "YOUR_ENV_VALUE"
        }
      }
    }
  },
  "exa-labs/exa-mcp-server": {
    "mcpServers": {
      "exa": {
        "command": "npx",
        "args": [
          "/path/to/exa-mcp-server/build/index.js",
          "--tools=web_search,research_paper_search,twitter_search,company_research,crawling,competitor_finder"
        ],
        "env": {
          "EXA_API_KEY": "your-api-key-here"
        }
      }
    }
  },
  "ruchernchong/mcp-server-google-analytics": {
    "mcpServers": {
      "google-analytics": {
        "command": "npx",
        "args": [
          "-y",
          "mcp-server-google-analytics"
        ],
        "env": {
          "GOOGLE_CLIENT_EMAIL": "your-service-account@project.iam.gserviceaccount.com",
          "GOOGLE_PRIVATE_KEY": "your-private-key",
          "GA_PROPERTY_ID": "your-ga4-property-id"
        }
      }
    }
  },
  "alexwohletz/language-server-mcp": {
    "mcpServers": {
      "language-server-mcp": {
        "command": "/path/to/language-server-mcp/build/index.js"
      }
    }
  },
  "JackKuo666/medRxiv-MCP-Server": {
    "mcpServers": {
      "medrxiv": {
        "command": "bash",
        "args": [
          "-c",
          "source /home/YOUR/PATH/mcp-server-medRxiv/.venv/bin/activate && python /home/YOUR/PATH/mcp-server-medRxiv/medrxiv_server.py"
        ],
        "env": {},
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "TakumiY235/uniprot-mcp-server": {
    "mcpServers": {
      "uniprot": {
        "command": "uv",
        "args": [
          "--directory",
          "path/to/uniprot-mcp-server",
          "run",
          "uniprot-mcp-server"
        ]
      }
    }
  },
  "MCP-Mirror/giovannicocco_mcp-server-postman-tool-generation": {
    "mcpServers": {
      "postman-ai-tools": {
        "command": "node",
        "args": [
          "/path/to/postman-tool-generation-server/build/index.js"
        ],
        "env": {
          "POSTMAN_API_KEY": "your-postman-api-key"
        },
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "cuongdev/mcp-codepipeline-server": {
    "mcpServers": {
      "codepipeline": {
        "command": "npx",
        "args": [
          "-y",
          "path/to/mcp-codepipeline-server/dist/index.js"
        ],
        "env": {
          "AWS_REGION": "us-east-1",
          "AWS_ACCESS_KEY_ID": "your_access_key_id",
          "AWS_SECRET_ACCESS_KEY": "your_secret_access_key"
        }
      }
    }
  },
  "privetin/chroma": {
    "mcpServers": {
      "chroma": {
        "command": "uv",
        "args": [
          "--directory",
          "C:/MCP/server/community/chroma",
          "run",
          "chroma"
        ]
      }
    }
  },
  "crazyrabbitLTC/mcp-expert-server": {
    "mcpServers": {
      "expert": {
        "command": "node",
        "args": [
          "/ABSOLUTE/PATH/TO/expert-server/build/index.js"
        ],
        "env": {
          "ANTHROPIC_API_KEY": "your_api_key_here"
        }
      }
    }
  },
  "MCP-Mirror/delorenj_mcp-server-ticketmaster": {
    "mcpServers": {
      "ticketmaster": {
        "command": "npx",
        "args": [
          "-y",
          "@delorenj/mcp-server-ticketmaster"
        ],
        "env": {
          "TICKETMASTER_API_KEY": "your-api-key-here"
        }
      }
    }
  },
  "mondweep/youtube-music-mcp-server": {
    "mcpServers": {
      "youtube-music-server": {
        "command": "/path/to/youtube-music-server/build/index.js"
      }
    }
  },
  "baranwang/mcp-tung-shing": {
    "mcpServers": {
      "tung-shing": {
        "command": "npx",
        "args": [
          "-y",
          "mcp-tung-shing@latest"
        ]
      }
    }
  },
  "jagan-shanmugam/osm-mcp-server": {
    "mcpServers": {
      "osm-mcp-server": {
        "command": "uvx",
        "args": [
          "osm-mcp-server"
        ]
      }
    }
  },
  "MCP-Mirror/amidabuddha_unichat-ts-mcp-server": {
    "mcpServers": {
      "unichat-ts-mcp-server": {
        "command": "npx",
        "args": [
          "-y",
          "unichat-ts-mcp-server"
        ],
        "env": {
          "UNICHAT_MODEL": "YOUR_PREFERRED_MODEL_NAME",
          "UNICHAT_API_KEY": "YOUR_VENDOR_API_KEY"
        }
      }
    }
  },
  "PhelanShao/pubchem-mcp-server": {
    "mcpServers": {
      "pubchem": {
        "command": "python3",
        "args": [
          "/path/to/pubchem-mcp-server/python_version/mcp_server.py"
        ],
        "env": {
          "PYTHONUNBUFFERED": "1"
        },
        "disabled": false,
        "autoApprove": [
          "get_pubchem_data",
          "download_structure"
        ]
      }
    }
  },
  "tuanle96/mcp-odoo": {
    "mcpServers": {
      "odoo": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "-e",
          "ODOO_URL",
          "-e",
          "ODOO_DB",
          "-e",
          "ODOO_USERNAME",
          "-e",
          "ODOO_PASSWORD",
          "mcp/odoo"
        ],
        "env": {
          "ODOO_URL": "https://your-odoo-instance.com",
          "ODOO_DB": "your-database-name",
          "ODOO_USERNAME": "your-username",
          "ODOO_PASSWORD": "your-password-or-api-key"
        }
      }
    }
  },
  "kapilduraphe/webflow-mcp-server": {
    "mcpServers": {
      "webflow": {
        "command": "node",
        "args": [
          "/ABSOLUTE/PATH/TO/YOUR/build/index.js"
        ],
        "env": {
          "WEBFLOW_API_TOKEN": "your-api-token"
        }
      }
    }
  },
  "bhouston/mcp-server-text-editor": {
    "mcpServers": {
      "textEditor": {
        "command": "npx",
        "args": [
          "-y",
          "mcp-server-text-editor"
        ]
      }
    }
  },
  "datalayer/earthdata-mcp-server": {
    "mcpServers": {
      "earthdata": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "datalayer/earthdata-mcp-server:latest"
        ]
      }
    }
  },
  "taka-ganasu/roo-mcp-server": {
    "mcpServers": {
      "local": {
        "command": "deno",
        "args": [
          "run",
          "--allow-net",
          "--allow-env",
          "--allow-read",
          "/path/to/src/server.ts"
        ],
        "env": {},
        "disabled": false,
        "alwaysAllow": []
      }
    }
  },
  "swairshah/zotero-mcp-server": {
    "mcpServers": {
      "zotero-mcp-server": {
        "command": "bash",
        "args": [
          "-c",
          "cd /Users/shahswai/personal/zotero-mcp-server && source .venv/bin/activate && python -m zotero_mcp.server"
        ]
      }
    }
  },
  "cablate/mcp-doc-forge": {
    "mcpServers": {
      "searxng": {
        "command": "npx",
        "args": [
          "-y",
          "@cablate/mcp-doc-forge"
        ],
        "enabled": true
      }
    }
  },
  "ucalyptus/prem-mcp-server": {
    "mcpServers": {
      "PremAI": {
        "command": "npx",
        "args": [
          "prem-mcp-server",
          "--stdio"
        ],
        "env": {
          "PREM_API_KEY": "your_api_key_here",
          "PREM_PROJECT_ID": "your_project_id_here"
        }
      }
    }
  },
  "OpenLinkSoftware/mcp-server-odbc": {
    "mcpServers": {
      "my_database": {
        "command": "uv",
        "args": [
          "--directory",
          "/path/to/mcp-server-odbc",
          "run",
          "mcp-server-odbc"
        ],
        "env": {
          "DB_URL": "virtuoso+pyodbc://user:password@VOS"
        }
      }
    }
  },
  "ChristianHinge/dicom-mcp": {
    "mcpServers": {
      "dicom": {
        "command": "uv",
        "args": [
          "--directory",
          "/path/to/dicom-mcp",
          "run",
          "dicom-mcp",
          "/path/to/configuration.yaml"
        ]
      }
    }
  },
  "MCP-Mirror/alexatnordnet_mcp-google-custom-search-server": {
    "mcpServers": {
      "google-search": {
        "command": "node",
        "args": [
          "/absolute/path/to/mcp-google-custom-search-server/build/index.js"
        ],
        "env": {
          "GOOGLE_API_KEY": "your-api-key",
          "GOOGLE_SEARCH_ENGINE_ID": "your-search-engine-id"
        }
      }
    }
  },
  "takuya0206/bigquery-mcp-server": {
    "mcpServers": {
      "BigQuery": {
        "command": "/path/to/dist/bigquery-mcp-server",
        "args": [
          "--project-id",
          "your-project-id",
          "--location",
          "asia-northeast1",
          "--max-results",
          "1000",
          "--max-bytes-billed",
          "500000000000"
        ]
      }
    }
  },
  "lamemind/mcp-server-multiverse": {
    "mcpServers": {
      "job-multiverse": {
        "command": "npx",
        "args": [
          "-y",
          "@lamemind/mcp-server-multiverse@latest",
          "/path/to/your/job-multiverse.json"
        ]
      },
      "side-project-multiverse": {
        "command": "npx",
        "args": [
          "-y",
          "@lamemind/mcp-server-multiverse@latest",
          "/path/to/your/side-project-multiverse.json"
        ]
      }
    }
  },
  "gerred/mcp-server-replicate": {
    "globalShortcut": "Shift+Alt+A",
    "mcpServers": {
      "replicate": {
        "command": "uv",
        "args": [
          "tool",
          "run",
          "mcp-server-replicate"
        ],
        "env": {
          "REPLICATE_API_TOKEN": "APITOKEN"
        },
        "cwd": "$PATH_TO_REPO"
      }
    }
  },
  "eka-care/eka_mcp_server": {
    "mcpServers": {
      "eka-mcp-server": {
        "command": "/opt/homebrew/bin/uvx",
        "args": [
          "eka_mcp_server",
          "--eka-api-host",
          "https://api.eka.care",
          "--client-id",
          "<client_id>",
          "--client-secret",
          "<client_secret>"
        ]
      }
    }
  },
  "sarthakkimtani/mcp-image-gen": {
    "mcpServers": {
      "image-gen": {
        "command": "uv",
        "args": [
          "--directory",
          "/ABSOLUTE/PATH/TO/image-gen/",
          "run",
          "image-gen"
        ],
        "env": {
          "TOGETHER_AI_API_KEY": "<API KEY>"
        }
      }
    }
  },
  "simonwfarrow/worldpay-mcp": {
    "mcpServers": {
      "worldpay": {
        "name": "worldpay-server",
        "command": "node",
        "args": [
          "PATH TO server-stdio.js"
        ],
        "env": {
          "WORLDPAY_USERNAME": "USERNAME",
          "WORLDPAY_PASSWORD": "PASSWORD"
        }
      }
    }
  },
  "mattjoyce/senechal-mcp": {
    "mcpServers": {
      "senechal-health": {
        "command": "C:\\path\\to\\venv\\Scripts\\python.exe",
        "args": [
          "C:\\path\\to\\senechal_mcp_server.py"
        ],
        "env": {
          "SENECHAL_API_KEY": "your_api_key_here"
        }
      }
    }
  },
  "loglmhq/mcp-server-prometheus": {
    "mcpServers": {
      "mcp-server-prometheus": {
        "command": "/path/to/mcp-server-prometheus/build/index.js",
        "env": {
          "PROMETHEUS_URL": "http://your-prometheus-instance:9090"
        }
      }
    }
  },
  "ferrislucas/iterm-mcp": {
    "mcpServers": {
      "iterm-mcp": {
        "command": "npx",
        "args": [
          "-y",
          "iterm-mcp"
        ]
      }
    }
  },
  "DMontgomery40/deepseek-mcp-server": {
    "mcpServers": {
      "deepseek": {
        "command": "npx",
        "args": [
          "-y",
          "deepseek-mcp-server"
        ],
        "env": {
          "DEEPSEEK_API_KEY": "your-api-key"
        }
      }
    }
  },
  "TaazKareem/twitter-mcp-server": {
    "mcpServers": {
      "twitter-mcp-server": {
        "command": "/path/to/twitter-mcp-server/build/index.js"
      }
    }
  },
  "yctimlin/mcp_excalidraw": {
    "mcpServers": {
      "excalidraw": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "mcp/excalidraw"
        ],
        "env": {
          "LOG_LEVEL": "info",
          "DEBUG": "false"
        }
      }
    }
  },
  "gdli6177/mcp-prompt-server": {
    "mcpServers": {
      "prompt-server": {
        "command": "node",
        "args": [
          "/path/to/prompt-server/src/index.js"
        ],
        "transport": "stdio"
      }
    }
  },
  "mario-andreschak/mcp-image-recognition": {
    "mcpServers": {
      "image-recognition": {
        "command": "docker",
        "args": [
          "run",
          "--rm",
          "-i",
          "-v",
          "/path/on/host:/path/in/container",
          "zudsniper/mcp-image-recognition:latest"
        ],
        "env": {
          "VISION_PROVIDER": "openai",
          "OPENAI_API_KEY": "your-api-key",
          "OPENAI_MODEL": "gpt-4o"
        }
      }
    }
  },
  "sou-lab/esa-mcp-server": {
    "mcpServers": {
      "esa": {
        "command": "/path/to/node",
        "args": [
          "/path/to/esa-mcp-server/bin/cli.js"
        ],
        "env": {
          "ESA_API_KEY": "\u00e3\u0081\u0082\u00e3\u0081\u00aa\u00e3\u0081\u009f\u00e3\u0081\u00aeESA_API\u00e3\u0082\u00ad\u00e3\u0083\u00bc",
          "ESA_TEAM_NAME": "\u00e3\u0081\u0082\u00e3\u0081\u00aa\u00e3\u0081\u009f\u00e3\u0081\u00ae\u00e3\u0083\u0081\u00e3\u0083\u00bc\u00e3\u0083\u00a0\u00e5\u0090\u008d",
          "PORT": "3000"
        }
      }
    }
  },
  "Albo3/MCP-Server": {
    "mcpServers": {
      "MCPllmContext": {
        "command": "node",
        "args": [
          "ABSOLUTE_PATH_TO_YOUR_PROJECT/dist/index.js"
        ]
      }
    }
  },
  "GLips/Figma-Context-MCP": {
    "mcpServers": {
      "Framelink Figma MCP": {
        "command": "cmd",
        "args": [
          "/c",
          "npx",
          "-y",
          "figma-developer-mcp",
          "--figma-api-key=YOUR-KEY",
          "--stdio"
        ]
      }
    }
  },
  "alexandreroman/mcp-chess": {
    "mcpServers": {
      "mcp-chess": {
        "command": "/path/to/mcp-chess-binary"
      }
    }
  },
  "bytebase/dbhub": {
    "mcpServers": {
      "dbhub-postgres-docker": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "bytebase/dbhub",
          "--transport",
          "stdio",
          "--dsn",
          "postgres://user:password@host.docker.internal:5432/dbname?sslmode=disable"
        ]
      },
      "dbhub-postgres-npx": {
        "command": "npx",
        "args": [
          "-y",
          "@bytebase/dbhub",
          "--transport",
          "stdio",
          "--dsn",
          "postgres://user:password@localhost:5432/dbname?sslmode=disable"
        ]
      },
      "dbhub-demo": {
        "command": "npx",
        "args": [
          "-y",
          "@bytebase/dbhub",
          "--transport",
          "stdio",
          "--demo"
        ]
      }
    }
  },
  "joshuayoes/ios-simulator-mcp": {
    "mcpServers": {
      "ios-simulator": {
        "command": "node",
        "args": [
          "/path/to/your/ios-simulator-mcp/build/index.js"
        ]
      }
    }
  },
  "aldrin-labs/metal-mcp-server": {
    "mcpServers": {
      "metal": {
        "command": "node",
        "args": [
          "/path/to/metal-mcp/build/index.js"
        ]
      }
    }
  },
  "sammcj/bybit-mcp": {
    "mcpServers": {
      "bybit": {
        "command": "node",
        "args": [
          "/path/to/bybit-mcp/build/index.js"
        ],
        "env": {
          "BYBIT_API_KEY": "your-api-key",
          "BYBIT_API_SECRET": "your-api-secret",
          "BYBIT_USE_TESTNET": "false"
        }
      }
    }
  },
  "agentrpc/agentrpc": {
    "mcpServers": {
      "agentrpc": {
        "command": "npx",
        "args": [
          "-y",
          "agentrpc",
          "mcp"
        ],
        "env": {
          "AGENTRPC_API_SECRET": "<YOUR_API_SECRET>"
        }
      }
    }
  },
  "arjunkmrm/mcp-sg-lta": {
    "mcpServers": {
      "lta": {
        "command": "npx",
        "args": [
          "-y",
          "arjunkmrm/mcp-sg-lta"
        ],
        "env": {
          "LTA_API_KEY": "YOUR-API-KEY"
        }
      }
    }
  },
  "jasondsmith72/Connectwise-PSA-API-MCP-Server": {
    "mcpServers": {
      "connectwise": {
        "command": "node",
        "args": [
          "path/to/dist/index.js"
        ],
        "manifest": "path/to/connectwise-mcp-manifest.json",
        "env": {
          "CW_COMPANY_ID": "your_company_id",
          "CW_PUBLIC_KEY": "your_public_key",
          "CW_PRIVATE_KEY": "your_private_key",
          "CW_API_URL": "https://api-na.myconnectwise.net/v4_6_release/apis/3.0",
          "PORT": "3000"
        },
        "options": {
          "autoStart": true,
          "logLevel": "info"
        }
      }
    }
  },
  "MCP-Mirror/wrale_mcp-server-make": {
    "mcpServers": {
      "make": {
        "command": "uvx",
        "args": [
          "mcp-server-make",
          "--make-path",
          "/absolute/path/to/Makefile",
          "--working-dir",
          "/absolute/path/to/working/dir"
        ]
      }
    }
  },
  "spences10/mcp-turso": {
    "mcpServers": {
      "mcp-turso": {
        "command": "wsl.exe",
        "args": [
          "bash",
          "-c",
          "TURSO_API_TOKEN=your-token TURSO_ORGANIZATION=your-org node /path/to/mcp-turso/dist/index.js"
        ]
      }
    }
  },
  "dentaku7/mcp-go-sdk": {
    "mcpServers": {
      "mytool": {
        "command": "mytool",
        "args": [],
        "env": {}
      }
    }
  },
  "MCP-Mirror/apappascs_tavily-search-mcp-server": {
    "mcpServers": {
      "tavily-search-server": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "-e",
          "TAVILY_API_KEY",
          "-v",
          "/Users/<username>/<FULL_PATH...>/tavily-search-mcp-server:/app",
          "tavily-search-mcp-server"
        ],
        "env": {
          "TAVILY_API_KEY": "your_api_key_here"
        }
      }
    }
  },
  "ibraheem4/cline-github-mcp": {
    "mcpServers": {
      "github": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-github"
        ],
        "env": {
          "GITHUB_TOKEN": "your_github_personal_access_token"
        }
      },
      "github-pr": {
        "command": "node",
        "args": [
          "/path/to/cline-github-mcp/build/index.js"
        ],
        "env": {
          "GITHUB_TOKEN": "your_github_personal_access_token"
        }
      }
    }
  },
  "MCP-Mirror/KS-GEN-AI_confluence-mcp-server": {
    "mcpServers": {
      "Confluence communication server": {
        "command": "node",
        "args": [
          "/PATH_TO_THE_PROJECT/build/index.js"
        ],
        "env": {
          "CONFLUENCE_URL": "https://XXXXXXXX.atlassian.net/wiki",
          "CONFLUENCE_API_MAIL": "Your email",
          "CONFLUENCE_API_KEY": "KEY_FROM: https://id.atlassian.com/manage-profile/security/api-tokens"
        }
      }
    }
  },
  "Alec2435/amazon-fresh-server": {
    "mcpServers": {
      "amazon-fresh-server": {
        "command": "/path/to/amazon-fresh-server/build/index.js"
      }
    }
  },
  "Trae-AI/Trae": {
    "mcpServers": {
      "baidu-map": {
        "command": "npx",
        "args": [
          "-y",
          "@baidumap/mcp-server-baidu-map"
        ],
        "env": {
          "BAIDU_MAP_API_KEY": "xxx"
        }
      }
    }
  },
  "planetarium/mcp-agent8": {
    "mcpServers": {
      "Agent8": {
        "command": "npx",
        "args": [
          "--yes",
          "agent8-mcp-server"
        ]
      }
    }
  },
  "ChronulusAI/chronulus-mcp": {
    "mcpServers": {
      "chronulus-agents": {
        "command": "uvx",
        "args": [
          "chronulus-mcp"
        ],
        "env": {
          "CHRONULUS_API_KEY": "<YOUR_CHRONULUS_API_KEY>"
        }
      },
      "filesystem": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-filesystem",
          "/path/to/AIWorkspace"
        ]
      },
      "fetch": {
        "command": "uvx",
        "args": [
          "mcp-server-fetch"
        ]
      }
    }
  },
  "sdimitrov/mcp-memory": {
    "mcpServers": {
      "memory": {
        "command": "node",
        "args": [
          "/Users/username/workspace/memory/src/server.js"
        ]
      }
    }
  },
  "Rootly-AI-Labs/Rootly-MCP-server": {
    "mcpServers": {
      "rootly": {
        "command": "uv",
        "args": [
          "run",
          "--directory",
          "/path/to/rootly-mcp-server",
          "rootly-mcp-server"
        ],
        "env": {
          "ROOTLY_API_TOKEN": "<YOUR_ROOTLY_API_TOKEN>"
        }
      }
    }
  },
  "awkoy/replicate-flux-mcp": {
    "mcpServers": {
      "image-generation-mcp": {
        "command": "npx",
        "args": [
          "/Users/{USERNAME}/{PATH_TO}/replicate-flux-mcp/build/index.js"
        ],
        "env": {
          "REPLICATE_API_TOKEN": "YOUR REPLICATE API TOKEN"
        }
      }
    }
  },
  "VxASI/blender-mcp-vxai": {
    "mcpServers": {
      "blender": {
        "command": "uvx",
        "args": [
          "blender-mcp-vxai==1.0.7"
        ]
      }
    }
  },
  "oraichain/multichain-mcp": {
    "mcpServers": {
      "multichain-mcp": {
        "command": "node",
        "args": [
          "packages/mcp-server/dist/index.js"
        ],
        "env": {
          "PORT": "4000",
          "RPC_URL": "your_rpc_url"
        },
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "MCP-Mirror/knmurphy_glide-api-mcp-server": {
    "mcpServers": {
      "glide-api": {
        "command": "node",
        "args": [
          "path/to/build/index.js"
        ],
        "env": {
          "GLIDE_API_KEY": "your-api-key-here",
          "GLIDE_API_VERSION": "v2"
        }
      }
    }
  },
  "phil65/mcp-server-llmling": {
    "mcpServers": {
      "llmling": {
        "command": "uvx",
        "args": [
          "mcp-server-llmling",
          "start",
          "path/to/your/config.yml"
        ],
        "env": {}
      }
    }
  },
  "MCP-Mirror/SmallCloudCo_smallcloud-mcp-server": {
    "mcpServers": {
      "smallcloud-mcp-server": {
        "command": "/opt/homebrew/bin/node",
        "args": [
          "~/Git/smallcloud-mcp-server/index.js"
        ]
      }
    }
  },
  "MCP-Mirror/loglmhq_mcp-server-prometheus": {
    "mcpServers": {
      "mcp-server-prometheus": {
        "command": "/path/to/mcp-server-prometheus/build/index.js",
        "env": {
          "PROMETHEUS_URL": "http://your-prometheus-instance:9090"
        }
      }
    }
  },
  "ZubeidHendricks/youtube-mcp-server": {
    "mcpServers": {
      "youtube": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-youtube"
        ],
        "env": {
          "YOUTUBE_API_KEY": "<YOUR_API_KEY>"
        }
      }
    }
  },
  "Greg-Swiftomatic/substack-mcp": {
    "mcpServers": {
      "substack": {
        "command": "uv",
        "args": [
          "--directory",
          "/ABSOLUTE/PATH/TO/substack-mcp",
          "run",
          "substack_mcp.py"
        ]
      }
    }
  },
  "madhukarkumar/singlestore-mcp-server": {
    "mcpServers": {
      "singlestore": {
        "command": "node",
        "args": [
          "path/to/mcp-server-singlestore/build/index.js"
        ],
        "env": {
          "SINGLESTORE_HOST": "your-host.singlestore.com",
          "SINGLESTORE_PORT": "3306",
          "SINGLESTORE_USER": "your-username",
          "SINGLESTORE_PASSWORD": "your-password",
          "SINGLESTORE_DATABASE": "your-database",
          "SSE_ENABLED": "true",
          "SSE_PORT": "3333"
        }
      }
    }
  },
  "robertoamoreno/couchdb-mcp-server": {
    "mcpServers": {
      "mcp-server": {
        "command": "/path/to/couchdb-mcp-server/build/index.js",
        "env": {
          "COUCHDB_URL": "http://username:password@localhost:5984"
        }
      }
    }
  },
  "xzq-xu/jvm-mcp-server": {
    "mcpServers": {
      "jvm-mcp-server": {
        "command": "uv",
        "args": [
          "--directory",
          "/path/to/jvm-mcp-server",
          "run",
          "jvm-mcp-server"
        ]
      }
    }
  },
  "irvinebroque/remote-mcp-server-9": {
    "mcpServers": {
      "math": {
        "command": "npx",
        "args": [
          "mcp-remote",
          "https://worker-name.account-name.workers.dev/sse"
        ]
      }
    }
  },
  "sanity-io/sanity-mcp-server": {
    "mcpServers": {
      "sanity": {
        "command": "npx",
        "args": [
          "-y",
          "@sanity/mcp-server@latest"
        ],
        "env": {
          "SANITY_PROJECT_ID": "your-project-id",
          "SANITY_DATASET": "production",
          "SANITY_API_TOKEN": "your-sanity-api-token"
        }
      }
    }
  },
  "MCP-Mirror/ZubeidHendricks_azure-onenote-mcp-server": {
    "mcpServers": {
      "onenote": {
        "command": "npx",
        "args": [
          "-y",
          "mcp-server-onenote"
        ],
        "env": {
          "AZURE_TENANT_ID": "<YOUR_TENANT_ID>",
          "AZURE_CLIENT_ID": "<YOUR_CLIENT_ID>",
          "AZURE_CLIENT_SECRET": "<YOUR_CLIENT_SECRET>"
        }
      }
    }
  },
  "nloui/paperless-mcp": {
    "mcpServers": {
      "paperless": {
        "command": "npx",
        "args": [
          "paperless-mcp",
          "http://your-paperless-instance:8000",
          "your-api-token"
        ]
      }
    }
  },
  "cmsparks/remote-mcp-server-2": {
    "mcpServers": {
      "math": {
        "command": "npx",
        "args": [
          "mcp-remote",
          "https://worker-name.account-name.workers.dev/sse"
        ]
      }
    }
  },
  "FarukNetworks/mcp-mssql": {
    "mcpServers": {
      "mssql": {
        "command": "uv",
        "args": [
          "--directory",
          "path/to/mssql_mcp_server",
          "run",
          "mssql_mcp_server"
        ],
        "env": {
          "MSSQL_SERVER": "localhost",
          "MSSQL_USER": "your_username",
          "MSSQL_PASSWORD": "your_password",
          "MSSQL_DATABASE": "your_database"
        }
      }
    }
  },
  "MCP-Mirror/openSVM_zig-mcp-server": {
    "mcpServers": {
      "zig": {
        "command": "node",
        "args": [
          "/path/to/zig-mcp-server/build/index.js"
        ],
        "env": {
          "GITHUB_TOKEN": "your_token_here",
          "NODE_OPTIONS": "--experimental-vm-modules"
        },
        "restart": true
      }
    }
  },
  "qpd-v/mcp-DEEPwebresearch": {
    "mcpServers": {
      "deepwebresearch": {
        "command": "mcp-deepwebresearch",
        "args": []
      }
    }
  },
  "GRID-is/claude-mcp": {
    "mcpServers": {
      "grid": {
        "command": "node",
        "args": [
          "/ABSOLUTE/PATH/TO/claude-mcp/dist/index.js"
        ],
        "env": {
          "GRID_API_KEY": "YOUR_API_KEY"
        }
      }
    }
  },
  "qpd-v/mcp-guide": {
    "mcpServers": {
      "mcp-guide": {
        "command": "node",
        "args": [
          "path/to/mcp-guide/dist/index.js"
        ]
      }
    }
  },
  "rakeshgangwar/n8n-mcp-server": {
    "mcpServers": {
      "n8n-server": {
        "command": "/path/to/n8n-server/build/index.js"
      }
    }
  },
  "marcelmarais/spotify-mcp-server": {
    "mcpServers": {
      "spotify": {
        "command": "node",
        "args": [
          "~/../spotify-mcp-server/build/index.js"
        ],
        "autoApprove": [
          "getListeningHistory",
          "getNowPlaying"
        ]
      }
    }
  },
  "magnetai/mcp-free-usdc-transfer": {
    "mcpServers": {
      "free-usdc-transfer": {
        "command": "npx",
        "args": [
          "-y",
          "@magnetai/free-usdc-transfer"
        ],
        "env": {
          "COINBASE_CDP_API_KEY_NAME": "YOUR_COINBASE_CDP_API_KEY_NAME",
          "COINBASE_CDP_PRIVATE_KEY": "YOUR_COINBASE_CDP_PRIVATE_KEY"
        }
      }
    }
  },
  "cuongtl1992/mcp-dbs": {
    "mcpServers": {
      "mcp-dbs": {
        "command": "node",
        "args": [
          "/path/to/your/mcp-dbs/dist/cli.js",
          "--stdio"
        ],
        "env": {
          "MCP_MONGODB_URI": "mongodb://localhost:27017",
          "MCP_MONGODB_DATABASE": "your-database-name"
        }
      }
    }
  },
  "franccesco/hex-mcp": {
    "mcpServers": {
      "hex-mcp": {
        "command": "hex-mcp",
        "args": [
          "run"
        ]
      }
    }
  },
  "r3-yamauchi/kintone-mcp-server": {
    "mcpServers": {
      "kintone": {
        "command": "node",
        "env": {
          "KINTONE_DOMAIN": "[\u00e3\u0081\u0082\u00e3\u0081\u00aa\u00e3\u0081\u009f\u00e3\u0081\u008c\u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e3\u0081\u0099\u00e3\u0082\u008b\u00e3\u0082\u00b5\u00e3\u0083\u0096\u00e3\u0083\u0089\u00e3\u0083\u00a1\u00e3\u0082\u00a4\u00e3\u0083\u00b3].cybozu.com",
          "KINTONE_USERNAME": "MCP\u00e6\u008e\u00a5\u00e7\u00b6\u009a\u00e3\u0081\u00a7\u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e3\u0081\u0099\u00e3\u0082\u008bkintone\u00e3\u0083\u00a6\u00e3\u0083\u00bc\u00e3\u0082\u00b6\u00e3\u0083\u00bc\u00e5\u0090\u008d",
          "KINTONE_PASSWORD": "kintone\u00e3\u0083\u00a6\u00e3\u0083\u00bc\u00e3\u0082\u00b6\u00e3\u0083\u00bc\u00e3\u0081\u00ae\u00e3\u0083\u0091\u00e3\u0082\u00b9\u00e3\u0083\u00af\u00e3\u0083\u00bc\u00e3\u0083\u0089\u00ef\u00bc\u0088\u00e5\u00b9\u00b3\u00e6\u0096\u0087\u00ef\u00bc\u0089"
        },
        "args": [
          "[kintone-mcp-server\u00e3\u0082\u0092\u00e9\u0085\u008d\u00e7\u00bd\u00ae\u00e3\u0081\u0097\u00e3\u0081\u009f\u00e3\u0083\u0091\u00e3\u0082\u00b9]/server.js"
        ]
      }
    }
  },
  "Bigsy/maven-mcp-server": {
    "mcpServers": {
      "maven-deps-server": {
        "command": "mcp-maven-deps"
      }
    }
  },
  "cablate/mcp-google-map": {
    "mcpServers": {
      "google-map": {
        "command": "npx",
        "args": [
          "-y",
          "@cablate/mcp-google-map"
        ],
        "env": {
          "GOOGLE_MAPS_API_KEY": "your_api_key"
        },
        "enabled": true
      }
    }
  },
  "DaInfernalCoder/perplexity-mcp": {
    "mcpServers": {
      "perplexity": {
        "command": "npx",
        "args": [
          "-y",
          "perplexity-mcp"
        ],
        "env": {
          "PERPLEXITY_API_KEY": "your_api_key"
        }
      }
    }
  },
  "MCP-Mirror/zxkane_mcp-server-amazon-bedrock": {
    "mcpServers": {
      "amazon-bedrock": {
        "command": "npx",
        "args": [
          "-y",
          "@zxkane/mcp-server-amazon-bedrock"
        ],
        "env": {
          "AWS_PROFILE": "your_profile_name",
          "AWS_ACCESS_KEY_ID": "your_access_key",
          "AWS_SECRET_ACCESS_KEY": "your_secret_key",
          "AWS_REGION": "us-east-1"
        }
      }
    }
  },
  "openagentplatform/dive": {
    "mcpServers": {
      "MCP_SERVER_NAME": {
        "enabled": true,
        "transport": "sse",
        "url": "YOUR_SSE_SERVER_URL"
      }
    }
  },
  "blake365/options-chain": {
    "mcpServers": {
      "options-chain": {
        "command": "node",
        "args": [
          "/Full/Route/to/Folder/options-chain/build/index.js"
        ],
        "env": {
          "token": "your_sandbox_api_token_here"
        }
      }
    }
  },
  "BurtTheCoder/mcp-virustotal": {
    "mcpServers": {
      "virustotal": {
        "command": "node",
        "args": [
          "--experimental-modules",
          "/absolute/path/to/mcp-virustotal/build/index.js"
        ],
        "env": {
          "VIRUSTOTAL_API_KEY": "your-virustotal-api-key"
        }
      }
    }
  },
  "MCP-Mirror/PoliTwit1984_mcp-perplexity-server": {
    "mcpServers": {
      "perplexity": {
        "command": "node",
        "args": [
          "/absolute/path/to/perplexity-server/build/index.js"
        ],
        "env": {
          "PERPLEXITY_API_KEY": "your-api-key-here"
        }
      }
    }
  },
  "peancor/moodle-mcp-server": {
    "mcpServers": {
      "moodle-mcp-server": {
        "command": "C:\\path\\to\\ode.exe",
        "args": [
          "C:\\path\\to\\moodle-mcp-server\\build\\index.js"
        ],
        "env": {
          "MOODLE_API_URL": "https://your-moodle.com/webservice/rest/server.php",
          "MOODLE_API_TOKEN": "your_moodle_api_token",
          "MOODLE_COURSE_ID": "your_course_id"
        },
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "yokingma/one-search-mcp": {
    "mcpServers": {
      "one-search-mcp": {
        "command": "npx",
        "args": [
          "-y",
          "one-search-mcp"
        ],
        "env": {
          "SEARCH_PROVIDER": "searxng",
          "SEARCH_API_URL": "http://127.0.0.1:8080",
          "SEARCH_API_KEY": "YOUR_API_KEY",
          "FIRECRAWL_API_URL": "http://127.0.0.1:3002",
          "FIRECRAWL_API_KEY": "YOUR_API_KEY"
        }
      }
    }
  },
  "emmett-deen/Linear-MCP-Server": {
    "mcpServers": {
      "linear": {
        "command": "npx",
        "args": [
          "-y",
          "@emmett.deen/linear-mcp-server"
        ],
        "env": {
          "LINEAR_API_KEY": "your_linear_api_key_here"
        }
      }
    }
  },
  "SurajAdsul/mcp-server-salesforce": {
    "mcpServers": {
      "salesforce": {
        "command": "npx",
        "args": [
          "-y",
          "@surajadsul02/mcp-server-salesforce"
        ],
        "env": {
          "SALESFORCE_USERNAME": "your_username",
          "SALESFORCE_PASSWORD": "your_password",
          "SALESFORCE_CONSUMER_KEY": "your_consumer_key",
          "SALESFORCE_CONSUMER_SECRET": "your_consumer_secret",
          "SALESFORCE_INSTANCE_URL": "https://login.salesforce.com"
        }
      }
    }
  },
  "excelsier/things-fastmcp": {
    "mcpServers": {
      "things": {
        "command": "uv",
        "args": [
          "--directory",
          "/ABSOLUTE/PATH/TO/PARENT/FOLDER/things-mcp",
          "run",
          "things_server.py"
        ]
      }
    }
  },
  "minhyeoky/mcp-server-ledger": {
    "mcpServers": {
      "ledger": {
        "command": "uv",
        "args": [
          "run",
          "--env-file",
          "/path/to/your/.env",
          "--with",
          "mcp[cli]",
          "mcp",
          "run",
          "<repo_path>/main.py"
        ]
      }
    }
  },
  "j4c0bs/mcp-server-sql-analyzer": {
    "mcpServers": {
      "sql-analyzer": {
        "command": "uv",
        "args": [
          "--directory",
          "/path/to/mcp-server-sql-analyzer",
          "run",
          "mcp-server-sql-analyzer"
        ]
      }
    }
  },
  "8bitgentleman/activitywatch-mcp-server": {
    "mcpServers": {
      "activitywatch": {
        "command": "node",
        "args": [
          "/path/to/activitywatch-mcp-server/dist/index.js"
        ]
      }
    }
  },
  "web-agent-master/google-search": {
    "mcpServers": {
      "google-search": {
        "command": "node",
        "args": [
          "C:/path/to/your/google-search/dist/src/mcp-server.js"
        ]
      }
    }
  },
  "MatthewDailey/mcp-starter": {
    "mcpServers": {
      "mcp-starter": {
        "command": "node",
        "args": [
          "/Users/matt/code/mcp-starter/dist/index.cjs"
        ]
      }
    }
  },
  "mmokarzel/brand-to-theme-mcp-server": {
    "mcpServers": {
      "github.com/mmokarzel/brand-to-theme-mcp-server": {
        "command": "node",
        "args": [
          "/ruta/a/brand-to-theme-mcp/build/index.js"
        ],
        "env": {},
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "johnneerdael/netskope-mcp": {
    "mcpServers": {
      "netskope-mcp": {
        "command": "node",
        "args": [
          "dist/cli.js"
        ],
        "cwd": "/path/to/netskope-mcp",
        "env": {
          "NETSKOPE_BASE_URL": "https://your-tenant.goskope.com",
          "NETSKOPE_API_KEY": "your-token"
        }
      }
    }
  },
  "Omedia/mcp-server-drupal": {
    "mcpServers": {
      "mcp-server-drupal": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "-e",
          "DRUPAL_AUTH_TOKEN",
          "ghcr.io/omedia/mcp-server-drupal",
          "--drupal-url=__DRUPAL_BASE_URL__"
        ],
        "env": {
          "DRUPAL_AUTH_TOKEN": "<AUTH_TOKEN>"
        }
      }
    }
  },
  "kshern/image-tools-mcp": {
    "mcpServers": {
      "agentql": {
        "command": "/path/to/agentql-mcp/dist/index.js",
        "env": {
          "AGENTQL_API_KEY": "YOUR_API_KEY"
        }
      }
    }
  },
  "falgom4/calendar-mcp": {
    "mcpServers": {
      "calendar": {
        "command": "npx",
        "args": [
          "@nchufa/calendar"
        ]
      }
    }
  },
  "andypost/mcp-server-ts-trello": {
    "mcpServers": {
      "trello-ts": {
        "command": "node",
        "args": [
          "/path/to/mcp-server-ts-trello/build/index.js"
        ],
        "env": {
          "TRELLO_API_KEY": "your_api_key",
          "TRELLO_TOKEN": "your_token"
        }
      }
    }
  },
  "thingspanel/thingspanel-mcp": {
    "mcpServers": {
      "thingspanel": {
        "command": "thingspanel-mcp",
        "args": [
          "--api-key",
          "Your API Key",
          "--base-url",
          "Your Base URL"
        ]
      }
    }
  },
  "jasondsmith72/CWM-API-Gateway-MCP": {
    "mcpServers": {
      "CWM-API-Gateway-MCP": {
        "command": "python3",
        "args": [
          "/path/to/CWM-API-Gateway-MCP/api_gateway_server.py"
        ],
        "env": {
          "CONNECTWISE_API_URL": "https://na.myconnectwise.net/v4_6_release/apis/3.0",
          "CONNECTWISE_COMPANY_ID": "your_company_id",
          "CONNECTWISE_PUBLIC_KEY": "your_public_key",
          "CONNECTWISE_PRIVATE_KEY": "your_private_key",
          "CONNECTWISE_AUTH_PREFIX": "yourprefix+"
        }
      }
    }
  },
  "kennethreitz/mcp-applemusic": {
    "mcpServers": {
      "iTunesControlServer": {
        "command": "uvx",
        "args": [
          "-n",
          "mcp-applemusic"
        ]
      }
    }
  },
  "MCP-Mirror/Hawstein_mcp-server-reddit": {
    "mcpServers": {
      "reddit": {
        "command": "python",
        "args": [
          "-m",
          "mcp_server_reddit"
        ]
      }
    }
  },
  "awkoy/notion-mcp-server": {
    "mcpServers": {
      "notion-mcp-server": {
        "command": "npx",
        "args": [
          "-y",
          "notion-mcp-server"
        ],
        "env": {
          "NOTION_TOKEN": "YOUR_KEY",
          "NOTION_PAGE_ID": "YOUR_PAGE_ID"
        }
      }
    }
  },
  "henrygabriels/claude-mcp-tools": {
    "mcpServers": {
      "news-search": {
        "command": "python /absolute/path/to/claude-mcp-tools/news-search-server/server.py"
      },
      "wikipedia": {
        "command": "python /absolute/path/to/claude-mcp-tools/wikipedia-server/server.py"
      },
      "analytics": {
        "command": "python /absolute/path/to/claude-mcp-tools/analytics-server/server.py"
      }
    }
  },
  "christyjacob4/mcp-server-appwrite": {
    "mcpServers": {
      "appwrite": {
        "command": "uvx",
        "args": [
          "mcp-server-appwrite",
          "--projectId",
          "YOUR_PROJECT_ID",
          "--apiKey",
          "YOUR_API_KEY"
        ]
      }
    }
  },
  "MCP-Mirror/blazickjp_shell-mcp-server": {
    "mcpServers": {
      "shell-mcp-server": {
        "command": "uv",
        "args": [
          "--directory",
          "/path/to/shell-mcp-server",
          "run",
          "shell-mcp-server",
          "/path/to/allowed/dir1",
          "/path/to/allowed/dir2",
          "--shell",
          "bash",
          "/bin/bash",
          "--shell",
          "zsh",
          "/bin/zsh"
        ]
      }
    }
  },
  "blazickjp/web-browser-mcp-server": {
    "mcpServers": {
      "web-browser-mcp-server": {
        "command": "uv",
        "args": [
          "--directory",
          "path/to/cloned/web-browser-mcp-server",
          "run",
          "web-browser-mcp-server"
        ],
        "env": {
          "REQUEST_TIMEOUT": "30"
        }
      }
    }
  },
  "genm/mcp-server-discord-webhook": {
    "mcpServers": {
      "discord-webhook": {
        "command": "npx",
        "args": [
          "-y",
          "@genpm/mcp-server-discord-webhook"
        ],
        "env": {
          "DISCORD_WEBHOOK_URL": "your-discord-webhook-url"
        },
        "alwaysAllow": [
          "send_message"
        ]
      }
    }
  },
  "snaggle-ai/openapi-mcp-server": {
    "mcpServers": {
      "petstore-api": {
        "command": "npx",
        "args": [
          "openapi-mcp-server",
          "/abs/path/to/petstore-openapi.json"
        ]
      }
    }
  },
  "AidenYangX/mapbox-mcp-server": {
    "mcpServers": {
      "mapbox-mcp-server": {
        "command": "node",
        "args": [
          "/absolute/path/to/mapbox-mcp-server/build/index.js"
        ],
        "env": {
          "MAPBOX_ACCESS_TOKEN": "your-api-key"
        }
      }
    }
  },
  "aashari/mcp-atlassian-confluence": {
    "mcpServers": {
      "aashari/mcp-atlassian-confluence": {
        "command": "npx",
        "args": [
          "-y",
          "aashari/mcp-atlassian-confluence"
        ]
      }
    }
  },
  "MCP-Mirror/aldrin-labs_metal-mcp-server": {
    "mcpServers": {
      "metal": {
        "command": "node",
        "args": [
          "/path/to/metal-mcp/build/index.js"
        ]
      }
    }
  },
  "MCP-Mirror/reading-plus-ai_mcp-server-data-exploration": {
    "mcpServers": {
      "mcp-server-ds": {
        "command": "uvx",
        "args": [
          "mcp-server-ds"
        ]
      }
    }
  },
  "ariunbolor/nsaf-mcp-server": {
    "mcpServers": {
      "nsaf": {
        "command": "nsaf-mcp-server",
        "args": [],
        "env": {},
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "HarshJ23/deepseek-claude-MCP-server": {
    "mcpServers": {
      "deepseek-claude": {
        "command": "uv",
        "args": [
          "--directory",
          "C:\\ABSOLUTE\\PATH\\TO\\PARENT\\FOLDER\\deepseek-claude",
          "run",
          "server.py"
        ]
      }
    }
  },
  "asusevski/opendota-mcp-server": {
    "mcpServers": {
      "opendota": {
        "command": "wsl.exe",
        "args": [
          "--",
          "bash",
          "-c",
          "cd ~/opendota-mcp-server && source .venv/bin/activate && python src/opendota_server/server.py"
        ]
      }
    }
  },
  "bytefer/mcp-flux-schnell": {
    "mcpServers": {
      "mcp-flux-schnell": {
        "command": "node",
        "args": [
          "/path/to/mcp-flux-schnell/build/index.js"
        ],
        "env": {
          "FLUX_API_URL": "your flux api url",
          "FLUX_API_TOKEN": "your flux api token",
          "WORKING_DIR": "your working directory"
        }
      }
    }
  },
  "baryhuang/mcp-server-any-openapi": {
    "mcpServers": {
      "any_openapi": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "-e",
          "OPENAPI_JSON_DOCS_URL=https://api.example.com/openapi.json",
          "-e",
          "MCP_API_PREFIX=finance",
          "buryhuang/mcp-server-any-openapi:latest"
        ]
      }
    }
  },
  "knmurphy/glide-api-mcp-server": {
    "mcpServers": {
      "glide-api": {
        "command": "node",
        "args": [
          "path/to/build/index.js"
        ],
        "env": {
          "GLIDE_API_KEY": "your-api-key-here",
          "GLIDE_API_VERSION": "v2"
        }
      }
    }
  },
  "peterparker57/clarion-builder-mcp-server": {
    "mcpServers": {
      "clarion-builder": {
        "command": "node",
        "args": [
          "path/to/clarion-builder-mcp-server/dist/index.js"
        ],
        "env": {}
      }
    }
  },
  "amekala/Ads-manager-mcp-server": {
    "name": "Amazon Ads Manager",
    "version": "1.0.4",
    "description": "Connect to your Amazon Advertising data and analyze campaign performance",
    "mcpServers": {
      "ads-manager": {
        "name": "Ads Manager MCP Server",
        "version": "1.0.4",
        "description": "MCP Server for Amazon Advertising data analysis",
        "transport": "sse",
        "endpoint": "https://mcp-server-sync-abhilashreddi.replit.app/mcp/sse",
        "headers": {
          "Authorization": "Bearer YOUR_API_KEY_HERE"
        }
      }
    }
  },
  "DynamicEndpoints/Netlify-MCP-Server": {
    "mcpServers": {
      "netlify": {
        "command": "node",
        "args": [
          "/path/to/Netlify-MCP-Server/build/index.js"
        ],
        "env": {
          "NETLIFY_AUTH_TOKEN": "YOUR_NETLIFY_PAT_HERE"
        },
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "braveTony44/docker-mcp-server": {
    "mcpServers": {
      "dockerMcp": {
        "command": "node",
        "args": [
          "docker-mcp/index.js"
        ],
        "env": {},
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "takumi0706/mcp-google-calendar": {
    "mcpServers": {
      "googleCalendar": {
        "command": "node",
        "args": [
          "-e",
          "require('child_process').spawn('node', [require.resolve('@takumi0706/mcp-google-calendar/claude_desktop_launcher.js')], {stdio: 'inherit', env: process.env}).on('exit', (code) => process.exit(code || 0));"
        ],
        "env": {
          "GOOGLE_CLIENT_ID": "<YOUR_CLIENT_ID>",
          "GOOGLE_CLIENT_SECRET": "<YOUR_CLIENT_SECRET>",
          "MCP_PORT": "3000"
        }
      }
    }
  },
  "Outblock/flow-mcp-server": {
    "mcpServers": {
      "flow-mcp": {
        "serverUrl": "http://localhost:3000",
        "env": {
          "FLOW_NETWORK": "mainnet"
        }
      }
    }
  },
  "macrat/mcp-server-kintone": {
    "mcpServers": {
      "kintone": {
        "command": "C:\\path\\to\\mcp-server-kintone.exe",
        "env": {
          "KINTONE_BASE_URL": "https://<domain>.cybozu.com",
          "KINTONE_USERNAME": "<your username>",
          "KINTONE_PASSWORD": "<your password>",
          "KINTONE_API_TOKEN": "<your api token>, <another api token>, ...",
          "KINTONE_ALLOW_APPS": "1, 2, 3, ...",
          "KINTONE_DENY_APPS": "4, 5, ..."
        }
      }
    }
  },
  "CoderGamester/mcp-unity": {
    "mcpServers": {
      "mcp-unity": {
        "command": "node",
        "args": [
          "ABSOLUTE/PATH/TO/mcp-unity/Server/build/index.js"
        ],
        "env": {
          "UNITY_PORT": "8090"
        }
      }
    }
  },
  "bananabit-dev/mcp": {
    "mcpServers": {
      "bananabit-mcp": {
        "command": "/absolute/path/to/your/.venv/bin/python",
        "args": [
          "-m",
          "app.mcp_server"
        ],
        "cwd": "/absolute/path/to/mcp",
        "env": {
          "PYTHONPATH": "/absolute/path/to/mcp",
          "AIMLAPI_KEY": "${env:AIMLAPI_KEY}",
          "SGAI_API_KEY": "${env:SGAI_API_KEY}"
        }
      }
    }
  },
  "MCP-Mirror/AllAboutAI-YT_mcp-servers": {
    "mcpServers": {
      "flux": {
        "command": "flux-server",
        "env": {
          "REPLICATE_API_TOKEN": "your-replicate-token"
        }
      }
    }
  },
  "orliesaurus/pulsemcp-server": {
    "mcpServers": {
      "pulsemcp": {
        "command": "npx",
        "args": [
          "-y",
          "pulsemcp-server"
        ]
      }
    }
  },
  "Coding-Solo/godot-mcp": {
    "mcpServers": {
      "godot": {
        "command": "node",
        "args": [
          "/absolute/path/to/godot-mcp/build/index.js"
        ],
        "env": {
          "DEBUG": "true"
        }
      }
    }
  },
  "cnosuke/mcp-sqlite": {
    "mcpServers": {
      "sqlite": {
        "command": "./bin/mcp-sqlite",
        "args": [
          "server",
          "--config",
          "config.yml"
        ],
        "env": {
          "LOG_PATH": "",
          "SQLITE_PATH": "/path/to/your/sqlite.db"
        }
      }
    }
  },
  "merill/lokka": {
    "mcpServers": {
      "lokka": {
        "command": "node",
        "args": [
          "<absolute-path-to-main.js>/src/mcp/build/main.js"
        ],
        "env": {
          "TENANT_ID": "<tenant-id>",
          "CLIENT_ID": "<client-id>",
          "CLIENT_SECRET": "<client-secret>"
        }
      }
    }
  },
  "abiorh001/mcp_omni_connect": {
    "LLM": {
      "provider": "openai",
      "model": "gpt-4",
      "temperature": 0.5,
      "max_tokens": 5000,
      "top_p": 0
    },
    "mcpServers": {
      "filesystem-server": {
        "command": "npx",
        "args": [
          "@modelcontextprotocol/server-filesystem",
          "/path/to/files"
        ]
      },
      "sse-server": {
        "type": "sse",
        "url": "http://localhost:3000/mcp",
        "headers": {
          "Authorization": "Bearer token"
        }
      },
      "docker-server": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "mcp/server"
        ]
      }
    }
  },
  "ssut/Remote-MCP": {
    "mcpServers": {
      "remote-mcp": {
        "command": "npx",
        "args": [
          "-y",
          "@remote-mcp/client"
        ],
        "env": {
          "REMOTE_MCP_URL": "http://localhost:9512",
          "HTTP_HEADER_Authorization": "Bearer <token>"
        }
      }
    }
  },
  "ai-ql/chat-mcp": {
    "mcpServers": {
      "filesystem": {
        "command": "node",
        "args": [
          "node_modules/@modelcontextprotocol/server-filesystem/dist/index.js",
          "D:/Github/mcp-test"
        ]
      }
    }
  },
  "salacoste/mcp-n8n-workflow-builder": {
    "mcpServers": {
      "n8n-workflow-builder-prod": {
        "command": "node",
        "args": [
          "path/to/build/index.js"
        ],
        "env": {
          "N8N_HOST": "https://production-n8n.example.com/api/v1/",
          "N8N_API_KEY": "your_prod_api_key",
          "MCP_PORT": "58921"
        }
      },
      "n8n-workflow-builder-dev": {
        "command": "node",
        "args": [
          "path/to/build/index.js"
        ],
        "env": {
          "N8N_HOST": "https://dev-n8n.example.com/api/v1/",
          "N8N_API_KEY": "your_dev_api_key",
          "MCP_PORT": "58922"
        }
      }
    }
  },
  "reading-plus-ai/mcp-server-data-exploration": {
    "mcpServers": {
      "mcp-server-ds": {
        "command": "uvx",
        "args": [
          "mcp-server-ds"
        ]
      }
    }
  },
  "takumi0706/google-calendar-mcp": {
    "mcpServers": {
      "google-calendar": {
        "command": "npx",
        "args": [
          "-y",
          "@takumi0706/google-calendar-mcp"
        ],
        "env": {
          "GOOGLE_CLIENT_ID": "your_client_id",
          "GOOGLE_CLIENT_SECRET": "your_client_secret",
          "GOOGLE_REDIRECT_URI": "http://localhost:4153/oauth2callback"
        }
      }
    }
  },
  "errajibadr/twilio_manager_mcp": {
    "mcpServers": {
      "baidu-map": {
        "command": "npx",
        "args": [
          "-y",
          "@baidumap/mcp-server-baidu-map"
        ],
        "env": {
          "BAIDU_MAP_API_KEY": "xxx"
        }
      }
    }
  },
  "jkawamoto/mcp-youtube-transcript": {
    "mcpServers": {
      "youtube-transcript": {
        "command": "uvx",
        "args": [
          "--from",
          "git+https://github.com/jkawamoto/mcp-youtube-transcript",
          "mcp-youtube-transcript"
        ]
      }
    }
  },
  "Lutra23/mcp-assistant-server": {
    "mcpServers": {
      "assistant": {
        "command": "node",
        "args": [
          "/path/to/mcp-assistant-server/build/index.js"
        ],
        "env": {
          "PORT": "3000",
          "LOG_LEVEL": "info"
        }
      }
    }
  },
  "vinsidious/mcp-pg-schema": {
    "mcpServers": {
      "postgres": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-postgres",
          "postgresql://localhost/mydb"
        ]
      }
    }
  },
  "EduBase/MCP": {
    "mcpServers": {
      "edubase": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "-e",
          "EDUBASE_API_URL",
          "-e",
          "EDUBASE_API_APP",
          "-e",
          "EDUBASE_API_KEY",
          "edubase/mcp"
        ],
        "env": {
          "EDUBASE_API_URL": "https://domain.edubase.net/api",
          "EDUBASE_API_APP": "your_integration_app_id",
          "EDUBASE_API_KEY": "your_integration_secret_key"
        }
      }
    }
  },
  "ejb503/multimodal-mcp-client": {
    "mcpServers": {
      "my-custom-server": {
        "id": "my-custom-server",
        "env": {
          "xxx": "xxx"
        },
        "command": "node",
        "args": [
          "/my-custom-server/build/index.js"
        ]
      }
    }
  },
  "cyanheads/github-mcp-server": {
    "mcpServers": {
      "github": {
        "command": "node",
        "args": [
          "/path/to/github-mcp-server/build/index.js"
        ],
        "env": {
          "GITHUB_TOKEN": "your_github_personal_access_token",
          "LOG_LEVEL": "info",
          "SERVER_NAME": "github-mcp-server"
        }
      }
    }
  },
  "h-yanagawa/research-mcp-server": {
    "mcpServers": {
      "Research MCP Server": {
        "command": "uv",
        "args": [
          "run",
          "--with",
          "mcp[cli]",
          "--with",
          "notion-client",
          "--with",
          "pydantic",
          "mcp",
          "run",
          "/path/to/research-mcp-server/server.py"
        ]
      }
    }
  },
  "fredericbarthelet/linkedin-mcp-server": {
    "mcpServers": {
      "linkedin": {
        "url": "http://localhost:3001/sse"
      }
    }
  },
  "RathodDarshil/mcp-postgres-query-server": {
    "mcpServers": {
      "postgres-query": {
        "command": "node",
        "args": [
          "/Users/darshilrathod/mcp-servers/mcp-postgres-query-server/dist/index.js",
          "postgresql://user:password@localhost:5432/mydatabase"
        ]
      }
    }
  },
  "l33tdawg/strapi-mcp": {
    "mcpServers": {
      "strapi-mcp": {
        "command": "/path/to/strapi-mcp/build/index.js",
        "env": {
          "STRAPI_URL": "http://localhost:1337",
          "STRAPI_API_TOKEN": "your-api-token-here",
          "STRAPI_DEV_MODE": "false"
        }
      }
    }
  },
  "terminallylazy/mcp-on-fhir": {
    "mcpServers": {
      "memory": {
        "enabled": true,
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-memory"
        ],
        "env": {
          "MEMORY_FILE_PATH": "./mcp-memory.json"
        }
      },
      "fhir": {
        "enabled": true,
        "url": "https://hapi.fhir.org/baseR4"
      }
    }
  },
  "handfuloflight/convex-mcp-server": {
    "mcpServers": {
      "convex-mcp-server": {
        "command": "/path/to/convex-mcp-server/build/index.js"
      }
    }
  },
  "nearai/near-mcp": {
    "mcpServers": {
      "near-mcp": {
        "command": "npx",
        "args": [
          "-y",
          "@nearai/near-mcp@latest",
          "run"
        ],
        "env": {}
      }
    }
  },
  "MCP-Mirror/ac3xx_mcp-servers-kagi": {
    "mcpServers": {
      "kagi-server": {
        "command": "/path/to/kagi-server/build/index.js",
        "env": {
          "KAGI_API_KEY": "your_api_key_here"
        }
      }
    }
  },
  "ShubhanshuSondhiya/MCP-TMDB": {
    "mcpServers": {
      "tmdb-mcp": {
        "command": "node",
        "args": [
          "/absolute/path/to/your/tmdb-mcp/build/index.js"
        ]
      }
    }
  },
  "burakdirin/clickhouse-mcp-server": {
    "mcpServers": {
      "clickhouse-mcp-server": {
        "command": "uvx",
        "args": [
          "clickhouse-mcp-server"
        ],
        "env": {
          "CLICKHOUSE_HOST": "localhost",
          "CLICKHOUSE_USER": "root",
          "CLICKHOUSE_PASSWORD": "password",
          "CLICKHOUSE_DATABASE": "[optional]",
          "CLICKHOUSE_READONLY": "true"
        }
      }
    }
  },
  "MCP-Mirror/TeamDman_mcp-server-hello": {
    "mcpServers": {
      "current-time": {
        "command": "mcp-rs-template",
        "args": [
          "--mcp"
        ],
        "env": {
          "API_KEY": "xxxx"
        }
      }
    }
  },
  "shuntaka9576/cal2prompt": {
    "mcpServers": {
      "cal2prompt": {
        "command": "/Users/username/.cargo/bin/cal2prompt",
        "args": [
          "mcp"
        ],
        "env": {
          "HOME": "/Users/username"
        }
      }
    }
  },
  "skrapeai/skrape-mcp": {
    "mcpServers": {
      "skrape": {
        "command": "node",
        "args": [
          "path/to/skrape-mcp/build/index.js"
        ],
        "env": {
          "SKRAPE_API_KEY": "your-key-here"
        }
      }
    }
  },
  "MarcusJellinghaus/mcp_server_filesystem": {
    "mcpServers": {
      "filesystem": {
        "command": "C:\\path\\to\\mcp_server_filesystem\\.venv\\Scripts\\python.exe",
        "args": [
          "C:\\path\\to\\mcp_server_filesystem\\src\\main.py",
          "--project-dir",
          "C:\\path\\to\\your\\specific\\project",
          "--log-level",
          "INFO"
        ],
        "env": {
          "PYTHONPATH": "C:\\path\\to\\mcp_server_filesystem\\"
        },
        "disabled": false,
        "autoApprove": [
          "list_directory",
          "read_file"
        ]
      }
    }
  },
  "manolaz/emergency-medicare-planner-mcp-server": {
    "mcpServers": {
      "emergency-medicare-planner": {
        "command": "node",
        "args": [
          "path/to/dist/index.js"
        ],
        "env": {
          "GOOGLE_MAPS_API_KEY": "your_google_maps_api_key"
        }
      }
    }
  },
  "MCP-Mirror/YanxingLiu_dify-mcp-server": {
    "mcpServers": {
      "mcp-server-rag-web-browser": {
        "command": "uv",
        "args": [
          "--directory",
          "/Users/lyx/Downloads/dify-mcp-server",
          "run",
          "dify_mcp_server"
        ],
        "env": {
          "CONFIG_PATH": "/Users/lyx/Downloads/config.yaml"
        }
      }
    }
  },
  "MCP-Mirror/kevinwatt_mcp-server-searxng": {
    "mcpServers": {
      "searxng": {
        "name": "searxng",
        "command": "npx",
        "args": [
          "-y",
          "@kevinwatt/mcp-server-searxng"
        ],
        "env": {
          "SEARXNG_INSTANCES": "http://localhost:8080,https://searx.example.com",
          "SEARXNG_USER_AGENT": "CustomBot/1.0"
        }
      }
    }
  },
  "mtwn105/mcp-server-spring-java": {
    "mcpServers": {
      "dummy-user-server": {
        "command": "java",
        "args": [
          "-Dspring.ai.mcp.server.stdio=true",
          "-Dspring.main.web-application-type=none",
          "-Dlogging.pattern.console=",
          "-jar",
          "path/to/mcp-spring-java-0.0.1-SNAPSHOT.jar"
        ]
      }
    }
  },
  "MCP-Mirror/ktanaka101_mcp-server-duckdb": {
    "mcpServers": {
      "duckdb": {
        "command": "uvx",
        "args": [
          "mcp-server-duckdb",
          "--db-path",
          "~/mcp-server-duckdb/data/data.db"
        ]
      }
    }
  },
  "xytangme/neodb-mcp": {
    "mcpServers": {
      "neodb": {
        "command": "uv",
        "args": [
          "--directory",
          "<PATH_TO_PROJECT_DIR>",
          "run",
          "<PATH_TO_SCRIPT>",
          "<API_BASE> e.g. https://neodb.social",
          "<ACCESS_TOKEN>"
        ]
      }
    }
  },
  "MCP-Mirror/stefans71_wordpress-mcp-server": {
    "mcpServers": {
      "wordpress": {
        "command": "node",
        "args": [
          "path/to/wordpress-server/build/index.js"
        ]
      }
    }
  },
  "rashidazarang/airtable-mcp": {
    "mcpServers": {
      "airtable-mcp": {
        "command": "npx",
        "args": [
          "@smithery/cli",
          "run",
          "@rashidazarang/airtable-mcp",
          "--token",
          "YOUR_AIRTABLE_TOKEN",
          "--base",
          "YOUR_BASE_ID"
        ]
      }
    }
  },
  "MCP-Mirror/macrat_mcp-server-kintone": {
    "mcpServers": {
      "kintone": {
        "command": "C:\\path\\to\\mcp-server-kintone.exe",
        "args": [
          "C:\\path\\to\\configuration.json"
        ]
      }
    }
  },
  "DynamicEndpoints/huntress-mcp-server": {
    "mcpServers": {
      "huntress": {
        "command": "node",
        "args": [
          "path/to/huntress-server/build/index.js"
        ],
        "env": {
          "HUNTRESS_API_KEY": "your_api_key_here",
          "HUNTRESS_API_SECRET": "your_api_secret_here"
        }
      }
    }
  },
  "StevenStavrakis/mcp-starter-template": {
    "mcpServers": {
      "your-server-name": {
        "command": "node",
        "args": [
          "/path/to/your/project/dist/main.js",
          "some_argument"
        ]
      }
    }
  },
  "cyanheads/mentor-mcp-server": {
    "mcpServers": {
      "mentor": {
        "command": "node",
        "args": [
          "build/index.js"
        ],
        "env": {
          "DEEPSEEK_API_KEY": "your_api_key",
          "DEEPSEEK_MODEL": "deepseek-reasoner",
          "DEEPSEEK_MAX_TOKENS": "8192",
          "DEEPSEEK_MAX_RETRIES": "3",
          "DEEPSEEK_TIMEOUT": "30000"
        }
      }
    }
  },
  "MCP-Mirror/loonghao_wecom-bot-mcp-server": {
    "mcpServers": {
      "wecom-bot-server": {
        "command": "wecom-bot-mcp-server",
        "args": [],
        "env": {
          "WECOM_WEBHOOK_URL": "<\u00e4\u00bd\u00a0\u00e7\u009a\u0084\u00e4\u00bc\u0081\u00e4\u00b8\u009a\u00e5\u00be\u00ae\u00e4\u00bf\u00a1\u00e6\u009c\u00ba\u00e5\u0099\u00a8\u00e4\u00ba\u00baWebhook URL>"
        },
        "alwaysAllow": [
          "send_message"
        ],
        "disabled": false
      }
    }
  },
  "aliyun/alibabacloud-hologres-mcp-server": {
    "mcpServers": {
      "hologres-mcp-server": {
        "command": "uv",
        "args": [
          "run",
          "--with",
          "hologres-mcp-server",
          "hologres-mcp-server"
        ],
        "env": {
          "HOLOGRES_HOST": "host",
          "HOLOGRES_PORT": "port",
          "HOLOGRES_USER": "access_id",
          "HOLOGRES_PASSWORD": "access_key",
          "HOLOGRES_DATABASE": "database"
        }
      }
    }
  },
  "AbdelStark/bitcoin-mcp": {
    "mcpServers": {
      "bitcoin-mcp": {
        "command": "npx",
        "args": [
          "-y",
          "bitcoin-mcp@latest"
        ]
      }
    }
  },
  "MCERQUA/netlify-mcp": {
    "mcpServers": {
      "netlify": {
        "command": "node",
        "args": [
          "path/to/netlify-mcp/build/index.js"
        ],
        "env": {
          "NETLIFY_ACCESS_TOKEN": "your_token_here"
        },
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "AgentWong/optimized-memory-mcp-server": {
    "mcpServers": {
      "memory": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-memory"
        ]
      }
    }
  },
  "adepanges/teamretro-mcp-server": {
    "mcpServers": {
      "teamretro-mcp-server": {
        "command": "node",
        "args": [
          "/path/to/teamretro-mcp-server/dist/index.js"
        ],
        "env": {
          "TEAMRETRO_BASE_URL": "https://api.teamretro.com",
          "TEAMRETRO_AUTH_TYPE": "apiKey",
          "TEAMRETRO_API_KEY": "your-api-key"
        }
      }
    }
  },
  "alexander-zuev/supabase-mcp-server": {
    "mcpServers": {
      "supabase": {
        "command": "/full/path/to/supabase-mcp-server",
        "env": {
          "QUERY_API_KEY": "your-api-key",
          "SUPABASE_PROJECT_REF": "your-project-ref",
          "SUPABASE_DB_PASSWORD": "your-db-password",
          "SUPABASE_REGION": "us-east-1",
          "SUPABASE_ACCESS_TOKEN": "your-access-token",
          "SUPABASE_SERVICE_ROLE_KEY": "your-service-role-key"
        }
      }
    }
  },
  "alexei-led/aws-mcp-server": {
    "mcpServers": {
      "aws-mcp-server": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "-v",
          "/Users/YOUR_USER_NAME/.aws:/home/appuser/.aws:ro",
          "ghcr.io/alexei-led/aws-mcp-server:latest"
        ]
      }
    }
  },
  "dstotijn/mcp-cbs-cijfers-open-data": {
    "mcpServers": {
      "cbs-cijfers-open-data": {
        "command": "go",
        "args": [
          "run",
          "github.com/dstotijn/mcp-cbs-cijfers-open-data@latest"
        ]
      }
    }
  },
  "Timtech4u/python-mcp-server": {
    "mcpServers": {
      "python": {
        "command": "node",
        "args": [
          "/absolute/path/to/python-mcp-server/dist/index.js"
        ],
        "disabled": false,
        "autoApprove": [
          "execute_python_code",
          "execute_python_file",
          "check_python_version",
          "list_python_files",
          "read_python_file",
          "write_python_file"
        ]
      }
    }
  },
  "JovaniPink/mcp-browser-use": {
    "mcpServers": {
      "mcp_server_browser_use": {
        "command": "uvx",
        "args": [
          "mcp-server-browser-use"
        ],
        "env": {
          "OPENAI_ENDPOINT": "https://api.openai.com/v1",
          "OPENAI_API_KEY": "",
          "ANTHROPIC_API_KEY": "",
          "GOOGLE_API_KEY": "",
          "AZURE_OPENAI_ENDPOINT": "",
          "AZURE_OPENAI_API_KEY": "",
          "ANONYMIZED_TELEMETRY": "false",
          "CHROME_PATH": "",
          "CHROME_USER_DATA": "",
          "CHROME_DEBUGGING_PORT": "9222",
          "CHROME_DEBUGGING_HOST": "localhost",
          "CHROME_PERSISTENT_SESSION": "false",
          "MCP_MODEL_PROVIDER": "anthropic",
          "MCP_MODEL_NAME": "claude-3-5-sonnet-20241022",
          "MCP_TEMPERATURE": "0.3",
          "MCP_MAX_STEPS": "30",
          "MCP_USE_VISION": "true",
          "MCP_MAX_ACTIONS_PER_STEP": "5",
          "MCP_TOOL_CALL_IN_CONTENT": "true"
        }
      }
    }
  },
  "Siddhant-K-code/memory-journal-mcp-server": {
    "mcpServers": {
      "smart-photo-journal": {
        "command": "/Users/<YOUR_DEVICE_USERNAME>/.local/bin/uv",
        "args": [
          "--directory",
          "/Users/<PATH_TO_CLONED_DIR>/memory-journal-mcp-server",
          "run",
          "server.py"
        ]
      }
    }
  },
  "Cleversoft-IT/drupal-modules-mcp": {
    "mcpServers": {
      "drupal-modules-mcp": {
        "command": "/path/to/drupal-modules-mcp/build/index.js"
      }
    }
  },
  "mendableai/firecrawl-mcp-server": {
    "mcpServers": {
      "mcp-server-firecrawl": {
        "command": "npx",
        "args": [
          "-y",
          "firecrawl-mcp"
        ],
        "env": {
          "FIRECRAWL_API_KEY": "YOUR_API_KEY_HERE",
          "FIRECRAWL_RETRY_MAX_ATTEMPTS": "5",
          "FIRECRAWL_RETRY_INITIAL_DELAY": "2000",
          "FIRECRAWL_RETRY_MAX_DELAY": "30000",
          "FIRECRAWL_RETRY_BACKOFF_FACTOR": "3",
          "FIRECRAWL_CREDIT_WARNING_THRESHOLD": "2000",
          "FIRECRAWL_CREDIT_CRITICAL_THRESHOLD": "500"
        }
      }
    }
  },
  "GongRzhe/Gmail-MCP-Server": {
    "mcpServers": {
      "gmail": {
        "command": "npx",
        "args": [
          "@gongrzhe/server-gmail-autoauth-mcp"
        ]
      }
    }
  },
  "chrishayuk/mcp-cli": {
    "mcpServers": {
      "sqlite": {
        "command": "python",
        "args": [
          "-m",
          "mcp_server.sqlite_server"
        ],
        "env": {
          "DATABASE_PATH": "your_database.db"
        }
      },
      "another-server": {
        "command": "python",
        "args": [
          "-m",
          "another_server_module"
        ],
        "env": {}
      }
    }
  },
  "niyogi/render-mcp": {
    "mcpServers": {
      "render": {
        "command": "node",
        "args": [
          "/path/to/render-mcp/bin/render-mcp.js",
          "start"
        ],
        "env": {
          "RENDER_API_KEY": "your-render-api-key"
        },
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "pavanjava/kafka_mcp_server": {
    "mcpServers": {
      "kafka": {
        "command": "python",
        "args": [
          "<PATH TO PROJECTS>/main.py"
        ]
      }
    }
  },
  "MCERQUA/freepik-mcp": {
    "mcpServers": {
      "freepik": {
        "command": "node",
        "args": [
          "path/to/freepik-mcp/build/index.js"
        ],
        "env": {
          "FREEPIK_API_KEY": "your-api-key-here"
        },
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "Automata-Labs-team/code-sandbox-mcp": {
    "mcpServers": {
      "code-sandbox-mcp": {
        "command": "C:\\path\\to\\code-sandbox-mcp.exe",
        "args": [],
        "env": {}
      }
    }
  },
  "jakedahn/deno2-playwright-mcp-server": {
    "mcpServers": {
      "playwright": {
        "command": "/path/to/deno2-playwright-mcp-server/playwright-server"
      }
    }
  },
  "jkawamoto/mcp-bear": {
    "mcpServers": {
      "youtube-transcript": {
        "command": "uvx",
        "args": [
          "--from",
          "git+https://github.com/jkawamoto/mcp-bear",
          "mcp-bear",
          "--token",
          "<YOUR_TOKEN>"
        ]
      }
    }
  },
  "MCP-Mirror/nexon33_search-fetch-server-mcp": {
    "mcpServers": {
      "search-fetch-server": {
        "command": "node",
        "args": [
          "/path/to/search-fetch-server/build/index.js"
        ]
      }
    }
  },
  "hmk/attio-mcp-server": {
    "mcpServers": {
      "attio": {
        "command": "npx",
        "args": [
          "attio-mcp-server"
        ],
        "env": {
          "ATTIO_API_KEY": "YOUR_ATTIO_API_KEY"
        }
      }
    }
  },
  "ErickWendel/erickwendel-contributions-mcp": {
    "mcpServers": {
      "erickwendel-contributions": {
        "command": "npm",
        "args": [
          "exec",
          "--",
          "@smithery/cli@latest",
          "run",
          "@ErickWendel/erickwendel-contributions-mcp"
        ]
      }
    }
  },
  "MCP-Mirror/Bigsy_Clojars-MCP-Server": {
    "mcpServers": {
      "clojars-deps-server": {
        "command": "node",
        "args": [
          "/path/to/clojars-deps-server/build/index.js"
        ]
      }
    }
  },
  "JackKuo666/bioRxiv-MCP-Server": {
    "mcpServers": {
      "biorxiv": {
        "command": "bash",
        "args": [
          "-c",
          "source /home/YOUR/PATH/mcp-server-bioRxiv/.venv/bin/activate && python /home/YOUR/PATH/mcp-server-bioRxiv/biorxiv_server.py"
        ],
        "env": {},
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "MCP-Mirror/EyevinnOSC_mcp-server": {
    "mcpServers": {
      "eyevinn-osc": {
        "command": "npx",
        "args": [
          "-y",
          "@osaas/mcp-server"
        ],
        "env": {
          "OSC_ACCESS_TOKEN": "<YOUR_TOKEN>"
        }
      }
    }
  },
  "pab1it0/prometheus-mcp-server": {
    "mcpServers": {
      "prometheus": {
        "command": "docker",
        "args": [
          "run",
          "--rm",
          "-i",
          "-e",
          "PROMETHEUS_URL",
          "-e",
          "PROMETHEUS_USERNAME",
          "-e",
          "PROMETHEUS_PASSWORD",
          "prometheus-mcp-server"
        ],
        "env": {
          "PROMETHEUS_URL": "http://your-prometheus-server:9090",
          "PROMETHEUS_USERNAME": "your_username",
          "PROMETHEUS_PASSWORD": "your_password"
        }
      }
    }
  },
  "Nayshins/mcp-server-ccxt": {
    "mcpServers": {
      "crypto": {
        "command": "python",
        "args": [
          "/path/to/crypto_server.py"
        ]
      }
    }
  },
  "qloba/runbook-mcp-server": {
    "mcpServers": {
      "runbook": {
        "command": "npx",
        "args": [
          "-y",
          "@runbook-docs/mcp-server"
        ],
        "env": {
          "RUNBOOK_BASE_URL": "https://<YOUR_SUBDOMAIN>.runbook.jp",
          "RUNBOOK_API_TOKEN": "your-api-token"
        }
      }
    }
  },
  "ckz/edu_data_mcp_server": {
    "mcpServers": {
      "edu-data": {
        "command": "npx",
        "args": [
          "edu-data-mcp-server"
        ],
        "disabled": false,
        "alwaysAllow": []
      }
    }
  },
  "MCP-Mirror/jerhadf_linear-mcp-server": {
    "mcpServers": {
      "linear": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-linear"
        ],
        "env": {
          "LINEAR_API_KEY": "your_linear_api_key_here"
        }
      }
    }
  },
  "mzxrai/mcp-openai": {
    "mcpServers": {
      "mcp-openai": {
        "command": "npx",
        "args": [
          "-y",
          "@mzxrai/mcp-openai@latest"
        ],
        "env": {
          "OPENAI_API_KEY": "your-api-key-here (get one from https://platform.openai.com/api-keys)"
        }
      }
    }
  },
  "MCP-Mirror/bsmi021_mcp-server-webscan": {
    "mcpServers": {
      "webscan": {
        "command": "node",
        "args": [
          "path/to/mcp-server-webscan/dist/index.js"
        ],
        "env": {
          "NODE_ENV": "development"
        }
      }
    }
  },
  "StevenStavrakis/obsidian-mcp": {
    "mcpServers": {
      "obsidian": {
        "command": "node",
        "args": [
          "<absolute-path-to-obsidian-mcp>/build/main.js",
          "/path/to/your/vault"
        ]
      }
    }
  },
  "mingzilla/pi-api-mcp-server": {
    "mcpServers": {
      "pi-api": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "-e",
          "API_URL=http://localhost:8224/pi/api/v2",
          "-e",
          "PI_API_KEY=XXXXXXXX",
          "mingzilla/pi-api-mcp-server"
        ],
        "disabled": false,
        "autoApprove": [
          "keep-session-alive",
          "check-connection",
          "authenticate",
          "list-categories",
          "get-category",
          "list-charts",
          "get-chart",
          "export-chart",
          "get-filterable-attributes",
          "export-chart"
        ]
      }
    }
  },
  "XeroAPI/xero-mcp-server": {
    "mcpServers": {
      "xero": {
        "command": "node",
        "args": [
          "insert-your-file-path-here/xero-mcp-server/dist/index.js"
        ],
        "env": {
          "XERO_CLIENT_ID": "your_client_id_here",
          "XERO_CLIENT_SECRET": "your_client_secret_here"
        }
      }
    }
  },
  "piplabs/story-mcp-hub": {
    "mcpServers": {
      "storyscan-mcp": {
        "command": "uv",
        "args": [
          "--directory",
          "~/path/to/story-mcp-hub/storyscan-mcp",
          "run",
          "server.py"
        ],
        "env": {
          "STORY_API_KEY": "your_story_api_key_here",
          "STORYSCAN_API_ENDPOINT": "your_story_api_endpoint_here"
        }
      },
      "story-sdk-mcp": {
        "command": "uv",
        "args": [
          "--directory",
          "~/path/to/story-mcp-hub/story-sdk-mcp",
          "run",
          "server.py"
        ],
        "env": {
          "WALLET_PRIVATE_KEY": "your_private_key_here",
          "RPC_PROVIDER_URL": "your_rpc_provider_url_here",
          "PINATA_JWT": "your_pinata_jwt_here"
        }
      }
    }
  },
  "MCP-Mirror/andypost_mcp-server-ts-trello": {
    "mcpServers": {
      "trello-ts": {
        "command": "node",
        "args": [
          "/path/to/mcp-server-ts-trello/build/index.js"
        ],
        "env": {
          "TRELLO_API_KEY": "your_api_key",
          "TRELLO_TOKEN": "your_token"
        }
      }
    }
  },
  "dkmaker/mcp-rest-api": {
    "mcpServers": {
      "rest-api": {
        "command": "npx",
        "args": [
          "-y",
          "dkmaker-mcp-rest-api"
        ],
        "env": {
          "REST_BASE_URL": "https://api.example.com",
          "AUTH_BASIC_USERNAME": "your-username",
          "AUTH_BASIC_PASSWORD": "your-password",
          "AUTH_BEARER": "your-token",
          "AUTH_APIKEY_HEADER_NAME": "X-API-Key",
          "AUTH_APIKEY_VALUE": "your-api-key",
          "REST_ENABLE_SSL_VERIFY": "false",
          "HEADER_X-API-Version": "2.0",
          "HEADER_Custom-Client": "my-client",
          "HEADER_Accept": "application/json"
        }
      }
    }
  },
  "misbiheyv/testing-mcp-server": {
    "mcpServers": {
      "tms-adapter": {
        "command": "/Users/$USER/.nvm/versions/node/v23.7.0/bin/node",
        "args": [
          "/Users/$USER/mcp-testing-tool/build/index.js"
        ],
        "disabled": false,
        "env": {
          "TMS_TOKEN": ""
        }
      }
    }
  },
  "ryanmac/agent-twitter-client-mcp": {
    "mcpServers": {
      "agent-twitter-client-mcp": {
        "command": "npx",
        "args": [
          "-y",
          "agent-twitter-client-mcp"
        ],
        "env": {
          "AUTH_METHOD": "cookies",
          "TWITTER_COOKIES": [
            "auth_token=YOUR_AUTH_TOKEN; Domain=.twitter.com",
            "ct0=YOUR_CT0_VALUE; Domain=.twitter.com",
            "twid=u%3DYOUR_USER_ID; Domain=.twitter.com"
          ]
        }
      }
    }
  },
  "nahmanmate/code-research-mcp-server": {
    "mcpServers": {
      "code-research": {
        "command": "node",
        "args": [
          "/absolute/path/to/code-research-mcp-server/build/index.js"
        ],
        "env": {
          "GITHUB_TOKEN": "your_github_token"
        },
        "disabled": false,
        "alwaysAllow": []
      }
    }
  },
  "nahmanmate/postgresql-mcp-server": {
    "mcpServers": {
      "postgresql-mcp": {
        "command": "node",
        "args": [
          "/path/to/postgresql-mcp-server/build/index.js"
        ],
        "disabled": false,
        "alwaysAllow": []
      }
    }
  },
  "ac3xx/mcp-servers-kagi": {
    "mcpServers": {
      "kagi-server": {
        "command": "/path/to/kagi-server/build/index.js",
        "env": {
          "KAGI_API_KEY": "your_api_key_here"
        }
      }
    }
  },
  "ergut/mcp-bigquery-server": {
    "mcpServers": {
      "bigquery": {
        "command": "node",
        "args": [
          "/path/to/your/clone/mcp-bigquery-server/dist/index.js",
          "--project-id",
          "your-project-id",
          "--location",
          "us-central1",
          "--key-file",
          "/path/to/service-account-key.json"
        ]
      }
    }
  },
  "yuhuangou/wordware-mcp": {
    "mcpServers": {
      "wordware": {
        "command": "wordware-mcp"
      }
    }
  },
  "JannikWempe/mcp-lexware-office": {
    "mcpServers": {
      "mcp-lexware-office": {
        "command": "npx",
        "args": [
          "-y",
          "JannikWempe/mcp-lexware-office"
        ],
        "env": {
          "LEXWARE_OFFICE_API_KEY": "YOUR_API_KEY_HERE"
        }
      }
    }
  },
  "AshDevFr/discourse-mcp-server": {
    "mcpServers": {
      "discourse": {
        "command": "npx",
        "args": [
          "-y",
          "@ashdev/discourse-mcp-server"
        ],
        "env": {
          "DISCOURSE_API_URL": "https://try.discourse.org",
          "DISCOURSE_API_KEY": "1234",
          "DISCOURSE_API_USERNAME": "ash"
        }
      }
    }
  },
  "wandb/mcp-server": {
    "mcpServers": {
      "weights_and_biases": {
        "command": "uv",
        "args": [
          "--directory",
          "/ABSOLUTE/PATH/TO/PROJECT",
          "run",
          "src/mcp_server/server.py"
        ]
      }
    }
  },
  "MCP-Mirror/aldrin-labs_solana-mcp-server": {
    "mcpServers": {
      "solana": {
        "command": "cargo",
        "args": [
          "run"
        ],
        "cwd": "/path/to/solana-mcp-server",
        "env": {
          "SOLANA_RPC_URL": "https://api.mainnet-beta.solana.com"
        }
      }
    }
  },
  "MCP-Mirror/apinetwork_piapi-mcp-server": {
    "mcpServers": {
      "piapi": {
        "command": "node",
        "args": [
          "/absolute/path/to/piapi-mcp-server/dist/index.js"
        ],
        "env": {
          "PIAPI_API_KEY": "your_api_key_here"
        }
      }
    }
  },
  "socamalo/PPT_MCP_Server": {
    "mcpServers": {
      "ppts": {
        "command": "C:\\Path\\To\\Python\\Scripts\\uv.exe",
        "args": [
          "run",
          "C:\\Path\\To\\Project\\main.py"
        ]
      }
    }
  },
  "awwaiid/mcp-server-taskwarrior": {
    "mcpServers": {
      "taskwarrior": {
        "command": "npx",
        "args": [
          "-y",
          "mcp-server-taskwarrior"
        ]
      }
    }
  },
  "mericozkayagan/mcp-servers": {
    "mcpServers": {
      "postgresql-mcp": {
        "command": "node",
        "args": [
          "/path/to/mcp-servers/postgresql-mcp/build/index.js"
        ],
        "env": {
          "PG_DB_MAP": "{\"db1\":\"postgresql://username:password@hostname:5432/database_name?sslmode=require\",\"analytics\":\"postgresql://analytics_user:secure_password@analytics-db.example.com:5432/analytics?sslmode=require\",\"default\":\"db1\"}"
        }
      },
      "mcp-obsidian": {
        "command": "/path/to/python/bin/mcp-obsidian",
        "args": [],
        "env": {
          "OBSIDIAN_API_KEY": "your_api_key_here"
        }
      },
      "n8n-mcp": {
        "command": "node",
        "args": [
          "/path/to/mcp-servers/n8n-mcp/build/index.js"
        ],
        "env": {
          "N8N_BASE_URL": "https://your-n8n-instance.example.com",
          "N8N_API_KEY": "your_api_key_here"
        }
      }
    }
  },
  "deepsuthar496/Remote-Command-MCP": {
    "mcpServers": {
      "remote-command": {
        "command": "node",
        "args": [
          "path/to/remote-command-server/build/index.js"
        ],
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "ragieai/ragie-mcp-server": {
    "mcpServers": {
      "ragie": {
        "command": "npx",
        "args": [
          "-y",
          "@ragieai/mcp-server",
          "--partition",
          "optional_partition_id"
        ],
        "env": {
          "RAGIE_API_KEY": "your_api_key"
        }
      }
    }
  },
  "loonghao/shotgrid-mcp-server": {
    "mcpServers": {
      "shotgrid-server": {
        "command": "uvx",
        "args": [
          "shotgrid-mcp-server"
        ],
        "env": {
          "SHOTGRID_SCRIPT_NAME": "XXX",
          "SHOTGRID_SCRIPT_KEY": "XX",
          "SHOTGRID_URL": "XXXX"
        },
        "disabled": false,
        "alwaysAllow": [
          "search_entities",
          "create_entity",
          "batch_create",
          "find_entity",
          "get_entity_types",
          "update_entity",
          "download_thumbnail",
          "batch_update",
          "delete_entity",
          "batch_delete"
        ]
      }
    }
  },
  "weidwonder/terminal-mcp-server": {
    "mcpServers": {
      "terminal-mcp-sse": {
        "url": "http://localhost:8080/sse",
        "headers": {}
      }
    }
  },
  "MCP-Mirror/Chrusic_todoist-mcp-server-extended": {
    "mcpServers": {
      "todoist": {
        "command": "npx",
        "args": [
          "todoist-mcp-enhanced-server"
        ],
        "env": {
          "TODOIST_API_TOKEN": "your_api_token_here"
        }
      }
    }
  },
  "glifxyz/glif-mcp-server": {
    "mcpServers": {
      "glif": {
        "command": "node",
        "args": [
          "/path/to/glif-mcp/build/index.js"
        ],
        "env": {
          "GLIF_API_TOKEN": "your-token-here",
          "GLIF_IDS": "cm2v9aiga00008vfqdiximl2m,cm2v98jk6000r11afslqvooil,cm2v9rp66000bat9wr606qq6o",
          "IGNORE_SAVED_GLIFS": true
        }
      }
    }
  },
  "nic01asFr/mcp-server-grist": {
    "mcpServers": {
      "grist-mcp": {
        "command": "docker",
        "args": [
          "run",
          "--rm",
          "-i",
          "-e",
          "GRIST_API_KEY=your_api_key_here",
          "-e",
          "GRIST_API_HOST=https://docs.getgrist.com/api",
          "mcp/grist-mcp-server"
        ]
      }
    }
  },
  "manimohans/verge-news-mcp": {
    "mcpServers": {
      "verge-news": {
        "command": "node",
        "args": [
          "/absolute/path/to/verge-news-mcp/build/index.js"
        ]
      }
    }
  },
  "valyu-network/valyu-mcp-js": {
    "mcpServers": {
      "valyu": {
        "command": "docker",
        "args": [
          "run",
          "--pull",
          "--rm",
          "-i",
          "-e",
          "VALYU_API_KEY",
          "ghcr.io/tiovikram/valyu-mcp-server"
        ],
        "env": {
          "VALYU_API_KEY": "<your-valyu-api-key>"
        }
      }
    }
  },
  "LuotoCompany/cursor-local-indexing": {
    "mcpServers": {
      "workspace-code-search": {
        "url": "http://localhost:8978/sse"
      }
    }
  },
  "ogulcanarbc/spring-ai-mcp-client": {
    "mcpServers": {
      "any-mcp-server": {
        "command": "node",
        "args": [
          "any-mcp-server/build/index.js"
        ]
      }
    }
  },
  "gpaul-faldin/MCP_puppeteer_extra": {
    "mcpServers": {
      "puppeteer": {
        "command": "npx",
        "args": [
          "-y",
          "MCP_puppeteer_extra"
        ]
      }
    }
  },
  "negokaz/excel-mcp-server": {
    "mcpServers": {
      "excel": {
        "command": "npx",
        "args": [
          "--yes",
          "@negokaz/excel-mcp-server"
        ],
        "env": {
          "EXCEL_MCP_PAGING_CELLS_LIMIT": "4000"
        }
      }
    }
  },
  "Omar-V2/mcp-ical": {
    "mcpServers": {
      "mcp-ical": {
        "command": "uv",
        "args": [
          "--directory",
          "/ABSOLUTE/PATH/TO/PARENT/FOLDER/mcp-ical",
          "run",
          "mcp-ical"
        ]
      }
    }
  },
  "epaproditus/google-workspace-mcp-server": {
    "mcpServers": {
      "google-workspace": {
        "command": "node",
        "args": [
          "/path/to/google-workspace-server/build/index.js"
        ],
        "env": {
          "GOOGLE_CLIENT_ID": "your_client_id",
          "GOOGLE_CLIENT_SECRET": "your_client_secret",
          "GOOGLE_REFRESH_TOKEN": "your_refresh_token"
        }
      }
    }
  },
  "landicefu/divide-and-conquer-mcp-server": {
    "mcpServers": {
      "divide-and-conquer": {
        "command": "node",
        "args": [
          "/path/to/divide-and-conquer-mcp-server/build/index.js"
        ],
        "disabled": false
      }
    }
  },
  "horizondatawave/hdw-mcp-server": {
    "mcpServers": {
      "hdw": {
        "command": "npx",
        "args": [
          "@horizondatawave/mcp"
        ],
        "env": {
          "HDW_ACCESS_TOKEN": "YOUR_HD_W_ACCESS_TOKEN",
          "HDW_ACCOUNT_ID": "YOUR_HD_W_ACCOUNT_ID"
        }
      }
    }
  },
  "MankowskiNick/jira-mcp": {
    "mcpServers": {
      "jira-mcp": {
        "command": "node",
        "args": [
          "/path/to/project/build/index.js"
        ],
        "env": {
          "JIRA_HOST": "your-site.atlassian.net",
          "JIRA_USERNAME": "your-email@example.com",
          "JIRA_API_TOKEN": "your_api_token",
          "JIRA_PROJECT_KEY": "your_project_key",
          "AUTO_CREATE_TEST_TICKETS": "true",
          "JIRA_ACCEPTANCE_CRITERIA_FIELD": "customfield_10429",
          "JIRA_STORY_POINTS_FIELD": "customfield_10040",
          "JIRA_EPIC_LINK_FIELD": "customfield_10014",
          "JIRA_PRODUCT_FIELD": "customfield_10757",
          "JIRA_PRODUCT_VALUE": "Your Product Name",
          "JIRA_PRODUCT_ID": "12345",
          "JIRA_CATEGORY_FIELD": "customfield_10636",
          "USE_ALTERNATE_CATEGORY": "false",
          "JIRA_DEFAULT_CATEGORY_VALUE": "Default Category",
          "JIRA_DEFAULT_CATEGORY_ID": "12345",
          "JIRA_ALTERNATE_CATEGORY_VALUE": "Alternate Category",
          "JIRA_ALTERNATE_CATEGORY_ID": "67890"
        }
      }
    }
  },
  "wadewegner/mcp-servers": {
    "mcpServers": {
      "weather": {
        "command": "node",
        "args": [
          "/path/to/your/project/build/index.js"
        ]
      },
      "digitalocean": {
        "command": "node",
        "args": [
          "/path/to/your/project/build/index.js",
          "digitalocean"
        ]
      }
    }
  },
  "MCP-Mirror/rdvo_mcp-server": {
    "mcpServers": {
      "steel-puppeteer": {
        "command": "node",
        "args": [
          "path/to/steel-puppeteer/dist/index.js"
        ],
        "env": {
          "STEEL_LOCAL": "true"
        }
      }
    }
  },
  "lxiaolong068/mcp-filesystem-server": {
    "mcpServers": {
      "filesystem": {
        "command": "node",
        "args": [
          "path/to/filesystem-server/build/index.js"
        ]
      }
    }
  },
  "Gitmaxd/dubco-mcp-server": {
    "mcpServers": {
      "dubco-server": {
        "command": "node",
        "args": [
          "/path/to/dubco-mcp-server/build/index.js"
        ],
        "env": {
          "DUBCO_API_KEY": "your_api_key_here"
        },
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "tomohiro1850/backlog-mcp-server": {
    "mcpServers": {
      "backlog": {
        "command": "npx",
        "args": [
          "-y",
          "@tmhr1850/backlog-mcp-server"
        ],
        "env": {
          "BACKLOG_DOMAIN": "your-domain.backlog.com",
          "BACKLOG_API_KEY": "your-api-key"
        }
      }
    }
  },
  "AzDeltaQQ/Mcp-Reasoning-Server": {
    "mcpServers": {
      "mcp-reasoner": {
        "command": "node",
        "args": [
          "C:\\Users\\[Username]\\path\\to\\mcp-reasoning-server\\dist\\index.js"
        ]
      }
    }
  },
  "peng-shawn/mermaid-mcp-server": {
    "mcpServers": {
      "mermaid": {
        "command": "npx",
        "args": [
          "-y @peng-shawn/mermaid-mcp-server"
        ]
      }
    }
  },
  "bradrisse/kanban-mcp": {
    "mcpServers": {
      "kanban": {
        "command": "node",
        "args": [
          "/path/to/kanban-mcp/dist/index.js"
        ],
        "env": {
          "PLANKA_BASE_URL": "http://localhost:3333",
          "PLANKA_AGENT_EMAIL": "demo@demo.demo",
          "PLANKA_AGENT_PASSWORD": "demo"
        }
      }
    }
  },
  "gomcpgo/filesys": {
    "mcpServers": {
      "filesystem": {
        "command": "/path/to/filesys",
        "env": {
          "MCP_ALLOWED_DIRS": "/path1,/path2,/path with spaces/dir3"
        }
      }
    }
  },
  "pyljain/mcp_server_template": {
    "mcpServers": {
      "postgres": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-postgres",
          "postgresql://localhost/mydb"
        ]
      }
    }
  },
  "kujenga/zotero-mcp": {
    "mcpServers": {
      "zotero": {
        "command": "/path/to/zotero-mcp/.venv/bin/zotero-mcp",
        "env": {
          "comment": "Whatever configuration is desired."
        }
      }
    }
  },
  "vetlefo/claude-chunks": {
    "mcpServers": {
      "claude-chunks": {
        "command": "node",
        "args": [
          "/path/to/claude-chunks/dist/index.js"
        ]
      }
    }
  },
  "keboola/keboola-mcp-server": {
    "mcpServers": {
      "keboola": {
        "command": "wsl.exe",
        "args": [
          "bash",
          "-c",
          "'source /wsl_path/to/keboola-mcp-server/.env",
          "&&",
          "/wsl_path/to/keboola-mcp-server/.venv/bin/python -m keboola_mcp_server.cli --transport stdio'"
        ]
      }
    }
  },
  "thadius83/mcp-server-openai": {
    "mcpServers": {
      "github.com/thadius83/mcp-server-openai": {
        "command": "python",
        "args": [
          "-m",
          "src.mcp_server_openai.server",
          "--openai-api-key",
          "your-key-here"
        ],
        "env": {
          "PYTHONPATH": "/path/to/your/mcp-server-openai"
        }
      }
    }
  },
  "wrediam/better-qdrant-mcp-server": {
    "mcpServers": {
      "better-qdrant": {
        "command": "npx",
        "args": [
          "better-qdrant-mcp-server"
        ],
        "env": {
          "QDRANT_URL": "http://localhost:6333",
          "QDRANT_API_KEY": "your_api_key_if_needed",
          "DEFAULT_EMBEDDING_SERVICE": "ollama",
          "OPENAI_API_KEY": "your_openai_api_key",
          "OPENAI_ENDPOINT": "https://api.openai.com/v1",
          "OPENROUTER_API_KEY": "your_openrouter_api_key",
          "OPENROUTER_ENDPOINT": "https://api.openrouter.com/v1",
          "OLLAMA_ENDPOINT": "http://localhost:11434",
          "OLLAMA_MODEL": "nomic-embed-text"
        }
      }
    }
  },
  "waldur/waldur-mcp-server": {
    "mcpServers": {
      "waldur-mcp-server": {
        "command": "uvx",
        "args": [
          "waldur-mcp-server"
        ],
        "env": {
          "WALDUR_API_URL": "https://your-waldur-instance",
          "WALDUR_TOKEN": "your-token"
        }
      }
    }
  },
  "fred-em/social-listening": {
    "mcpServers": {
      "social-listening": {
        "command": "node",
        "args": [
          "/absolute/path/to/social-listening/build/index.js"
        ],
        "env": {
          "SYFTEN_API_KEY": "your-api-key-here"
        }
      }
    }
  },
  "gluneau/hive-mcp-server": {
    "mcpServers": {
      "hive": {
        "command": "npx",
        "args": [
          "-y",
          "@gluneau/hive-mcp-server"
        ],
        "env": {
          "HIVE_USERNAME": "your-hive-username",
          "HIVE_POSTING_KEY": "your-hive-posting-private-key",
          "HIVE_ACTIVE_KEY": "your-hive-active-private-key",
          "HIVE_MEMO_KEY": "your-hive-memo-private-key"
        }
      }
    }
  },
  "kukapay/whattimeisit-mcp": {
    "mcpServers": {
      "whattimeisit": {
        "command": "uv",
        "args": [
          "--directory",
          "path/to/whattimeisit-mcp",
          "run",
          "main.py"
        ]
      }
    }
  },
  "brcarry/mcp-pymilvus-code-generator": {
    "mcpServers": {
      "milvus": {
        "command": "/PATH/TO/uv",
        "args": [
          "--directory",
          "/path/to/mcp-server-milvus/src/mcp_server_milvus",
          "run",
          "src/mcp_pymilvus_code_generate_helper/stdio_server.py"
        ]
      }
    }
  },
  "Andrew-Beniash/mcp-command-server": {
    "mcpServers": {
      "command-server": {
        "command": "uv",
        "args": [
          "run",
          "python",
          "-m",
          "mcp_command_server"
        ],
        "env": {
          "ALLOWED_COMMANDS": "ls,pwd,echo"
        }
      }
    }
  },
  "jsonresume/mcp": {
    "mcpServers": {
      "jsonresume": {
        "command": "npx",
        "args": [
          "-y",
          "@jsonresume/mcp"
        ],
        "env": {
          "GITHUB_TOKEN": "your-github-token",
          "OPENAI_API_KEY": "your-openai-api-key",
          "GITHUB_USERNAME": "your-github-username"
        }
      }
    }
  },
  "emiryasar/mcp_code_analyzer": {
    "globalShortcut": "Ctrl+Space",
    "mcpServers": {
      "code-analyzer": {
        "command": "python",
        "args": [
          "-m",
          "mcp_code_analyzer",
          "--analyze-paths",
          "C:\\Projects\\path1"
        ],
        "type": "module"
      }
    }
  },
  "gotoolkits/mcp-difyworkflow-server": {
    "mcpServers": {
      "mcp-difyworkflow-server": {
        "command": "mcp-difyworkflow-server",
        "args": [
          "-base-url",
          "http://localhost/v1"
        ],
        "env": {
          "DIFY_WORKFLOW_NAME": "workflow-translator\u00e2\u0080\u009c,workflow-genImag",
          "DIFY_API_KEYS": "appkey-xxxxxxxxxxxa,appkey-xxxxxxxxxxxb"
        }
      }
    }
  },
  "yosider/cosense-mcp-server": {
    "mcpServers": {
      "cosense-mcp-server": {
        "command": "npx",
        "args": [
          "-y",
          "/path/to/cosense-mcp-server"
        ],
        "env": {
          "COSENSE_PROJECT_NAME": "your_project_name",
          "COSENSE_SID": "your_sid"
        }
      }
    }
  },
  "omar391/mcp-agents": {
    "mcpServers": {
      "your-server-name": {
        "command": "/path/to/your-server/build/index.js"
      }
    }
  },
  "tiovikram/linear-mcp": {
    "mcpServers": {
      "linear-mcp": {
        "command": "node",
        "args": [
          "/path/to/linear-mcp/build/index.js"
        ],
        "env": {
          "LINEAR_API_KEY": "your-api-key-here"
        },
        "disabled": false,
        "alwaysAllow": []
      }
    }
  },
  "MCP-Mirror/mahawi1992_mcp-documentation-server": {
    "mcpServers": {
      "documentation": {
        "command": "npx",
        "args": [
          "-y",
          "mcp-documentation-server"
        ],
        "env": {
          "BRAVE_API_KEY": "<YOUR_BRAVE_API_KEY>"
        }
      }
    }
  },
  "MCP-Mirror/Sunwood-ai-labs_aira-mcp-server": {
    "mcpServers": {
      "aira": {
        "command": "node",
        "args": [
          "path/to/aira-mcp-server/build/index.js"
        ]
      }
    }
  },
  "useshortcut/mcp-server-shortcut": {
    "mcpServers": {
      "shortcut": {
        "command": "node",
        "args": [
          "/path/to/your/local/mcp-server-shortcut/dist/index.js"
        ],
        "env": {
          "SHORTCUT_API_TOKEN": "<YOUR_SHORTCUT_API_TOKEN>"
        }
      }
    }
  },
  "abdouwarissiboukari/weather_mcp_server": {
    "mcpServers": {
      "github": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-github"
        ],
        "env": {
          "GITHUB_PERSONAL_ACCESS_TOKEN": "<YOUR_TOKEN>"
        }
      }
    }
  },
  "MCP-Mirror/lenwood_cfbd-mcp-server": {
    "mcpServers": {
      "cfbd-mcp-server": {
        "command": "uv",
        "args": [
          "--directory",
          "/full/path/to/cfbd-mcp-server",
          "run",
          "cfbd-mcp-server"
        ],
        "env": {
          "CFB_API_KEY": "xxx",
          "PATH": "/full/path/to/python"
        }
      }
    }
  },
  "mamertofabian/mcp-everything-search": {
    "mcpServers": {
      "everything-search": {
        "command": "python",
        "args": [
          "-m",
          "mcp_server_everything_search"
        ]
      }
    }
  },
  "linux-china/mcp-rs-template": {
    "mcpServers": {
      "current-time": {
        "command": "mcp-rs-template",
        "args": [
          "--mcp"
        ],
        "env": {
          "API_KEY": "xxxx"
        }
      }
    }
  },
  "MCP-Mirror/run-llama_mcp-server-llamacloud": {
    "mcpServers": {
      "llamacloud": {
        "command": "node",
        "args": [
          "/path/to/llamacloud/build/index.js"
        ],
        "env": {
          "LLAMA_CLOUD_INDEX_NAME": "<YOUR_INDEX_NAME>",
          "LLAMA_CLOUD_PROJECT_NAME": "<YOUR_PROJECT_NAME>",
          "LLAMA_CLOUD_API_KEY": "<YOUR_API_KEY>"
        }
      }
    }
  },
  "annenpolka/roo-logger": {
    "mcpServers": {
      "roo-activity-logger": {
        "command": "node",
        "args": [
          "/path/to/your/local/roo-logger/dist/index.js"
        ],
        "env": {},
        "disabled": false
      }
    }
  },
  "tengfone/supabase-nextjs-mcp-server": {
    "mcpServers": {
      "supabase-nextjs-server": {
        "command": "/path/to/supabase-nextjs-server/build/index.js"
      }
    }
  },
  "MCP-Mirror/delorenj_mcp-server-trello": {
    "mcpServers": {
      "trello": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-trello"
        ],
        "env": {
          "TRELLO_API_KEY": "your-api-key",
          "TRELLO_TOKEN": "your-token",
          "TRELLO_BOARD_ID": "your-board-id"
        }
      }
    }
  },
  "fernandezpablo85/mcpiol": {
    "mcpServers": {
      "iol": {
        "command": "/Users/YOUR_USERNAME/.local/bin/uv",
        "args": [
          "--directory",
          "/Users/YOUR_USERNAME/projects/playground/mcpiol",
          "run",
          "main.py"
        ]
      }
    }
  },
  "merajmehrabi/puppeteer-mcp-server": {
    "mcpServers": {
      "puppeteer": {
        "command": "node",
        "args": [
          "path/to/puppeteer-mcp-server/dist/index.js"
        ],
        "env": {
          "NODE_OPTIONS": "--experimental-modules"
        }
      }
    }
  },
  "OpsBeaconInc/mcp-opsbeacon-server": {
    "mcpServers": {
      "opsbeacon": {
        "command": "python",
        "args": [
          "-m",
          "mcp_opsbeacon_server"
        ],
        "env": {
          "OPSBEACON_TOKEN": "your-bearer-token-here",
          "OPSBEACON_BASE_URL": "your-base-url-here"
        }
      }
    }
  },
  "RSS3-Network/mcp-server-rss3": {
    "mcpServers": {
      "rss3": {
        "command": "npx",
        "args": [
          "mcp-server-rss3"
        ]
      }
    }
  },
  "oleander/home-assistant-mcp-server": {
    "mcpServers": {
      "homeassistant": {
        "command": "home-assistant-mcp-server",
        "env": {
          "HASS_URL": "http://your-home-assistant:8123",
          "HASS_TOKEN": "your_token_here",
          "HASS_MOCK": "true"
        }
      }
    }
  },
  "MitchyBAwesome/sar-mcp": {
    "mcpServers": {
      "aws-service-reference": {
        "command": "python",
        "args": [
          "/ABSOLUTE/PATH/TO/aws_service_reference.py"
        ]
      }
    }
  },
  "minovap/mcp-gateway": {
    "mcpServers": {
      "mcp-gateway": {
        "command": "npx",
        "args": [
          "-y",
          "@thinkware/mcp-gateway"
        ],
        "env": {
          "MCP_GATEWAY_LOG_FILE": "/path/to/logs/mcp-gateway.log"
        }
      }
    }
  },
  "alxspiker/mcp-server-ftp": {
    "mcpServers": {
      "ftp-server": {
        "command": "node",
        "args": [
          "C:\\path\\to\\mcp-server-ftp\\build\\index.js"
        ],
        "env": {
          "FTP_HOST": "ftp.example.com",
          "FTP_PORT": "21",
          "FTP_USER": "your-username",
          "FTP_PASSWORD": "your-password",
          "FTP_SECURE": "false"
        }
      }
    }
  },
  "MCP-Mirror/kiwamizamurai_mcp-kibela-server": {
    "mcpServers": {
      "kibela": {
        "command": "npx",
        "args": [
          "-y",
          "@kiwamizamurai/mcp-kibela-server"
        ],
        "env": {
          "KIBELA_TEAM": "your-team",
          "KIBELA_TOKEN": "your-token"
        }
      }
    }
  },
  "recallnet/recall-mcp": {
    "mcpServers": {
      "recall-mcp-server": {
        "name": "Recall MCP",
        "type": "command",
        "command": "node",
        "args": [
          "/path/to/recall-mcp/dist/index.js"
        ],
        "env": {
          "RECALL_PRIVATE_KEY": "your-private-key-here",
          "RECALL_NETWORK": "testnet",
          "DEBUG": "true"
        }
      }
    }
  },
  "deepsuthar496/figma-mcp-server": {
    "mcpServers": {
      "figma": {
        "command": "node",
        "args": [
          "path/to/figma-server/build/index.js"
        ],
        "env": {
          "FIGMA_ACCESS_TOKEN": "your-access-token-here"
        },
        "disabled": false,
        "alwaysAllow": []
      }
    }
  },
  "xiehust/sample-mcp-servers": {
    "mcpServers": {
      "baidu-map": {
        "command": "npx",
        "args": [
          "-y",
          "@baidumap/mcp-server-baidu-map"
        ],
        "env": {
          "BAIDU_MAP_API_KEY": "xxx"
        }
      }
    }
  },
  "MCP-Mirror/prasanthmj_primitive-go-mcp-server": {
    "mcpServers": {
      "imagegen-go": {
        "command": "/path/to/imagegen-go/bin/imagegen-go",
        "env": {
          "OPENAI_API_KEY": "your-api-key",
          "DEFAULT_DOWNLOAD_PATH": "/path/to/downloads"
        }
      }
    }
  },
  "bitrefill/bitrefill-mcp-server": {
    "mcpServers": {
      "github.com/bitrefill/bitrefill-mcp-server": {
        "command": "npx",
        "args": [
          "-y",
          "bitrefill-mcp-server"
        ],
        "disabled": false,
        "autoApprove": [
          "search",
          "detail",
          "categories"
        ],
        "env": {
          "BITREFILL_API_ID": "your_api_id_here",
          "BITREFILL_API_SECRET": "your_api_key_here"
        }
      }
    }
  },
  "ruixingshi/deepseek-thinker-mcp": {
    "mcpServers": {
      "deepseek-thinker": {
        "command": "node",
        "args": [
          "/your-path/deepseek-thinker-mcp/build/index.js"
        ],
        "env": {
          "API_KEY": "<Your API Key>",
          "BASE_URL": "<Your Base URL>"
        }
      }
    }
  },
  "kazz187/mcp-google-spreadsheet": {
    "mcpServers": {
      "mcp_google_spreadsheet": {
        "command": "mcp-google-spreadsheet",
        "args": [],
        "env": {
          "MCPGS_CLIENT_SECRET_PATH": "/path/to/client_secret.json",
          "MCPGS_TOKEN_PATH": "/path/to/token.json",
          "MCPGS_FOLDER_ID": "your_folder_id"
        }
      }
    }
  },
  "tylerstoltz/mcp-odbc": {
    "mcpServers": {
      "odbc": {
        "command": "uv",
        "args": [
          "--directory",
          "C:\\path\\to\\mcp-odbc",
          "run",
          "odbc-mcp-server",
          "--config",
          "C:\\path\\to\\mcp-odbc\\config\\your_config.ini"
        ]
      }
    }
  },
  "zoeminghong/yapi-mcp-server": {
    "mcpServers": {
      "yapi-mcp-service": {
        "command": "/path/to/yapi-mcp-service/build/index.js"
      }
    }
  },
  "abel9851/quckstart-mcp-server": {
    "mcpServers": {
      "github": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-github"
        ],
        "env": {
          "GITHUB_PERSONAL_ACCESS_TOKEN": "<YOUR_TOKEN>"
        }
      }
    }
  },
  "PsychArch/minimax-mcp-tools": {
    "mcpServers": {
      "minimax-mcp-tools": {
        "command": "npx",
        "args": [
          "minimax-mcp-tools"
        ],
        "env": {
          "MINIMAX_API_KEY": "your-minimax-api-key",
          "MINIMAX_GROUP_ID": "your-minimax-group-id"
        }
      }
    }
  },
  "felores/gdrive-mcp-server": {
    "mcpServers": {
      "gdrive": {
        "command": "node",
        "args": [
          "path/to/gdrive-mcp-server/dist/index.js"
        ],
        "env": {
          "GOOGLE_APPLICATION_CREDENTIALS": "path/to/gdrive-mcp-server/credentials/gcp-oauth.keys.json",
          "MCP_GDRIVE_CREDENTIALS": "path/to/gdrive-mcp-server/credentials/.gdrive-server-credentials.json"
        }
      }
    }
  },
  "MCP-Mirror/bmorphism_say-mcp-server": {
    "mcpServers": {
      "say": {
        "command": "node",
        "args": [
          "/path/to/say-mcp-server/build/index.js"
        ]
      }
    }
  },
  "prajwalshettydev/UnrealGenAISupport": {
    "mcpServers": {
      "unreal-handshake": {
        "command": "python",
        "args": [
          "<your_project_directoy_path>/Plugins/GenerativeAISupport/Content/Python/mcp_server.py"
        ],
        "env": {
          "UNREAL_HOST": "localhost",
          "UNREAL_PORT": "9877"
        }
      }
    }
  },
  "DLYZZT/china-weather-mcp-server": {
    "mcpServers": {
      "weather": {
        "command": "uv",
        "args": [
          "--directory",
          "path/china-weather-mcp-server",
          "run",
          "weather.py"
        ],
        "env": {
          "AMAP_API_KEY": "\u00e4\u00bd\u00a0\u00e7\u009a\u0084API\u00e5\u00af\u0086\u00e9\u0092\u00a5"
        }
      }
    }
  },
  "Tryd0g0lik/mcp-server": {
    "mcpServers": {
      "file-finder-mcp": {
        "args": [
          "python",
          "file_finder_mcp.py"
        ],
        "command": "python",
        "autoApprove": [],
        "disabled": false
      }
    }
  },
  "stakpak/mcp": {
    "mcpServers": {
      "stakpak": {
        "command": "node",
        "args": [
          "<path-to-your-build-file> STAKPAK_API_KEY=<your-stakpak-api-key>"
        ]
      }
    }
  },
  "TaazKareem/clickup-mcp-server": {
    "mcpServers": {
      "ClickUp": {
        "command": "npx",
        "args": [
          "-y",
          "@taazkareem/clickup-mcp-server@latest"
        ],
        "env": {
          "CLICKUP_API_KEY": "your-api-key",
          "CLICKUP_TEAM_ID": "your-team-id"
        }
      }
    }
  },
  "neoforge-dev/neoforge-mcp-server": {
    "mcpServers": {
      "NeoMCP": {
        "command": "/path/to/uv",
        "args": [
          "run",
          "--with",
          "mcp[cli]",
          "mcp",
          "run",
          "/path/to/python-server-mcp/server.py"
        ]
      }
    }
  },
  "gregkop/sketchfab-mcp-server": {
    "mcpServers": {
      "sketchfab": {
        "command": "node",
        "args": [
          "/path/to/build/index.js",
          "--api-key",
          "YOUR_API_KEY"
        ]
      }
    }
  },
  "event-catalog/mcp-server": {
    "mcpServers": {
      "eventcatalog": {
        "command": "npx",
        "args": [
          "-y",
          "tsx /PATH_TO_YOUR_REPO/src/index.ts",
          "https://demo.eventcatalog.dev"
        ]
      }
    }
  },
  "alexcc4/mcp-mysql-server": {
    "mcpServers": {
      "sql": {
        "command": "/path/uv",
        "args": [
          "--directory",
          "code_path",
          "run",
          "main.py"
        ],
        "env": {
          "DB_HOST": "127.0.0.1",
          "DB_PORT": "3306",
          "DB_USER": "your_user",
          "DB_PASSWORD": "your_password",
          "DB_NAME": "your_database"
        }
      }
    }
  },
  "MCP-Mirror/amidabuddha_unichat-mcp-server": {
    "mcpServers": {
      "unichat-mcp-server": {
        "command": "uvx",
        "args": [
          "unichat-mcp-server"
        ],
        "env": {
          "UNICHAT_MODEL": "SELECTED_UNICHAT_MODEL",
          "UNICHAT_API_KEY": "YOUR_UNICHAT_API_KEY"
        }
      }
    }
  },
  "jasonsum/gmail-mcp-server": {
    "mcpServers": {
      "gdrive": {
        "command": "uv",
        "args": [
          "--directory",
          "[absolute-path-to-git-repo]",
          "run",
          "gmail",
          "--creds-file-path",
          "[absolute-path-to-credentials-file]",
          "--token-path",
          "[absolute-path-to-access-tokens-file]"
        ]
      }
    }
  },
  "jtucker/mcp-untappd-server": {
    "mcpServers": {
      "untappd-server": {
        "command": "/path/to/untappd-server/build/index.js"
      }
    }
  },
  "jkawamoto/mcp-florence2": {
    "mcpServers": {
      "florence-2": {
        "command": "uvx",
        "args": [
          "--from",
          "git+https://github.com/jkawamoto/mcp-florence2",
          "mcp-florence2"
        ]
      }
    }
  },
  "procload/dnd-mcp": {
    "mcpServers": {
      "dnd": {
        "command": "/path/to/uv",
        "args": [
          "--directory",
          "/path/to/dnd-knowledge-navigator",
          "run",
          "dnd_mcp_server.py"
        ]
      }
    }
  },
  "datawiz168/mcp-snowflake-service": {
    "mcpServers": {
      "snowflake": {
        "command": "/usr/bin/python3",
        "args": [
          "/path/to/mcp-snowflake/server.py"
        ]
      }
    }
  },
  "wrale/mcp-server-tree-sitter": {
    "mcpServers": {
      "tree_sitter": {
        "command": "uvx",
        "args": [
          "--directory",
          "/ABSOLUTE/PATH/TO/YOUR/PROJECT",
          "mcp-server-tree-sitter"
        ]
      }
    }
  },
  "spences10/mcp-turso-cloud": {
    "mcpServers": {
      "mcp-turso-cloud": {
        "command": "wsl.exe",
        "args": [
          "bash",
          "-c",
          "TURSO_API_TOKEN=your-token TURSO_ORGANIZATION=your-org node /path/to/mcp-turso-cloud/dist/index.js"
        ]
      }
    }
  },
  "SweetingTech/MCP": {
    "mcpServers": {
      "agentql": {
        "command": "/path/to/agentql-mcp/dist/index.js",
        "env": {
          "AGENTQL_API_KEY": "YOUR_API_KEY"
        }
      }
    }
  },
  "JexinSam/mssql_mcp_server": {
    "mcpServers": {
      "mssql": {
        "command": "uv",
        "args": [
          "--directory",
          "path/to/mssql_mcp_server",
          "run",
          "mssql_mcp_server"
        ],
        "env": {
          "MSSQL_DRIVER": "mssql_driver",
          "MSSQL_HOST": "localhost",
          "MSSQL_USER": "your_username",
          "MSSQL_PASSWORD": "your_password",
          "MSSQL_DATABASE": "your_database"
        }
      }
    }
  },
  "tejpalvirk/quantitativeresearch": {
    "mcpServers": {
      "quantitativeresearch": {
        "command": "docker",
        "args": [
          "run",
          "--rm",
          "-i",
          "mcp/quantitativeresearch"
        ]
      }
    }
  },
  "RinardNick/mcp-terminal": {
    "mcpServers": {
      "terminal": {
        "command": "uv",
        "args": [
          "pip",
          "run",
          "mcp-terminal",
          "--allowed-commands",
          "python,pip,git,ls,cd",
          "--timeout-ms",
          "30000",
          "--max-output-size",
          "1048576"
        ]
      }
    }
  },
  "Ruijian-Zha/Notion_MCP_advanced": {
    "mcpServers": {
      "notion-todo": {
        "command": "/path/to/your/.venv/bin/python",
        "args": [
          "-m",
          "notion_mcp"
        ],
        "cwd": "/path/to/notion-mcp"
      }
    }
  },
  "ryaker/CommandExecution": {
    "mcpServers": {
      "command-execution": {
        "command": "node",
        "args": [
          "/full/path/to/command-execution-tool.js"
        ],
        "env": {
          "NODE_OPTIONS": "--no-deprecation"
        }
      }
    }
  },
  "johnhuang316/code-index-mcp": {
    "mcpServers": {
      "code-indexer": {
        "command": "uv",
        "args": [
          "--directory",
          "/home/username/path/to/code-index-mcp",
          "run",
          "run.py"
        ]
      }
    }
  },
  "loopwork-ai/iMCP": {
    "mcpServers": {
      "iMCP": {
        "command": "{paste iMCP server command}"
      }
    }
  },
  "qingtianyu/mcp-server": {
    "mcpServers": {
      "api-server": {
        "command": "node",
        "args": [
          "D:/api-server/build/index.js"
        ],
        "env": {
          "BASE_URL": "https://127.0.0.0:8080",
          "CLIENT_ID": "xxx",
          "CLIENT_SECRET": "xxx",
          "USERNAME": "xxx",
          "PASSWORD": "xxx",
          "TENANT_ID": "1",
          "REJECT_UNAUTHORIZED": "false",
          "ALLOWED_APIS": "/admin-api/system/user/page,/admin-api/system/user/create,/admin-api/system/user/update"
        },
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "gokborayilmaz/code-reviewer-fixer-agent": {
    "mcpServers": {
      "github": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-github"
        ],
        "env": {
          "GITHUB_PERSONAL_ACCESS_TOKEN": "YOUR_GITHUB_TOKEN"
        }
      },
      "sentry": {
        "command": "python",
        "args": [
          "-m",
          "mcp_server_sentry",
          "--auth-token",
          "YOUR_SENTRY_TOKEN"
        ]
      }
    }
  },
  "MCP-Mirror/gentoro-gh_mcp-nodejs-server": {
    "mcpServers": {
      "gentoro": {
        "command": "npx",
        "args": [
          "-y",
          "@gentoro/mcp-nodejs-server"
        ],
        "env": {
          "GENTORO_API_KEY": "<your api key>",
          "GENTORO_BRIDGE_UID": "<your bridge uid>",
          "GENTORO_BASE_URL": "<url where gentoro is hosted>"
        }
      }
    }
  },
  "MCP-Mirror/AndrewDonelson_go-mcp-server-service": {
    "mcpServers": {
      "notes-server": {
        "command": "./bin/release/<platform>/notes-service",
        "args": []
      }
    }
  },
  "Rudra-ravi/wikipedia-mcp": {
    "mcpServers": {
      "wikipedia": {
        "command": "wikipedia-mcp"
      }
    }
  },
  "hemangjoshi37a/mcphub": {
    "mcpServers": {
      "github": {
        "command": "node",
        "args": [
          "@modelcontextprotocol/server-github"
        ],
        "env": {
          "GITHUB_PERSONAL_ACCESS_TOKEN": "your-token-here"
        }
      }
    }
  },
  "yamadashy/repomix": {
    "mcpServers": {
      "repomix": {
        "command": "npx",
        "args": [
          "-y",
          "repomix",
          "--mcp"
        ]
      }
    }
  },
  "bmorphism/anti-bullshit-mcp-server": {
    "mcpServers": {
      "anti-bullshit": {
        "command": "node",
        "args": [
          "/path/to/anti-bullshit-mcp-server/build/index.js"
        ]
      }
    }
  },
  "MCP-Mirror/mondweep_youtube-music-mcp-server": {
    "mcpServers": {
      "youtube-music-server": {
        "command": "/path/to/youtube-music-server/build/index.js"
      }
    }
  },
  "mamertofabian/elevenlabs-mcp-server": {
    "mcpServers": {
      "elevenlabs": {
        "command": "uv",
        "args": [
          "--directory",
          "path/to/elevenlabs-mcp-server",
          "run",
          "elevenlabs-mcp-server"
        ],
        "env": {
          "ELEVENLABS_API_KEY": "your-api-key",
          "ELEVENLABS_VOICE_ID": "your-voice-id",
          "ELEVENLABS_MODEL_ID": "eleven_flash_v2",
          "ELEVENLABS_STABILITY": "0.5",
          "ELEVENLABS_SIMILARITY_BOOST": "0.75",
          "ELEVENLABS_STYLE": "0.1",
          "ELEVENLABS_OUTPUT_DIR": "output"
        }
      }
    }
  },
  "MarkusPfundstein/mcp-obsidian": {
    "mcpServers": {
      "mcp-obsidian": {
        "command": "uvx",
        "args": [
          "mcp-obsidian"
        ],
        "env": {
          "OBSIDIAN_API_KEY": "<YOUR_OBSIDIAN_API_KEY>"
        }
      }
    }
  },
  "wysh3/perplexity-mcp-server": {
    "mcpServers": {
      "web-search": {
        "command": "node",
        "args": [
          "/path/to/web-search/build/index.js"
        ],
        "env": {}
      }
    }
  },
  "muxi1998/android-studio-mcp-server": {
    "mcpServers": {
      "jetbrains": {
        "command": "npx",
        "args": [
          "-y",
          "@jetbrains/mcp-proxy"
        ]
      }
    }
  },
  "roychri/mcp-server-asana": {
    "mcpServers": {
      "asana": {
        "command": "npx",
        "args": [
          "-y",
          "@roychri/mcp-server-asana"
        ],
        "env": {
          "ASANA_ACCESS_TOKEN": "your-asana-access-token"
        }
      }
    }
  },
  "alexgoller/illumio-mcp-server": {
    "mcpServers": {
      "illumio-mcp": {
        "command": "uv",
        "args": [
          "--directory",
          "/Users/alex.goller/git/illumio-mcp",
          "run",
          "illumio-mcp"
        ],
        "env": {
          "PCE_HOST": "your-pce-host",
          "PCE_PORT": "your-pce-port",
          "PCE_ORG_ID": "1",
          "API_KEY": "api_key",
          "API_SECRET": "api_secret"
        }
      }
    }
  },
  "LeonMelamud/mysql-mcp": {
    "mcpServers": {
      "mysql": {
        "command": "node",
        "args": [
          "/path/to/mysql-server/build/index.js"
        ],
        "env": {
          "MYSQL_HOST": "localhost",
          "MYSQL_USER": "your_username",
          "MYSQL_PASSWORD": "your_password",
          "MYSQL_DATABASE": "your_database"
        },
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "FocusSearch/focus_mcp_sql": {
    "mcpServers": {
      "focus_mcp_data": {
        "command": "java",
        "args": [
          "-jar",
          "path/to/focus_mcp_sql/focus_mcp_sql.jar"
        ],
        "autoApprove": [
          "gptText2sqlStart",
          "gptText2sqlChat"
        ]
      }
    }
  },
  "atom2ueki/mcp-server-ios-simulator": {
    "mcpServers": {
      "simulator": {
        "command": "node",
        "args": [
          "/path/to/your/mcp-server-ios-simulator/dist/index.js"
        ]
      }
    }
  },
  "siscale/arcanna-mcp-server": {
    "mcpServers": {
      "arcanna-mcp-server": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "-e",
          "ARCANNA_MANAGEMENT_API_KEY",
          "-e",
          "ARCANNA_HOST",
          "arcanna/arcanna-mcp-server"
        ],
        "env": {
          "ARCANNA_MANAGEMENT_API_KEY": "<ARCANNA_MANAGEMENT_API_KEY>",
          "ARCANNA_HOST": "<YOUR_ARCANNA_HOST_HERE>"
        }
      }
    }
  },
  "berlinbra/polymarket-mcp": {
    "mcpServers": {
      "polymarket-mcp": {
        "command": "uv",
        "args": [
          "--directory",
          "/Users/{INSERT_USER}/YOUR/PATH/TO/polymarket-mcp",
          "run",
          "polymarket-mcp"
        ],
        "env": {
          "KEY": "<insert poly market api key>",
          "FUNDER": "<insert polymarket wallet address>"
        }
      }
    }
  },
  "rember/rember-mcp": {
    "mcpServers": {
      "rember": {
        "command": "npx",
        "args": [
          "-y",
          "@getrember/mcp",
          "--api-key=YOUR_REMBER_API_KEY"
        ]
      }
    }
  },
  "datalayer/jupyter-mcp-server": {
    "mcpServers": {
      "jupyter": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "-e",
          "SERVER_URL",
          "-e",
          "TOKEN",
          "-e",
          "NOTEBOOK_PATH",
          "datalayer/jupyter-mcp-server:latest"
        ],
        "env": {
          "SERVER_URL": "http://host.docker.internal:8888",
          "TOKEN": "MY_TOKEN",
          "NOTEBOOK_PATH": "notebook.ipynb"
        }
      }
    }
  },
  "misterboe/webtools-mcp-server": {
    "mcpServers": {
      "webtools": {
        "command": "npx",
        "args": [
          "-y",
          "@bschauer/webtools-mcp-server@1.6.1"
        ]
      }
    }
  },
  "tejpalvirk/developer": {
    "mcpServers": {
      "developer": {
        "command": "docker",
        "args": [
          "run",
          "--rm",
          "-i",
          "mcp/developer"
        ]
      }
    }
  },
  "runekaagaard/mcp-redmine": {
    "mcpServers": {
      "redmine": {
        "command": "uvx",
        "args": [
          "--from",
          "mcp-redmine==2025.04.09.153531",
          "mcp-redmine"
        ],
        "env": {
          "REDMINE_URL": "https://your-redmine-instance.example.com",
          "REDMINE_API_KEY": "your-api-key",
          "REDMINE_REQUEST_INSTRUCTIONS": "/path/to/instructions.md"
        }
      }
    }
  },
  "j3k0/mcp-google-workspace": {
    "mcpServers": {
      "mcp-google-workspace": {
        "command": "npx",
        "args": [
          "mcp-google-workspace"
        ]
      }
    }
  },
  "f4ww4z/mcp-mysql-server": {
    "mcpServers": {
      "mysql": {
        "command": "npx",
        "args": [
          "-y",
          "@f4ww4z/mcp-mysql-server"
        ],
        "env": {
          "MYSQL_HOST": "your_host",
          "MYSQL_USER": "your_user",
          "MYSQL_PASSWORD": "your_password",
          "MYSQL_DATABASE": "your_database"
        }
      }
    }
  },
  "MladenSU/cli-mcp-server": {
    "mcpServers": {
      "cli-mcp-server": {
        "command": "uvx",
        "args": [
          "cli-mcp-server"
        ],
        "env": {
          "ALLOWED_DIR": "</your/desired/dir>",
          "ALLOWED_COMMANDS": "ls,cat,pwd,echo",
          "ALLOWED_FLAGS": "-l,-a,--help,--version",
          "MAX_COMMAND_LENGTH": "1024",
          "COMMAND_TIMEOUT": "30"
        }
      }
    }
  },
  "Quegenx/supabase-mcp-server": {
    "mcpServers": {
      "supabase-mcp": {
        "command": "/path/to/node",
        "args": [
          "/path/to/dist/index.js",
          "postgresql://postgres.[PROJECT-ID]:[PASSWORD]@aws-0-eu-central-1.pooler.supabase.com:5432/postgres"
        ]
      }
    }
  },
  "Bob-lance/instagram-engagement-mcp": {
    "mcpServers": {
      "instagram-engagement": {
        "command": "node",
        "args": [
          "/path/to/instagram-engagement-mcp/build/index.js"
        ],
        "env": {
          "INSTAGRAM_USERNAME": "your_instagram_username",
          "INSTAGRAM_PASSWORD": "your_instagram_password"
        },
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "cyanheads/atlas-mcp-server": {
    "mcpServers": {
      "atlas": {
        "command": "node",
        "args": [
          "/path/to/atlas-mcp-server/dist/index.js"
        ],
        "env": {
          "NEO4J_URI": "bolt://localhost:7687",
          "NEO4J_USER": "neo4j",
          "NEO4J_PASSWORD": "password2",
          "LOG_LEVEL": "info",
          "NODE_ENV": "production"
        }
      }
    }
  },
  "QiYuOr2/anitabi-mcp-server": {
    "mcpServers": {
      "blender": {
        "command": "uvx",
        "args": [
          "blender-mcp"
        ]
      }
    }
  },
  "MCP-Mirror/KS-GEN-AI_jira-mcp-server": {
    "mcpServers": {
      "Jira communication server": {
        "command": "node",
        "args": [
          "/PATH_TO_THE_PROJECT/build/index.js"
        ],
        "env": {
          "JIRA_URL": "https://XXXXXXXX.atlassian.net",
          "JIRA_API_MAIL": "Your email",
          "JIRA_API_KEY": "KEY_FROM : https://id.atlassian.com/manage-profile/security/api-tokens"
        }
      }
    }
  },
  "cdugo/package-documentation-mcp": {
    "mcpServers": {
      "docsFetcher": {
        "command": "npx",
        "args": [
          "-y",
          "@smithery/cli@latest",
          "run",
          "@cdugo/mcp-get-docs",
          "--config",
          "'{}'"
        ]
      }
    }
  },
  "misterboe/strapi-mcp-server": {
    "mcpServers": {
      "strapi": {
        "command": "npx",
        "args": [
          "-y",
          "@bschauer/strapi-mcp-server@2.5.0"
        ]
      }
    }
  },
  "MCP-Mirror/btwiuse_npm-search-mcp-server": {
    "mcpServers": {
      "npm-search": {
        "command": "uvx",
        "args": [
          "npm-search-mcp-server"
        ]
      }
    }
  },
  "BrockReece/whimsical-mcp-server": {
    "mcpServers": {
      "whimsical": {
        "command": "node",
        "args": [
          "/path/to/this/repo/whimsical-mcp-server/dist/index.js"
        ]
      }
    }
  },
  "Vic563/Memgpt-MCP-Server": {
    "mcpServers": {
      "letta-memgpt": {
        "command": "/path/to/memgpt-server/build/index.js",
        "env": {
          "OPENAI_API_KEY": "your-openai-key",
          "ANTHROPIC_API_KEY": "your-anthropic-key",
          "OPENROUTER_API_KEY": "your-openrouter-key"
        }
      }
    }
  },
  "farzad528/mcp-server-azure-ai-agents": {
    "mcpServers": {
      "azure-search": {
        "command": "C:\\path\\to\\.venv\\Scripts\\python.exe",
        "args": [
          "C:\\path\\to\\azure_search_server.py"
        ],
        "env": {
          "AZURE_SEARCH_SERVICE_ENDPOINT": "https://your-service-name.search.windows.net",
          "AZURE_SEARCH_INDEX_NAME": "your-index-name",
          "AZURE_SEARCH_API_KEY": "your-api-key"
        }
      }
    }
  },
  "ArchimedesCrypto/excel-reader-mcp": {
    "mcpServers": {
      "excel-reader": {
        "command": "excel-reader",
        "env": {}
      }
    }
  },
  "Timtech4u/deno-mcp-server": {
    "mcpServers": {
      "deno": {
        "command": "node",
        "args": [
          "/absolute/path/to/deno-mcp/dist/index.js"
        ],
        "disabled": false,
        "autoApprove": [
          "execute_deno_code",
          "check_deno_version"
        ]
      }
    }
  },
  "MCP-Mirror/66julienmartin_MCP-server-Deepseek_R1": {
    "mcpServers": {
      "deepseek_r1": {
        "command": "node",
        "args": [
          "/path/to/deepseek-r1-mcp/build/index.js"
        ],
        "env": {
          "DEEPSEEK_API_KEY": "your-api-key"
        }
      }
    }
  },
  "StevenBtw/marimo-docs-mcp": {
    "mcpServers": {
      "marimo-docs": {
        "command": "node",
        "args": [
          "/path/to/marimo-docs/build/index.js"
        ]
      }
    }
  },
  "MCP-Mirror/felores_placid-mcp-server": {
    "mcpServers": {
      "placid": {
        "command": "node",
        "args": [
          "path/to/placid-mcp-server/build/index.js"
        ],
        "env": {
          "PLACID_API_TOKEN": "your-api-token"
        }
      }
    }
  },
  "jimbobbennett/PiecesMCPNet": {
    "mcpServers": {
      "PiecesLTM": {
        "command": "<location>PiecesMCPNet"
      }
    }
  },
  "MCP-Mirror/AidenYangX_mapbox-mcp-server": {
    "mcpServers": {
      "mapbox-mcp-server": {
        "command": "node",
        "args": [
          "/absolute/path/to/mapbox-mcp-server/build/index.js"
        ],
        "env": {
          "MAPBOX_ACCESS_TOKEN": "your-api-key"
        }
      }
    }
  },
  "MCP-Mirror/1broseidon_mcp-jira-server": {
    "mcpServers": {
      "jira": {
        "command": "node",
        "args": [
          "/path/to/jira-server/build/index.js"
        ],
        "env": {
          "JIRA_EMAIL": "your-email@example.com",
          "JIRA_API_TOKEN": "your-api-token",
          "JIRA_DOMAIN": "your-domain"
        }
      }
    }
  },
  "kaliaboi/mcp-zotero": {
    "mcpServers": {
      "zotero": {
        "command": "mcp-zotero",
        "env": {
          "ZOTERO_API_KEY": "YOUR_API_KEY",
          "ZOTERO_USER_ID": "YOUR_USER_ID"
        }
      }
    }
  },
  "tejpalvirk/project": {
    "mcpServers": {
      "project": {
        "command": "docker",
        "args": [
          "run",
          "--rm",
          "-i",
          "mcp/project"
        ]
      }
    }
  },
  "MCP-Mirror/mark3labs_mcp-filesystem-server": {
    "mcpServers": {
      "filesystem": {
        "command": "mcp-filesystem-server",
        "args": [
          "/Users/username/Desktop",
          "/path/to/other/allowed/dir"
        ]
      }
    }
  },
  "chatmcp/mcp-server-flomo": {
    "mcpServers": {
      "mcp-server-flomo": {
        "command": "npx",
        "args": [
          "-y",
          "@chatmcp/mcp-server-flomo"
        ],
        "env": {
          "FLOMO_API_URL": "https://flomoapp.com/iwh/xxx/xxx/"
        }
      }
    }
  },
  "andybrandt/mcp-simple-timeserver": {
    "mcpServers": {
      "simple-timeserver": {
        "command": "C:\\Users\\YOUR_USERNAME\\AppData\\Local\\Programs\\Python\\Python311\\python.exe",
        "args": [
          "-m",
          "mcp_simple_timeserver"
        ]
      }
    }
  },
  "mamisoa/mcp-server": {
    "mcpServers": {
      "datetime": {
        "command": "poetry",
        "args": [
          "run",
          "python",
          "/path/to/your/mcp-server/mcp_server/mcp-datetime.py"
        ]
      }
    }
  },
  "ktanaka101/mcp-server-duckdb": {
    "mcpServers": {
      "duckdb": {
        "command": "uvx",
        "args": [
          "mcp-server-duckdb",
          "--db-path",
          "~/mcp-server-duckdb/data/data.db"
        ]
      }
    }
  },
  "MCP-Mirror/snaggle-ai_openapi-mcp-server": {
    "mcpServers": {
      "petstore-api": {
        "command": "npx",
        "args": [
          "openapi-mcp-server",
          "/abs/path/to/petstore-openapi.json"
        ]
      }
    }
  },
  "crazyrabbitLTC/mcp-brex-server": {
    "mcpServers": {
      "brex-server": {
        "command": "node",
        "args": [
          "/path/to/brex-mcp-server/build/index.js"
        ],
        "env": {
          "BREX_API_KEY": "your_brex_api_key_here",
          "BREX_API_URL": "https://platform.brexapis.com",
          "PORT": "3000",
          "NODE_ENV": "development",
          "RATE_LIMIT_REQUESTS": "1000",
          "RATE_LIMIT_WINDOW_MS": "60000",
          "LOG_LEVEL": "info"
        }
      }
    }
  },
  "MCP-Mirror/bsmi021_mcp-filesystem-server": {
    "mcpServers": {
      "filesystem": {
        "command": "node",
        "args": [
          "path/to/filesystem-server/build/index.js"
        ]
      }
    }
  },
  "BurtTheCoder/mcp-maigret": {
    "mcpServers": {
      "maigret": {
        "command": "node",
        "args": [
          "/absolute/path/to/mcp-maigret/build/index.js"
        ],
        "env": {
          "MAIGRET_REPORTS_DIR": "/path/to/reports/directory"
        }
      }
    }
  },
  "MCP-Mirror/Text2Go_ai-humanizer-mcp-server": {
    "mcpServers": {
      "ai-humanizer": {
        "command": "node",
        "args": [
          "<YOUR_PROJECT_PATH>/build/index.js"
        ]
      }
    }
  },
  "appliedrelevance/frappe_mcp_server": {
    "mcpServers": {
      "frappe": {
        "command": "npx",
        "args": [
          "frappe-mcp-server"
        ],
        "env": {
          "FRAPPE_URL": "https://your-frappe-instance.com",
          "FRAPPE_API_KEY": "your_api_key",
          "FRAPPE_API_SECRET": "your_api_secret"
        },
        "disabled": false,
        "alwaysAllow": []
      }
    }
  },
  "weikio/mcp-server": {
    "mcpServers": {
      "weikio": {
        "command": "npx",
        "args": [
          "-y",
          "@weikio/mcp-server"
        ],
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "MCP-Mirror/Siddhant-K-code_memory-journal-mcp-server": {
    "mcpServers": {
      "smart-photo-journal": {
        "command": "/Users/<YOUR_DEVICE_USERNAME>/.local/bin/uv",
        "args": [
          "--directory",
          "/Users/<PATH_TO_CLONED_DIR>/memory-journal-mcp-server",
          "run",
          "server.py"
        ]
      }
    }
  },
  "FREEZONEX/mcp-server-supos": {
    "mcpServers": {
      "supos": {
        "command": "node",
        "args": [
          "<local project path>//dist//index.js"
        ],
        "env": {
          "SUPOS_API_KEY": "<API_KEY>",
          "SUPOS_API_URL": "<API_URL>",
          "SUPOS_MQTT_URL": "<MQTT_URL>"
        }
      }
    }
  },
  "DMontgomery40/mcp-3D-printer-server": {
    "mcpServers": {
      "3dprint": {
        "command": "mcp-3d-printer-server",
        "env": {
          "PRINTER_HOST": "your_printer_ip",
          "PRINTER_TYPE": "bambu",
          "BAMBU_SERIAL": "your_printer_serial",
          "BAMBU_TOKEN": "your_access_token"
        }
      }
    }
  },
  "R3E-Network/neo-n3-mcp": {
    "mcpServers": {
      "neo-n3": {
        "command": "docker",
        "args": [
          "run",
          "--rm",
          "-i",
          "r3e/neo-n3-mcp"
        ]
      }
    }
  },
  "XGenerationLab/xiyan_mcp_server": {
    "mcpServers": {
      "xiyan-mcp-server": {
        "command": "python",
        "args": [
          "-m",
          "xiyan_mcp_server"
        ],
        "env": {
          "YML": "PATH/TO/YML"
        }
      }
    }
  },
  "b1ff/atlassian-dc-mcp": {
    "mcpServers": {
      "atlassian-jira-dc": {
        "command": "npx",
        "args": [
          "-y",
          "@atlassian-dc-mcp/jira"
        ],
        "env": {
          "JIRA_HOST": "your-jira-host",
          "JIRA_API_TOKEN": "your-token"
        }
      },
      "atlassian-confluence-dc": {
        "command": "npx",
        "args": [
          "-y",
          "@atlassian-dc-mcp/confluence"
        ],
        "env": {
          "CONFLUENCE_HOST": "your-confluence-host",
          "CONFLUENCE_API_TOKEN": "your-token"
        }
      },
      "atlassian-bitbucket-dc": {
        "command": "npx",
        "args": [
          "-y",
          "@atlassian-dc-mcp/bitbucket"
        ],
        "env": {
          "BITBUCKET_HOST": "your-bitbucket-host",
          "BITBUCKET_API_TOKEN": "your-token"
        }
      }
    }
  },
  "riii111/ResearchMCP": {
    "mcpServers": {
      "MCPSearch": {
        "description": "Web search powered by Brave, Tavily, etc.",
        "command": "/absolute/path/to/ResearchMCP/cli.ts",
        "args": [],
        "transport": "stdio",
        "env": {
          "BRAVE_API_KEY": "your_brave_api_key_here",
          "TAVILY_API_KEY": "your_tavily_api_key_here"
        }
      }
    }
  },
  "MananShahTR/azure-log-analytics-mcp": {
    "mcpServers": {
      "azure-log-analytics": {
        "command": "node",
        "args": [
          "path/to/azure-log-analytics-mcp/build/mcp-server.js"
        ],
        "env": {
          "ANTHROPIC_API_KEY": "your_key_here"
        }
      }
    }
  },
  "Adfin-Engineering/mcp-server-adfin": {
    "mcpServers": {
      "Adfin": {
        "command": "<home_path>/.local/bin/uv",
        "args": [
          "--directory",
          "<absolute_path_to_adfin_mcp_folder>",
          "run",
          "main_adfin_mcp.py"
        ],
        "env": {
          "ADFIN_EMAIL": "<email>",
          "ADFIN_PASSWORD": "<password>"
        }
      },
      "filesystem": {
        "command": "<home_path>/.local/bin/uv",
        "args": [
          "--directory",
          "<absolute_path_to_adfin_mcp_folder>",
          "run",
          "filesystem.py"
        ]
      }
    }
  },
  "1RB/mongo-mcp": {
    "mcpServers": {
      "mongodb": {
        "command": "node",
        "args": [
          "dist/index.js",
          "mongodb://root:example@localhost:27017/test?authSource=admin"
        ]
      }
    }
  },
  "stippi/code-assistant": {
    "mcpServers": {
      "code-assistant": {
        "command": "/Users/<username>/workspace/code-assistant/target/release/code-assistant",
        "args": [
          "server"
        ]
      }
    }
  },
  "dcSpark/mcp-server-defillama": {
    "mcpServers": {
      "mcp-server-defillama": {
        "command": "node",
        "args": [
          "/path/to/your/mcp-server-defillama/build/index.js"
        ]
      }
    }
  },
  "quazaai/unitymcpintegration": {
    "mcpServers": {
      "unity-mcp-server": {
        "command": "node",
        "args": [
          "path-to-project>\\Library\\PackageCache\\com.quaza.unitymcp@d2b8f1260bca\\mcpServer\\mcpServer\\build\\index.js"
        ],
        "env": {
          "MCP_WEBSOCKET_PORT": "5010"
        }
      }
    }
  },
  "mzxrai/mcp-webresearch": {
    "mcpServers": {
      "webresearch": {
        "command": "npx",
        "args": [
          "-y",
          "@mzxrai/mcp-webresearch@latest"
        ]
      }
    }
  },
  "MCP-Mirror/sergehuber_inoyu-mcp-unomi-server": {
    "mcpServers": {
      "unomi-server": {
        "command": "node",
        "args": [
          "/path/to/local/mcp-unomi-server/build/index.js"
        ],
        "env": {}
      }
    }
  },
  "jskoiz/node-typescript-mcp": {
    "mcpServers": {
      "mcp-documentation-reference-server": {
        "command": "/path/to/mcp-documentation-reference-server/build/index.js"
      }
    }
  },
  "sou-lab/esa-mcp-server-claude": {
    "mcpServers": {
      "esa": {
        "command": "/path/to/node",
        "args": [
          "/path/to/esa-mcp-server-claude/bin/cli.js"
        ],
        "env": {
          "ESA_API_KEY": "\u00e3\u0081\u0082\u00e3\u0081\u00aa\u00e3\u0081\u009f\u00e3\u0081\u00aeESA_API\u00e3\u0082\u00ad\u00e3\u0083\u00bc",
          "ESA_TEAM_NAME": "\u00e3\u0081\u0082\u00e3\u0081\u00aa\u00e3\u0081\u009f\u00e3\u0081\u00ae\u00e3\u0083\u0081\u00e3\u0083\u00bc\u00e3\u0083\u00a0\u00e5\u0090\u008d",
          "PORT": "3000"
        }
      }
    }
  },
  "tejpalvirk/qualitativeresearch": {
    "mcpServers": {
      "qualitativeresearch": {
        "command": "docker",
        "args": [
          "run",
          "--rm",
          "-i",
          "mcp/qualitativeresearch"
        ]
      }
    }
  },
  "smithery-ai/verodat-mcp-server": {
    "mcpServers": {
      "verodat": {
        "command": "node",
        "args": [
          "path/to/verodat-mcp-server/build/src/index.js"
        ],
        "env": {
          "VERODAT_AI_API_KEY": "<<your-verodat-ai-api-key>>"
        }
      }
    }
  },
  "abhishekbhakat/airflow-mcp-server": {
    "mcpServers": {
      "airflow-mcp-server": {
        "command": "uvx",
        "args": [
          "airflow-mcp-server"
        ],
        "env": {
          "AIRFLOW_BASE_URL": "http://<host:port>/api/v1",
          "AUTH_TOKEN": "<base64_encoded_username_password>",
          "COOKIE": "<session_cookie>"
        }
      }
    }
  },
  "ingpoc/stock_mcp_server": {
    "mcpServers": {
      "stock-analysis-mcp": {
        "command": "/path/to/your/python",
        "args": [
          "/path/to/stock_mcp_server/server.py"
        ],
        "cwd": "/path/to/stock_mcp_server",
        "env": {
          "ALPHA_VANTAGE_API_KEY": "your_api_key_here",
          "MONGODB_URI": "mongodb://localhost:27017",
          "MONGODB_DB_NAME": "stock_data",
          "MONGODB_HOLDINGS_COLLECTION": "holdings",
          "MONGODB_FINANCIALS_COLLECTION": "detailed_financials",
          "MONGODB_KNOWLEDGE_GRAPH_COLLECTION": "stock_knowledge_graph",
          "ALPHA_VANTAGE_BASE_URL": "https://www.alphavantage.co/query",
          "ALPHA_VANTAGE_RATE_LIMIT_MINUTE": "5",
          "ALPHA_VANTAGE_RATE_LIMIT_DAY": "500",
          "ALPHA_VANTAGE_DEFAULT_EXCHANGE": "NSE",
          "MCP_SERVER_NAME": "stock-analysis-mcp",
          "MCP_SERVER_VERSION": "0.1.0",
          "LOG_LEVEL": "INFO",
          "CACHE_ENABLED": "True",
          "CACHE_TTL": "3600"
        }
      }
    }
  },
  "ZeparHyfar/mcp-datetime": {
    "mcpServers": {
      "mcp-datetime": {
        "command": "python",
        "args": [
          "-m",
          "mcp_datetime"
        ],
        "env": {
          "PYTHON": "/path/to/your/python"
        }
      }
    }
  },
  "MCP-Mirror/isaacphi_mcp-language-server": {
    "mcpServers": {
      "language-server": {
        "command": "/full/path/to/your/clone/mcp-language-server/server",
        "args": [
          "--workspace",
          "/path/to/workspace",
          "--lsp",
          "/path/to/language/server"
        ],
        "env": {
          "DEBUG": "1"
        }
      }
    }
  },
  "dazeb/Cline-Memory-Bank": {
    "mcpServers": {
      "memory-bank": {
        "command": "node",
        "args": [
          "/path/to/memory-bank-server/build/index.js"
        ],
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "techspawn/woocommerce-mcp-server": {
    "mcpServers": {
      "woocommerce": {
        "command": "node",
        "args": [
          "path/to/build/index.js"
        ],
        "env": {
          "WORDPRESS_SITE_URL": "https://your-wordpress-site.com",
          "WOOCOMMERCE_CONSUMER_KEY": "your-woocommerce-consumer-key",
          "WOOCOMMERCE_CONSUMER_SECRET": "your-woocommerce-consumer-secret",
          "WORDPRESS_USERNAME": "your-wordpress-username",
          "WORDPRESS_PASSWORD": "your-wordpress-password"
        }
      }
    }
  },
  "AndrewDonelson/go-mcp-server-service": {
    "mcpServers": {
      "notes-server": {
        "command": "./bin/release/<platform>/notes-service",
        "args": []
      }
    }
  },
  "MCP-Mirror/blazickjp_web-browser-mcp-server": {
    "mcpServers": {
      "web-browser-mcp-server": {
        "command": "uv",
        "args": [
          "--directory",
          "/path/to/web-browser-mcp-server",
          "run",
          "web-browser-mcp-server"
        ],
        "env": {
          "REQUEST_TIMEOUT": "30"
        }
      }
    }
  },
  "L-Chris/douban-mcp": {
    "mcpServers": {
      "douban-mcp": {
        "command": "node",
        "args": [
          "{ABSOLUTE PATH TO FILE HERE}/dist/index.js"
        ],
        "env": {
          "COOKIE": "bid=;ck=;dbcl2=;frodotk_db="
        }
      }
    }
  },
  "MCP-Mirror/nahmanmate_code-research-mcp-server": {
    "mcpServers": {
      "code-research": {
        "command": "node",
        "args": [
          "/absolute/path/to/code-research-mcp-server/build/index.js"
        ],
        "env": {
          "GITHUB_TOKEN": "your_github_token"
        },
        "disabled": false,
        "alwaysAllow": []
      }
    }
  },
  "ai-zerolab/mcp-email-server": {
    "mcpServers": {
      "zerolib-email": {
        "command": "docker",
        "args": [
          "run",
          "-it",
          "ghcr.io/ai-zerolab/mcp-email-server:latest"
        ]
      }
    }
  },
  "dailydaniel/logseq-mcp": {
    "mcpServers": {
      "logseq": {
        "command": "uvx",
        "args": [
          "mcp-server-logseq"
        ],
        "env": {
          "LOGSEQ_API_TOKEN": "<YOUR_KEY>",
          "LOGSEQ_API_URL": "http://127.0.0.1:12315"
        }
      }
    }
  },
  "bsmi021/mcp-server-webscan": {
    "mcpServers": {
      "webscan": {
        "command": "node",
        "args": [
          "path/to/mcp-server-webscan/build/index.js"
        ],
        "env": {
          "NODE_ENV": "development",
          "LOG_LEVEL": "info"
        }
      }
    }
  },
  "dcSpark/mcp-server-helius": {
    "mcpServers": {
      "mcp-server-helius": {
        "command": "npx",
        "args": [
          "@dcspark/mcp-server-helius"
        ],
        "env": {
          "HELIUS_API_KEY": "your-helius-api-key"
        }
      }
    }
  },
  "playcanvas/editor-mcp-server": {
    "mcpServers": {
      "playcanvas": {
        "command": "npx",
        "args": [
          "tsx",
          "/path/to/mcp-editor/src/server.ts"
        ],
        "env": {
          "PORT": "52000"
        }
      }
    }
  },
  "GongRzhe/Langflow-DOC-QA-SERVER": {
    "mcpServers": {
      "langflow-doc-qa-server": {
        "command": "node",
        "args": [
          "/path/to/doc-qa-server/build/index.js"
        ],
        "env": {
          "API_ENDPOINT": "http://127.0.0.1:7860/api/v1/run/480ec7b3-29d2-4caa-b03b-e74118f35fac"
        }
      }
    }
  },
  "StevenROyola/ProtoLink": {
    "mcpServers": {
      "mcpagentai": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "-v",
          "/path/to/local/eliza:/app/eliza",
          "--rm",
          "mcpagentai"
        ]
      }
    }
  },
  "MCP-Mirror/imankamyabi_dynamodb-mcp-server": {
    "mcpServers": {
      "dynamodb": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "-e",
          "AWS_ACCESS_KEY_ID",
          "-e",
          "AWS_SECRET_ACCESS_KEY",
          "-e",
          "AWS_REGION",
          "-e",
          "AWS_SESSION_TOKEN",
          "mcp/dynamodb-mcp-server"
        ],
        "env": {
          "AWS_ACCESS_KEY_ID": "your_access_key",
          "AWS_SECRET_ACCESS_KEY": "your_secret_key",
          "AWS_REGION": "your_region",
          "AWS_SESSION_TOKEN": "your_session_token"
        }
      }
    }
  },
  "Props-Labs/fireflies-mcp": {
    "mcpServers": {
      "fireflies": {
        "command": "npx",
        "args": [
          "-y",
          "@props-labs/mcp/fireflies"
        ],
        "env": {
          "FIREFLIES_API_KEY": "<YOUR_API_KEY>"
        }
      }
    }
  },
  "hekmon8/Homeassistant-server-mcp": {
    "mcpServers": {
      "homeassistant": {
        "command": "node",
        "args": [
          "/path/to/homeassistant-mcp/homeassistant-server/build/index.js"
        ],
        "env": {
          "HA_URL": "http://your-homeassistant-url:8123",
          "HA_TOKEN": "your-long-lived-access-token"
        }
      }
    }
  },
  "qiangmzsx/mcp-filesystem-server": {
    "mcpServers": {
      "filesystem": {
        "command": "mcp-filesystem-server",
        "args": [
          "/Users/username/Desktop",
          "/path/to/other/allowed/dir"
        ]
      }
    }
  },
  "emeryray2002/mcp-secops-v3": {
    "mcpServers": {
      "secops-mcp": {
        "command": "/path/to/your/uv",
        "args": [
          "--directory",
          "/path/to/your/mcp-secops-v3",
          "run",
          "secops_mcp.py"
        ],
        "env": {
          "CHRONICLE_PROJECT_ID": "your-google-cloud-project-id",
          "CHRONICLE_CUSTOMER_ID": "your-chronicle-customer-id",
          "CHRONICLE_REGION": "us"
        }
      }
    }
  },
  "amaboh/google-sheets-mcp-server": {
    "mcpServers": {
      "google_sheets": {
        "command": "/path/to/your/.venv/bin/python",
        "args": [
          "/path/to/your/google_sheets.py",
          "--credentials-path",
          "/Users/yourusername/.config/google_sheets_mcp/google-sheets-mcp.json",
          "--log-level",
          "DEBUG"
        ]
      }
    }
  },
  "motherduckdb/mcp-server-motherduck": {
    "mcpServers": {
      "mcp-server-motherduck": {
        "command": "uvx",
        "args": [
          "mcp-server-motherduck",
          "--db-path",
          "md:",
          "--motherduck-token",
          "<YOUR_MOTHERDUCK_TOKEN_HERE>"
        ]
      }
    }
  },
  "recursechat/mcp-server-apple-shortcuts": {
    "mcpServers": {
      "apple-shortcuts": {
        "command": "npx",
        "args": [
          "-y",
          "mcp-server-apple-shortcuts"
        ]
      }
    }
  },
  "sunhao-java/mcp-gitee": {
    "mcpServers": {
      "sequentialthinking": {
        "command": "docker",
        "args": [
          "run",
          "--rm",
          "-i",
          "mcp/sequentialthinking"
        ]
      }
    }
  },
  "MCP-Mirror/alexander-zuev_supabase-mcp-server": {
    "mcpServers": {
      "supabase": {
        "command": "/Users/az/.local/bin/uv",
        "args": [
          "--directory",
          "/Users/username/cursor/supabase-mcp-server",
          "run",
          "main.py"
        ],
        "env": {
          "SUPABASE_PROJECT_REF": "127.0.0.1:54322",
          "SUPABASE_DB_PASSWORD": "postgres"
        }
      }
    }
  },
  "cyanheads/git-mcp-server": {
    "mcpServers": {
      "git": {
        "command": "git-mcp-server",
        "args": [],
        "env": {},
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "turinhub/cf-mcp-server": {
    "mcpServers": {
      "generateImage": {
        "command": "/Users/zhangxudong/Gits/turinhub/cf-mcp-server/mcp-image-generation/node_modules/.bin/workers-mcp",
        "args": [
          "run",
          "generateImage",
          "https://mcp-image-generation.turinhub.com",
          "/Users/zhangxudong/Gits/turinhub/cf-mcp-server/mcp-image-generation"
        ],
        "env": {}
      }
    }
  },
  "aldrin-labs/solana-mcp-server": {
    "mcpServers": {
      "solana": {
        "command": "cargo",
        "args": [
          "run"
        ],
        "cwd": "/path/to/solana-mcp-server",
        "env": {
          "SOLANA_RPC_URL": "https://api.mainnet-beta.solana.com"
        }
      }
    }
  },
  "mahawi1992/mcp-documentation-server": {
    "mcpServers": {
      "documentation": {
        "command": "npx",
        "args": [
          "-y",
          "mcp-documentation-server"
        ],
        "env": {
          "BRAVE_API_KEY": "<YOUR_BRAVE_API_KEY>"
        }
      }
    }
  },
  "valyu-network/valyu-mcp": {
    "mcpServers": {
      "valyu-mcp": {
        "command": "/ABSOLUTE/PATH/TO/.venv/bin/python",
        "args": [
          "-u",
          "/ABSOLUTE/PATH/TO/valyu-mcp.py"
        ],
        "env": {
          "VALYU_API_KEY": "your-api-key-here"
        }
      }
    }
  },
  "MCP-Mirror/DynamicEndpoints_huntress-mcp-server": {
    "mcpServers": {
      "huntress": {
        "command": "node",
        "args": [
          "path/to/huntress-server/build/index.js"
        ],
        "env": {
          "HUNTRESS_API_KEY": "your_api_key_here",
          "HUNTRESS_API_SECRET": "your_api_secret_here"
        }
      }
    }
  },
  "MarkusPfundstein/mcp-gsuite": {
    "mcpServers": {
      "mcp-gsuite": {
        "command": "uvx",
        "args": [
          "mcp-gsuite",
          "--accounts-file",
          "/path/to/custom/.accounts.json",
          "--credentials-dir",
          "/path/to/custom/credentials"
        ]
      }
    }
  },
  "JayArrowz/mcp-xpath": {
    "mcpServers": {
      "xpath": {
        "command": "node",
        "args": [
          "/path/to/mcp-xpath/dist/index.js"
        ]
      }
    }
  },
  "MCP-Mirror/kimtaeyoon83_mcp-server-youtube-transcript": {
    "mcpServers": {
      "youtube-transcript": {
        "command": "npx",
        "args": [
          "-y",
          "@kimtaeyoon83/mcp-server-youtube-transcript"
        ]
      }
    }
  },
  "piddlingtuna/tfnsw-realtime-alerts-mcp-server": {
    "mcpServers": {
      "tfnsw-realtime-alerts": {
        "command": "npx",
        "args": [
          "-y",
          "tfnsw-realtime-alerts-mcp-server"
        ],
        "env": {
          "NSW_TRANSPORT_API_KEY": "your_api_key_here"
        }
      }
    }
  },
  "OnStartups/agentai-mcp-server": {
    "mcpServers": {
      "agentai": {
        "command": "npx",
        "args": [
          "-y",
          "@agentai/mcp-server"
        ],
        "env": {
          "API_TOKEN": "YOUR_API_TOKEN_HERE"
        }
      }
    }
  },
  "noboru-i/nature-remo-mcp-server": {
    "mcpServers": {
      "github": {
        "command": "npx",
        "args": [
          "-y",
          "noboru-i/nature-remo-mcp-server"
        ],
        "env": {
          "ACCESS_TOKEN": "<YOUR_TOKEN>"
        }
      }
    }
  },
  "nicozumarraga/open-mcp": {
    "mcpServers": {
      "kanye": {
        "command": "npx",
        "args": [
          "-y",
          "kanye-mcp"
        ]
      }
    }
  },
  "MCP-Mirror/descope-sample-apps_descope-mcp-server": {
    "mcpServers": {
      "descope": {
        "command": "node",
        "args": [
          "/path/to/descope-mcp-server/build/index.js"
        ],
        "env": {
          "DESCOPE_PROJECT_ID": "your-descope-project-id-here",
          "DESCOPE_MANAGEMENT_KEY": "your-descope-management-key-here"
        }
      }
    }
  },
  "PoliTwit1984/github-meta-mcp-server": {
    "mcpServers": {
      "github": {
        "command": "node",
        "args": [
          "path/to/github-server/build/index.js"
        ],
        "env": {
          "GITHUB_TOKEN": "your-github-token"
        }
      }
    }
  },
  "fakepixels/base-mcp-server": {
    "mcpServers": {
      "base": {
        "command": "npx",
        "args": [
          "-y",
          "base-network-mcp-server"
        ],
        "env": {
          "BASE_PROVIDER_URL": "https://api.developer.coinbase.com/rpc/v1/base/YOUR_API_KEY",
          "WALLET_PRIVATE_KEY": "your_private_key_here"
        },
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "tejpalvirk/student": {
    "mcpServers": {
      "student": {
        "command": "docker",
        "args": [
          "run",
          "--rm",
          "-i",
          "mcp/student"
        ]
      }
    }
  },
  "jason-tan-swe/railway-mcp": {
    "mcpServers": {
      "railway": {
        "command": "npx",
        "args": [
          "-y",
          "@jasontanswe/railway-mcp"
        ],
        "env": {
          "RAILWAY_API_TOKEN": "your-railway-api-token-here"
        }
      }
    }
  },
  "satellaite/sat-mcp-server": {
    "mcpServers": {
      "satellaite": {
        "command": "npx",
        "args": [
          "-y",
          "@satellaite/mcp-server"
        ],
        "env": {
          "API_BASE_URL": "<API_BASE_URL>"
        }
      }
    }
  },
  "URDJMK/serpapi-mcp-server": {
    "mcpServers": {
      "serpapi-google-search": {
        "type": "stdio",
        "command": "path/to/python",
        "args": [
          "path/to/serpapi-mcp-server/src/serpapi_google_search.py"
        ],
        "env": {
          "PYTHONPATH": "path/to/site-packages"
        }
      },
      "serpapi-youtube-search": {
        "type": "stdio",
        "command": "path/to/python",
        "args": [
          "path/to/serpapi-mcp-server/src/serpapi_youtube_search.py"
        ],
        "env": {
          "PYTHONPATH": "path/to/site-packages"
        }
      },
      "serpapi-google-news": {
        "type": "stdio",
        "command": "path/to/python",
        "args": [
          "path/to/serpapi-mcp-server/src/serpapi_google_news.py"
        ],
        "env": {
          "PYTHONPATH": "path/to/site-packages"
        }
      },
      "serpapi-google-trend": {
        "type": "stdio",
        "command": "path/to/python",
        "args": [
          "path/to/serpapi-mcp-server/src/serpapi_google_trend.py"
        ],
        "env": {
          "PYTHONPATH": "path/to/site-packages"
        }
      },
      "serpapi-google-scholar": {
        "type": "stdio",
        "command": "path/to/python",
        "args": [
          "path/to/serpapi-mcp-server/src/serpapi_google_scholar.py"
        ],
        "env": {
          "PYTHONPATH": "path/to/site-packages"
        }
      },
      "serpapi-google-finance": {
        "type": "stdio",
        "command": "path/to/python",
        "args": [
          "path/to/serpapi-mcp-server/src/serpapi_google_finance.py"
        ],
        "env": {
          "PYTHONPATH": "path/to/site-packages"
        }
      },
      "serpapi-google-maps": {
        "type": "stdio",
        "command": "path/to/python",
        "args": [
          "path/to/serpapi-mcp-server/src/serpapi_google_maps.py"
        ],
        "env": {
          "PYTHONPATH": "path/to/site-packages"
        }
      },
      "serpapi-google-images": {
        "type": "stdio",
        "command": "path/to/python",
        "args": [
          "path/to/serpapi-mcp-server/src/serpapi_google_images.py"
        ],
        "env": {
          "PYTHONPATH": "path/to/site-packages"
        }
      },
      "youtube-transcript": {
        "type": "stdio",
        "command": "path/to/python",
        "args": [
          "path/to/serpapi-mcp-server/src/youtube_transcript.py"
        ],
        "env": {
          "PYTHONPATH": "path/to/site-packages"
        }
      }
    }
  },
  "toolhouse-community/mcp-server-toolhouse": {
    "mcpServers": {
      "mcp-server-toolhouse": {
        "command": "uv",
        "args": [
          "--directory",
          "/path/to/this/folder/mcp-server-toolhouse",
          "run",
          "mcp_server_toolhouse"
        ],
        "env": {
          "TOOLHOUSE_API_KEY": "your_toolhouse_api_key",
          "TOOLHOUSE_BUNDLE_NAME": "a_bundle_name"
        }
      }
    }
  },
  "sparfenyuk/mcp-proxy": {
    "mcpServers": {
      "mcp-proxy": {
        "command": "mcp-proxy",
        "args": [
          "http://example.io/sse"
        ],
        "env": {
          "API_ACCESS_TOKEN": "access-token"
        }
      }
    }
  },
  "theronic/modex": {
    "mcpServers": {
      "modex": {
        "command": "java",
        "args": [
          "-jar",
          "/Users/your-username/code/modex/target/modex-mcp-0.2.2.jar"
        ]
      }
    },
    "globalShortcut": ""
  },
  "bajoski34/mcp-flutterwave": {
    "mcpServers": {
      "flutterwave": {
        "command": "npx",
        "args": [
          "-y",
          "mcp-flutterwave",
          "--tools=checkout.create",
          "--secret-key=FLW_SECRET_KEY"
        ]
      }
    }
  },
  "zhangzhongnan928/mcp-evm-signer": {
    "mcpServers": {
      "evm-signer": {
        "command": "node",
        "args": [
          "/path/to/mcp-evm-signer/build/index.js"
        ],
        "env": {
          "INFURA_API_KEY": "your_infura_api_key_here",
          "DEFAULT_NETWORK": "sepolia",
          "ENCRYPT_KEYS": "true",
          "KEY_PASSWORD": "your_secure_password_here"
        }
      }
    }
  },
  "ihrpr/mcp-server-jupyter": {
    "mcpServers": {
      "Jupyter-notebook-manager": {
        "command": "uv",
        "args": [
          "run",
          "--directory",
          "/Users/inna/mcp-server-jupyter/src/mcp_server_jupyter",
          "mcp-server-jupyter"
        ],
        "env": {
          "UV_PROJECT_ENVIRONMENT": "/path/to/venv_for_jupyter/.venv"
        }
      }
    }
  },
  "BRO3886/mcp-memory-custom": {
    "mcpServers": {
      "memory": {
        "command": "node",
        "args": [
          "/path/to/mcp-memory-custom/dist/index.js"
        ]
      }
    }
  },
  "Braffolk/mcp-summarization-functions": {
    "mcpServers": {
      "MUST_USE_summarization": {
        "command": "node",
        "args": [
          "path/to/summarization-functions/build/index.js"
        ],
        "env": {
          "PROVIDER": "ANTHROPIC",
          "API_KEY": "your-api-key",
          "MODEL_ID": "claude-3-5-sonnet-20241022",
          "MCP_WORKING_DIR": "default_working_directory"
        }
      }
    }
  },
  "elizabethtrykin/oura-mcp": {
    "mcpServers": {
      "oura": {
        "command": "node",
        "args": [
          "/absolute/path/to/oura-mcp/build/index.js"
        ],
        "env": {
          "OURA_PERSONAL_ACCESS_TOKEN": "your_token"
        }
      }
    }
  },
  "mikecreighton/mikecreighton-dot-com-content-mcp": {
    "mcpServers": {
      "Mike Creighton Consulting's Website Content": {
        "command": "uv",
        "args": [
          "--directory",
          "/absolute/path/to/mikecreighton-dot-com-content-mcp",
          "run",
          "server.py"
        ]
      }
    }
  },
  "gentoro-GT/mcp-nodejs-server": {
    "mcpServers": {
      "gentoro": {
        "command": "npx",
        "args": [
          "-y",
          "@gentoro/mcp-nodejs-server"
        ],
        "env": {
          "GENTORO_KEY": "<your api key>/<your bridge uid>/<url where gentoro is hosted>"
        }
      }
    }
  },
  "blake365/macrostrat-mcp": {
    "mcpServers": {
      "macrostrat": {
        "command": "node",
        "args": [
          "/Full/Route/to/Folder/macrostrat/build/index.js"
        ]
      }
    }
  },
  "nervouslimit/code-sandbox-mcp": {
    "mcpServers": {
      "code-sandbox-mcp": {
        "command": "C:\\path\\to\\code-sandbox-mcp.exe",
        "args": [],
        "env": {}
      }
    }
  },
  "tokenizin-agency/mcp-npx-fetch": {
    "mcpServers": {
      "fetch": {
        "command": "npx",
        "args": [
          "-y",
          "@tokenizin/mcp-npx-fetch"
        ],
        "env": {}
      }
    }
  },
  "msaelices/whatsapp-mcp-server": {
    "mcpServers": {
      "whatsapp": {
        "command": "docker",
        "args": [
          "run",
          "--rm",
          "-i",
          "-e",
          "GREENAPI_ID_INSTANCE=your_instance_id",
          "-e",
          "GREENAPI_API_TOKEN=your_api_token",
          "whatsapp-mcp-server"
        ]
      }
    }
  },
  "kaznak/alertmanager-mcp": {
    "mcpServers": {
      "alertmanager": {
        "command": "docker",
        "args": [
          "run",
          "--rm",
          "-i",
          "--network=host",
          "-e",
          "ALERTMANAGER_URL=http://your-alertmanager-url:9093",
          "ghcr.io/kaznak/alertmanager-mcp:latest"
        ],
        "env": {}
      }
    }
  },
  "Hawstein/mcp-server-reddit": {
    "mcpServers": {
      "reddit": {
        "command": "python",
        "args": [
          "-m",
          "mcp_server_reddit"
        ]
      }
    }
  },
  "nickbaumann98/release-notes-server": {
    "mcpServers": {
      "release-notes": {
        "command": "node",
        "args": [
          "/path/to/release-notes-server/build/index.js"
        ],
        "env": {
          "GITHUB_TOKEN": "your-github-token"
        }
      }
    }
  },
  "noahgsolomon/pumpfun-mcp-server": {
    "mcpServers": {
      "pumpfun": {
        "command": "node",
        "args": [
          "/Users/noahsolomon/Desktop/pumpfun-mcp/build/index.js"
        ],
        "env": {
          "HELIUS_RPC_URL": "https://your-helius-rpc-url.com"
        }
      }
    }
  },
  "1mcp-app/agent": {
    "mcpServers": {
      "mcp-server-fetch": {
        "command": "uvx",
        "args": [
          "mcp-server-fetch"
        ],
        "disabled": false
      },
      "server-memory": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-memory"
        ],
        "disabled": false
      }
    }
  },
  "aallsbury/qb-time-mcp-server": {
    "globalShortcut": "Ctrl+Q",
    "mcpServers": {
      "qb-time-tools": {
        "command": "python",
        "args": [
          "./qb-time-mcp-server/main.py"
        ],
        "env": {
          "QB_TIME_ACCESS_TOKEN": "your_quickbooks_time_access_token_here"
        }
      }
    }
  },
  "MCP-Mirror/AgentWong_iac-memory-mcp-server-project": {
    "mcpServers": {
      "iac-memory": {
        "command": "uvx",
        "args": [
          "--from",
          "git+https://github.com/AgentWong/iac-memory-mcp-server.git",
          "python",
          "-m",
          "iac_memory_mcp_server"
        ],
        "env": {
          "DATABASE_URL": "sqlite:////home/herman/iac.db"
        }
      }
    }
  },
  "2b3pro/roam-research-mcp": {
    "mcpServers": {
      "roam-research": {
        "command": "node",
        "args": [
          "/path/to/roam-research-mcp/build/index.js"
        ],
        "env": {
          "ROAM_API_TOKEN": "your-api-token",
          "ROAM_GRAPH_NAME": "your-graph-name",
          "MEMORIES_TAG": "#[[LLM/Memories]]"
        }
      }
    }
  },
  "sionic-ai/serverless-rag-mcp-server": {
    "mcpServers": {
      "storm": {
        "command": "sh",
        "args": [
          "/Users/sigridjineth/Desktop/work/storm-mcp-server/scripts/run.sh"
        ]
      }
    }
  },
  "rtuin/mcp-mermaid-validator": {
    "mcpServers": {
      "mermaid-validator": {
        "command": "npx",
        "args": [
          "-y",
          "@rtuin/mcp-mermaid-validator"
        ]
      }
    }
  },
  "fireproof-storage/mcp-database-server": {
    "mcpServers": {
      "fireproof": {
        "command": "/path/to/fireproof-mcp/build/index.js"
      }
    }
  },
  "androidStern/ableton-vibe": {
    "mcpServers": {
      "ableton-vibe": {
        "command": "node",
        "args": [
          "<path-to-repo>/ableton-vibe/ableton-mcp.js"
        ]
      }
    }
  },
  "dandeliongold/mcp-time": {
    "mcpServers": {
      "time": {
        "command": "npx",
        "args": [
          "@dandeliongold/mcp-time"
        ]
      }
    }
  },
  "fenxer/steam-review-mcp": {
    "mcpServers": {
      "steam-review-mcp": {
        "command": "npx",
        "args": [
          "steam-review-mcp"
        ]
      }
    }
  },
  "kevinwatt/yt-dlp-mcp": {
    "mcpServers": {
      "yt-dlp": {
        "command": "npx",
        "args": [
          "-y",
          "@kevinwatt/yt-dlp-mcp"
        ]
      }
    }
  },
  "cremich/promptz-mcp": {
    "mcpServers": {
      "promptz.dev": {
        "command": "npx",
        "args": [
          "-y",
          "@promptz/mcp"
        ],
        "env": {
          "PROMPTZ_API_URL": "your-api-url-from-promptz.dev",
          "PROMPTZ_API_KEY": "your-api-key-from-promptz.dev"
        },
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "huyouare/manus-mcp": {
    "mcpServers": {
      "manus-mcp": {
        "command": "uv",
        "args": [
          "--directory",
          "/ABSOLUTE/PATH/TO/manus-mcp",
          "run",
          "mcp_server.py"
        ]
      }
    }
  },
  "Zhwt/go-mcp-mysql": {
    "mcpServers": {
      "mysql": {
        "command": "C:\\Users\\<username>\\Downloads\\go-mcp-mysql.exe",
        "args": []
      }
    }
  },
  "maoxiaoke/create-mcp-server": {
    "mcpServers": {
      "mediaProcessor": {
        "command": "npx",
        "args": [
          "-y",
          "create-mcp-server@latest"
        ]
      }
    }
  },
  "MaxWeeden/mcp-dnsdumpster": {
    "mcpServers": {
      "dnsdumpster": {
        "command": "uvx",
        "args": [
          "mcp-dnsdumpster"
        ],
        "env": {
          "DNSDUMPSTER_API_KEY": "your_api_key_here"
        }
      }
    }
  },
  "biswapm/MCP-SSE1": {
    "mcpServers": {
      "aws-kb-retrieval": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-aws-kb-retrieval"
        ],
        "env": {
          "AWS_ACCESS_KEY_ID": "YOUR_ACCESS_KEY_HERE",
          "AWS_SECRET_ACCESS_KEY": "YOUR_SECRET_ACCESS_KEY_HERE",
          "AWS_REGION": "YOUR_AWS_REGION_HERE"
        }
      }
    }
  },
  "MCP-Mirror/tatn_mcp-server-fetch-typescript": {
    "mcpServers": {
      "mcp-server-fetch-typescript": {
        "command": "node",
        "args": [
          "/path/to/mcp-server-fetch-typescript/build/index.js"
        ]
      }
    }
  },
  "RamXX/mcp-tavily": {
    "mcpServers": {
      "tavily": {
        "command": "python",
        "args": [
          "-m",
          "mcp_server_tavily"
        ]
      },
      "env": {
        "TAVILY_API_KEY": "your_api_key_here"
      }
    }
  },
  "cline/linear-mcp": {
    "mcpServers": {
      "linear": {
        "command": "node",
        "args": [
          "/path/to/linear-mcp/build/index.js"
        ],
        "env": {
          "LINEAR_ACCESS_TOKEN": "your_personal_access_token"
        },
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "riza-io/mcp-go": {
    "mcpServers": {
      "fs": {
        "command": "/path/to/mcp-go-fs",
        "args": [
          "/path/to/root/directory"
        ]
      }
    }
  },
  "aashari/mcp-atlassian-jira": {
    "mcpServers": {
      "aashari/mcp-atlassian-jira": {
        "command": "npx",
        "args": [
          "-y",
          "aashari/mcp-atlassian-jira"
        ]
      }
    }
  },
  "MCP-Mirror/h-yanagawa_research-mcp-server": {
    "mcpServers": {
      "Research MCP Server": {
        "command": "uv",
        "args": [
          "run",
          "--with",
          "mcp[cli]",
          "--with",
          "notion-client",
          "--with",
          "pydantic",
          "mcp",
          "run",
          "/path/to/research-mcp-server/server.py"
        ]
      }
    }
  },
  "QuantGeekDev/mongo-mcp": {
    "mcpServers": {
      "mongodb": {
        "command": "node",
        "args": [
          "dist/index.js",
          "mongodb://root:example@localhost:27017/test?authSource=admin"
        ]
      }
    }
  },
  "dcSpark/mcp-server-jupiter": {
    "mcpServers": {
      "mcp-server-jupiter": {
        "command": "npx",
        "args": [
          "@mcp-dockmaster/mcp-server-jupiter"
        ]
      }
    }
  },
  "MCP-Mirror/JANHMS_needle-mcp-server": {
    "mcpServers": {
      "needle_mcp": {
        "command": "uv",
        "args": [
          "--directory",
          "/path/to/needle-mcp",
          "run",
          "needle-mcp"
        ],
        "env": {
          "NEEDLE_API_KEY": "your_needle_api_key"
        }
      }
    }
  },
  "ServiceStack/servicestack-mcp": {
    "mcpServers": {
      "@servicestack/mcp": {
        "command": "/path/to/@servicestack/mcp/build/index.js"
      }
    }
  },
  "stefw/boamp-server": {
    "mcpServers": {
      "boamp-server": {
        "command": "/path/to/boamp-server/build/index.js"
      }
    }
  },
  "Bigsy/Clojars-MCP-Server": {
    "mcpServers": {
      "clojars-deps-server": {
        "command": "node",
        "args": [
          "/path/to/clojars-deps-server/build/index.js"
        ]
      }
    }
  },
  "MCP-Mirror/designcomputer_mysql_mcp_server": {
    "mcpServers": {
      "mysql": {
        "command": "uv",
        "args": [
          "--directory",
          "path/to/mysql_mcp_server",
          "run",
          "mysql_mcp_server"
        ],
        "env": {
          "MYSQL_HOST": "localhost",
          "MYSQL_USER": "your_username",
          "MYSQL_PASSWORD": "your_password",
          "MYSQL_DATABASE": "your_database"
        }
      }
    }
  },
  "peterparker57/project-hub-mcp-server": {
    "mcpServers": {
      "project-hub": {
        "command": "node",
        "args": [
          "path/to/project-hub-mcp-server/dist/index.js"
        ],
        "env": {
          "NODE_ENV": "development",
          "DEFAULT_PRIVATE": "true",
          "DEFAULT_OWNER": "your-github-username",
          "GITHUB_TOKEN": "your-github-token",
          "GIT_PATH": "C:\\Program Files\\Git\\bin\\git.exe"
        },
        "alwaysAllow": [
          "list_projects",
          "find_project",
          "get_pending_changes",
          "get_local_commit_history",
          "list_local_branches"
        ]
      }
    }
  },
  "MCP-Mirror/c0h1b4_mssql-mcp-server": {
    "mcpServers": {
      "mssql": {
        "command": "mssql-mcp-server",
        "env": {
          "MSSQL_CONNECTION_STRING": "Server=localhost;Database=master;User Id=sa;Password=yourpassword;",
          "MSSQL_HOST": "localhost",
          "MSSQL_PORT": "1433",
          "MSSQL_DATABASE": "master",
          "MSSQL_USER": "sa",
          "MSSQL_PASSWORD": "yourpassword",
          "MSSQL_ENCRYPT": "false",
          "MSSQL_TRUST_SERVER_CERTIFICATE": "true"
        }
      }
    }
  },
  "lalanikarim/systemctl-mcp-server": {
    "mcpServers": {
      "perplexity-ask": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-perplexity-ask"
        ],
        "env": {
          "PERPLEXITY_API_KEY": "YOUR_API_KEY_HERE"
        }
      }
    }
  },
  "jalateras/weather": {
    "mcpServers": {
      "weather": {
        "command": "python",
        "args": [
          "-m",
          "main"
        ],
        "cwd": "/path/to/weather"
      }
    }
  },
  "reminia/zendesk-mcp-server": {
    "mcpServers": {
      "zendesk": {
        "command": "uv",
        "args": [
          "--directory",
          "/path/to/zendesk-mcp-server",
          "run",
          "zendesk"
        ]
      }
    }
  },
  "BurtTheCoder/mcp-dnstwist": {
    "mcpServers": {
      "dnstwist": {
        "command": "node",
        "args": [
          "/absolute/path/to/mcp-dnstwist/build/index.js"
        ]
      }
    }
  },
  "brianellin/bsky-mcp-server": {
    "mcpServers": {
      "bluesky": {
        "command": "node",
        "args": [
          "/path/to/bsky-mcp-server/build/src/index.js"
        ],
        "env": {
          "BLUESKY_IDENTIFIER": "your-bluesky-handle",
          "BLUESKY_APP_PASSWORD": "your-app-password",
          "BLUESKY_SERVICE_URL": "https://bsky.social"
        }
      }
    }
  },
  "hellokaton/unsplash-mcp-server": {
    "mcpServers": {
      "unsplash": {
        "command": "uv",
        "args": [
          "run",
          "--with",
          "fastmcp",
          "fastmcp",
          "run",
          "./server.py"
        ],
        "env": {
          "UNSPLASH_ACCESS_KEY": "${YOUR_ACCESS_KEY}"
        }
      }
    }
  },
  "PhialsBasement/mcp-github-server-plus": {
    "mcpServers": {
      "github": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-github"
        ],
        "env": {
          "GITHUB_PERSONAL_ACCESS_TOKEN": "<YOUR_TOKEN>"
        }
      }
    }
  },
  "MCP-Mirror/phil65_mcp-server-llmling": {
    "mcpServers": {
      "llmling": {
        "command": "uvx",
        "args": [
          "mcp-server-llmling",
          "start",
          "path/to/your/config.yml"
        ],
        "env": {}
      }
    }
  },
  "zilliztech/mcp-server-milvus": {
    "mcpServers": {
      "milvus": {
        "command": "/PATH/TO/uv",
        "args": [
          "--directory",
          "/path/to/mcp-server-milvus/src/mcp_server_milvus",
          "run",
          "server.",
          "--milvus-uri",
          "http://127.0.0.1:19530"
        ]
      }
    }
  },
  "cheerlights/cheerlights-mcp": {
    "mcpServers": {
      "cheerlights": {
        "command": "python",
        "args": [
          "path/to/server.py"
        ]
      }
    }
  },
  "stefans71/wordpress-mcp-server": {
    "mcpServers": {
      "wordpress": {
        "command": "node",
        "args": [
          "path/to/wordpress-server/build/index.js"
        ]
      }
    }
  },
  "seanivore/the-pensieve": {
    "mcpServers": {
      "The Pensieve": {
        "command": "/path/to/The Pensieve/build/index.js"
      }
    }
  },
  "cyanheads/obsidian-mcp-server": {
    "mcpServers": {
      "obsidian-mcp-server": {
        "command": "node",
        "args": [
          "/path/to/obsidian-mcp-server/build/index.js"
        ],
        "env": {
          "OBSIDIAN_API_KEY": "your_api_key_here",
          "VERIFY_SSL": "false",
          "OBSIDIAN_PROTOCOL": "https",
          "OBSIDIAN_HOST": "127.0.0.1",
          "OBSIDIAN_PORT": "27124",
          "REQUEST_TIMEOUT": "5000",
          "MAX_CONTENT_LENGTH": "52428800",
          "MAX_BODY_LENGTH": "52428800",
          "RATE_LIMIT_WINDOW_MS": "900000",
          "RATE_LIMIT_MAX_REQUESTS": "200",
          "TOOL_TIMEOUT_MS": "60000"
        }
      }
    }
  },
  "csonigo/datagouv-mcp-server": {
    "mcpServers": {
      "data-gouv": {
        "url": "http://localhost:3001/sse"
      }
    }
  },
  "MCP-Mirror/sunsetcoder_flightradar24-mcp-server": {
    "mcpServers": {
      "flightradar24-server": {
        "command": "node",
        "args": [
          "/Users/<username>/<FULL_PATH...>/flightradar24-mcp-server/dist/index.js"
        ],
        "env": {
          "FR24_API_KEY": "your_api_key_here",
          "FR24_API_URL": "https://fr24api.flightradar24.com"
        }
      }
    }
  },
  "langchain-ai/langchainjs-mcp-adapters": {
    "issues": [
      {
        "code": "invalid_string",
        "validation": "url",
        "path": [
          "mcpServers",
          "weather",
          "url"
        ],
        "message": "Invalid url"
      }
    ],
    "name": "ZodError"
  },
  "GongRzhe/Calendar-Autoauth-MCP-Server": {
    "mcpServers": {
      "calendar": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "-v",
          "mcp-calendar:/calendar-server",
          "-e",
          "CALENDAR_CREDENTIALS_PATH=/calendar-server/credentials.json",
          "mcp/calendar"
        ]
      }
    }
  },
  "RegiByte/todo-list-mcp": {
    "mcpServers": {
      "todo": {
        "command": "node",
        "args": [
          "/absolute/path/to/todo-list-mcp/dist/index.js"
        ]
      }
    }
  },
  "AdamikHQ/adamik-mcp-server": {
    "mcpServers": {
      "adamik-mcp-server": {
        "command": "node",
        "args": [
          "/Users/YourUsername/GitHub/adamik-mcp-server/build/index.js"
        ]
      }
    }
  },
  "liaokongVFX/MCP-Chinese-Getting-Started-Guide": {
    "mcpServers": {
      "web-search": {
        "url": "https://mcp-test-whhergsbso.cn-hangzhou.fcapp.run/sse"
      }
    }
  },
  "arathald/mcp-editor": {
    "mcpServers": "... your existing servers ...",
    "mcp-editor": {
      "command": "node",
      "args": [
        "/absolute/path/to/mcp-editor/dist/server.js"
      ]
    }
  },
  "MCP-Mirror/HeatherFlux_github-issue-mcp-server": {
    "mcpServers": {
      "github-server": {
        "command": "/path/to/github-server/build/index.js"
      }
    }
  },
  "psaboia/mcp-server-pad": {
    "mcpServers": {
      "pad": {
        "command": "<path-to-uv>",
        "args": [
          "--directory",
          "<path-to-repository>",
          "run",
          "main.py"
        ],
        "env": {
          "FILESYSTEM_STORAGE": "<path-to-storage-directory>"
        }
      }
    }
  },
  "Bob-lance/grok-mcp": {
    "mcpServers": {
      "grok-mcp": {
        "command": "node",
        "args": [
          "/path/to/grok-mcp/build/index.js"
        ],
        "env": {
          "XAI_API_KEY": "your-grok-api-key"
        },
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "MCP-Mirror/Bigsy_maven-mcp-server": {
    "mcpServers": {
      "maven-deps-server": {
        "command": "node",
        "args": [
          "/path/to/maven-deps-server/build/index.js"
        ]
      }
    }
  },
  "Beyond-Network-AI/beyond-mcp-server": {
    "mcpServers": {
      "beyond-social": {
        "command": "/usr/local/bin/node",
        "args": [
          "/full/path/to/beyond-mcp-server/dist/index.js",
          "--stdio"
        ],
        "env": {
          "NEYNAR_API_KEY": "YOUR_API_KEY_HERE",
          "ENABLE_FARCASTER": "true",
          "ENABLE_TWITTER": "false"
        }
      }
    }
  },
  "kukapay/uniswap-poolspy-mcp": {
    "mcpServers": {
      "Uniswap-PoolSpy": {
        "command": "uv",
        "args": [
          "--directory",
          "path/to/uniswap-poolspy-mcp",
          "run",
          "main.py"
        ],
        "env": {
          "THEGRAPH_API_KEY": "your api key from The Graph"
        }
      }
    }
  },
  "minhalvp/android-mcp-server": {
    "mcpServers": {
      "android": {
        "command": "path/to/uv",
        "args": [
          "--directory",
          "path/to/android-mcp-server",
          "run",
          "server.py"
        ]
      }
    }
  },
  "vrtejus/pymol-mcp": {
    "mcpServers": {
      "pymol": {
        "command": "/Users/username/pymol-mcp/venv/bin/python",
        "args": [
          "/Users/username/pymol-mcp/pymol_mcp_server.py"
        ]
      }
    }
  },
  "ConechoAI/openai-websearch-mcp": {
    "mcpServers": {
      "openai-websearch-mcp": {
        "command": "python",
        "args": [
          "-m",
          "openai_websearch_mcp"
        ],
        "env": {
          "OPENAI_API_KEY": "your-api-key-here"
        }
      }
    }
  },
  "newideas99/RAT-retrieval-augmented-thinking-MCP": {
    "mcpServers": {
      "rat": {
        "command": "/path/to/node",
        "args": [
          "/path/to/rat-mcp-server/build/index.js"
        ],
        "env": {
          "DEEPSEEK_API_KEY": "your_key_here",
          "OPENROUTER_API_KEY": "your_key_here",
          "ANTHROPIC_API_KEY": "your_key_here",
          "DEFAULT_MODEL": "claude-3-5-sonnet-20241022",
          "OPENROUTER_MODEL": "openai/gpt-4"
        },
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "dceluis/tasker-mcp": {
    "mcpServers": {
      "tasker": {
        "command": "/home/luis/tasker-mcp/dist/tasker-mcp-server-cli-x86_64",
        "args": [
          "--tools",
          "/home/luis/tasker-mcp/dist/toolDescriptions.json",
          "--tasker-host",
          "192.168.1.123",
          "--tasker-api-key",
          "tk_...",
          "--mode",
          "stdio"
        ]
      }
    }
  },
  "ttjslbz001/akshare_mcp_server": {
    "mcpServers": {
      "akshare-mcp": {
        "command": "uv",
        "args": [
          "--directory",
          "/path/to/akshare_mcp_server",
          "run",
          "akshare-mcp"
        ],
        "env": {
          "AKSHARE_API_KEY": "<your_api_key_if_needed>"
        }
      }
    }
  },
  "MCP-Mirror/mixelpixx_GoogleSearch_McpServer": {
    "mcpServers": {
      "google-search": {
        "command": "npm",
        "args": [
          "run",
          "start:all"
        ],
        "cwd": "/path/to/google-search-server"
      }
    }
  },
  "qpd-v/mcp-communicator-telegram": {
    "mcpServers": {
      "mcp-communicator-telegram": {
        "command": "node",
        "args": [
          "path/to/mcp-communicator-telegram/build/index.js"
        ],
        "env": {
          "TELEGRAM_TOKEN": "your_bot_token_here",
          "CHAT_ID": "your_chat_id_here"
        }
      }
    }
  },
  "vincentf305/mcp-server-deepseek": {
    "mcpServers": {
      "deepseek-server": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "-e",
          "DEEPSEEK_API_KEY",
          "mcp_server_deepseek"
        ],
        "env": {
          "DEEPSEEK_API_KEY": "your_api_key_here"
        }
      }
    }
  },
  "yoko19191/bocha-ai-mcp-server": {
    "mcpServers": {
      "bocha-ai-search": {
        "command": "node",
        "args": [
          "/ABSOLUTE/PATH/bocha-ai-mcp-server/build/index.js"
        ],
        "env": {
          "BOCHA_API_KEY": "<YOUR_BOCHA_API_KEY>"
        }
      }
    }
  },
  "delorenj/mcp-qdrant-memory": {
    "mcpServers": {
      "memory": {
        "command": "/bin/zsh",
        "args": [
          "-c",
          "cd /path/to/server && node dist/index.js"
        ],
        "env": {
          "OPENAI_API_KEY": "your-openai-api-key",
          "QDRANT_API_KEY": "your-qdrant-api-key",
          "QDRANT_URL": "http://your-qdrant-server:6333",
          "QDRANT_COLLECTION_NAME": "your-collection-name"
        },
        "alwaysAllow": [
          "create_entities",
          "create_relations",
          "add_observations",
          "delete_entities",
          "delete_observations",
          "delete_relations",
          "read_graph",
          "search_similar"
        ]
      }
    }
  },
  "MCP-Mirror/suekou_mcp-notion-server": {
    "mcpServers": {
      "notion": {
        "command": "node",
        "args": [
          "your-built-file-path"
        ],
        "env": {
          "NOTION_API_TOKEN": "your-integration-token"
        }
      }
    }
  },
  "splendasucks/webperfect-mcp-server": {
    "mcpServers": {
      "webperfect": {
        "command": "node",
        "args": [
          "/path/to/webperfect-mcp-server/build/index.js"
        ],
        "env": {}
      }
    }
  },
  "cr7258/elasticsearch-mcp-server": [
    {
      "mcpServers": {
        "elasticsearch-mcp-server": {
          "command": "uv",
          "args": [
            "--directory",
            "path/to/src/elasticsearch_mcp_server",
            "run",
            "elasticsearch-mcp-server"
          ],
          "env": {
            "ELASTICSEARCH_HOSTS": "https://localhost:9200",
            "ELASTICSEARCH_USERNAME": "elastic",
            "ELASTICSEARCH_PASSWORD": "test123"
          }
        }
      }
    },
    {
      "mcpServers": {
        "opensearch-mcp-server": {
          "command": "uv",
          "args": [
            "--directory",
            "path/to/src/elasticsearch_mcp_server",
            "run",
            "opensearch-mcp-server"
          ],
          "env": {
            "OPENSEARCH_HOSTS": "https://localhost:9200",
            "OPENSEARCH_USERNAME": "admin",
            "OPENSEARCH_PASSWORD": "admin"
          }
        }
      }
    }
  ],
  "dpflucas/mysql-mcp-server": {
    "mcpServers": {
      "mysql": {
        "command": "node",
        "args": [
          "/path/to/mysql-mcp-server/build/index.js"
        ],
        "env": {
          "MYSQL_HOST": "your-mysql-host",
          "MYSQL_PORT": "3306",
          "MYSQL_USER": "your-mysql-user",
          "MYSQL_PASSWORD": "your-mysql-password",
          "MYSQL_DATABASE": "your-default-database"
        },
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "bigcodegen/mcp-neovim-server": {
    "mcpServers": {
      "MCP Neovim Server": {
        "command": "npx",
        "args": [
          "-y",
          "mcp-neovim-server"
        ],
        "env": {
          "ALLOW_SHELL_COMMANDS": "true",
          "NVIM_SOCKET_PATH": "/tmp/nvim"
        }
      }
    }
  },
  "terilios/smartsheet-server": {
    "mcpServers": {
      "smartsheet": {
        "command": "/Users/[username]/anaconda3/envs/cline_mcp_env/bin/node",
        "args": [
          "/path/to/smartsheet-server/build/index.js"
        ],
        "env": {
          "PYTHON_PATH": "/Users/[username]/anaconda3/envs/cline_mcp_env/bin/python3",
          "SMARTSHEET_API_KEY": "your-api-key",
          "AZURE_OPENAI_API_KEY": "your-azure-openai-key",
          "AZURE_OPENAI_API_BASE": "your-azure-openai-endpoint",
          "AZURE_OPENAI_API_VERSION": "your-api-version",
          "AZURE_OPENAI_DEPLOYMENT": "your-deployment-name"
        },
        "disabled": false,
        "autoApprove": [
          "get_column_map",
          "smartsheet_write",
          "smartsheet_update",
          "smartsheet_delete",
          "smartsheet_search",
          "smartsheet_add_column",
          "smartsheet_delete_column",
          "smartsheet_rename_column",
          "smartsheet_bulk_update",
          "start_batch_analysis",
          "get_job_status",
          "cancel_batch_analysis"
        ]
      }
    }
  },
  "sjquant/llm-bridge-mcp": {
    "mcpServers": {
      "llm-bridge": {
        "command": "uvx",
        "args": [
          "llm-bridge-mcp"
        ],
        "env": {
          "OPENAI_API_KEY": "your_openai_api_key",
          "ANTHROPIC_API_KEY": "your_anthropic_api_key",
          "GOOGLE_API_KEY": "your_google_api_key",
          "DEEPSEEK_API_KEY": "your_deepseek_api_key"
        }
      }
    }
  },
  "erithwik/mcp-hn": {
    "mcpServers": {
      "mcp-hn": {
        "command": "uvx",
        "args": [
          "mcp-hn"
        ]
      }
    }
  },
  "mrwyndham/pocketbase-mcp": {
    "mcpServers": {
      "pocketbase-server": {
        "command": "node",
        "args": [
          "build/index.js"
        ],
        "env": {
          "POCKETBASE_URL": "http://127.0.0.1:8090",
          "POCKETBASE_ADMIN_EMAIL": "admin@example.com",
          "POCKETBASE_ADMIN_PASSWORD": "admin_password"
        },
        "disabled": false,
        "autoApprove": [
          "create_record",
          "create_collection"
        ]
      }
    }
  },
  "wricardo/gpt-mcp-proxy": {
    "mcpServers": {
      "filesystem": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-filesystem",
          "/Users/username/Desktop",
          "/path/to/other/allowed/dir"
        ]
      }
    }
  },
  "MCP-Mirror/garc33_bitbucket-server-mcp-server": {
    "mcpServers": {
      "bitbucket": {
        "command": "node",
        "args": [
          "/path/to/bitbucket-server/build/index.js"
        ],
        "env": {
          "BITBUCKET_URL": "https://your-bitbucket-server.com",
          "BITBUCKET_TOKEN": "your-access-token",
          "BITBUCKET_USERNAME": "your-username",
          "BITBUCKET_PASSWORD": "your-password"
        }
      }
    }
  },
  "harlanc/xiu": {
    "mcpServers": {
      "redis": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-redis",
          "redis://localhost:6379"
        ]
      }
    }
  },
  "MCP-Mirror/PoliTwit1984_second-opinion-mcp-server": {
    "mcpServers": {
      "second-opinion": {
        "command": "node",
        "args": [
          "/path/to/second-opinion-server/build/index.js"
        ],
        "env": {
          "GEMINI_API_KEY": "your-gemini-api-key",
          "PERPLEXITY_API_KEY": "your-perplexity-api-key",
          "STACK_EXCHANGE_KEY": "your-stack-exchange-key"
        }
      }
    }
  },
  "isaacphi/mcp-language-server": {
    "mcpServers": {
      "language-server": {
        "command": "/full/path/to/your/clone/mcp-language-server/mcp-language-server",
        "args": [
          "--workspace",
          "/path/to/workspace",
          "--lsp",
          "/path/to/language/server"
        ],
        "env": {
          "DEBUG": "1"
        }
      }
    }
  },
  "scarqin/mcp-apikit": {
    "mcpServers": {
      "apikit": {
        "command": "node",
        "args": [
          "/Users/{userName}/Documents/mcp-apikit/dist/index.js"
        ],
        "env": {}
      }
    }
  },
  "bmorphism/slowtime-mcp-server": {
    "mcpServers": {
      "slowtime": {
        "command": "node",
        "args": [
          "/path/to/slowtime-mcp-server/build/index.js"
        ]
      }
    }
  },
  "luis1232023/nest-llm-aigent": {
    "mcpServers": {
      "server1": {
        "name": "example-server",
        "args": [
          "server.js"
        ],
        "path": "./servers/server1/"
      }
    },
    "mcpClient": {
      "name": "mcp-client",
      "version": "1.0.0"
    }
  },
  "MCP-Mirror/johnnyoshika_mcp-server-sqlite-npx": {
    "mcpServers": {
      "sqlite": {
        "command": "/absolute/path/to/node",
        "args": [
          "/absolute/path/to/index.js",
          "/absolute/path/to/database.db"
        ]
      }
    }
  },
  "husniadil/mcp-image-placeholder": {
    "mcpServers": {
      "image-placeholder": {
        "command": "uv",
        "args": [
          "--directory",
          "/ABSOLUTE/PATH/TO/PROJECT",
          "run",
          "main.py"
        ]
      }
    }
  },
  "chromewillow/greyhack-mcp-server": {
    "mcpServers": {
      "@greyhack-mcp-server": {
        "command": "npx",
        "args": [
          "-y",
          "@smithery/cli@latest",
          "run",
          "@chromewillow/greyhack-mcp-server",
          "--config",
          "{\"GITHUB_TOKEN\":\"your-github-token-here\"}"
        ]
      }
    }
  },
  "tuananh/hyper-mcp": {
    "mcpServers": {
      "hyper-mcp": {
        "command": "/path/to/hyper-mcp",
        "args": [
          ""
        ]
      }
    }
  },
  "rmtech1/txtai-assistant-mcp": {
    "mcpServers": {
      "txtai-assistant": {
        "command": "path/to/txtai-assistant-mcp/scripts/start.sh",
        "env": {}
      }
    }
  },
  "ZahidGalea/windtools-mcp": {
    "mcpServers": {
      "windtools": {
        "command": "uv",
        "args": [
          "run",
          "windtools-mcp"
        ],
        "env": {
          "DATA_ROOT": "/Users/<user>/windtools_data",
          "CHROMA_DB_FOLDER_NAME": "chromadb",
          "SENTENCE_TRANSFORMER_PATH": "jinaai/jina-embeddings-v2-base-code"
        }
      }
    }
  },
  "sapientpants/sonarqube-mcp-server": {
    "mcpServers": {
      "sonarqube": {
        "command": "node",
        "args": [
          "/path/to/sonarqube-mcp-server/dist/index.js"
        ],
        "env": {
          "SONARQUBE_TOKEN": "your-sonarqube-token"
        }
      }
    }
  },
  "playcanvas/mcp-editor": {
    "mcpServers": {
      "playcanvas": {
        "command": "npx",
        "args": [
          "tsx",
          "~/path/to/mcp-editor/src/server.ts"
        ]
      }
    }
  },
  "severity1/argocd-mcp": {
    "mcpServers": {
      "argocd-mcp": {
        "command": "/path/to/uv",
        "args": [
          "--directory",
          "/path/to/argocd-mcp",
          "run",
          "server.py"
        ],
        "env": {
          "ARGOCD_TOKEN": "your_argocd_token",
          "ARGOCD_API_URL": "https://your-argocd-server.com/api/v1",
          "ARGOCD_VERIFY_SSL": "true"
        }
      }
    }
  },
  "dstotijn/mcp-developer-overheid-api-register": {
    "mcpServers": {
      "developer-overheid-api-register": {
        "command": "go",
        "args": [
          "run",
          "github.com/dstotijn/mcp-developer-overheid-api-register@main"
        ]
      }
    }
  },
  "cpropster/linear-mcp-server": {
    "mcpServers": {
      "github.com/cpropster/linear-mcp-server": {
        "command": "node",
        "args": [
          "/path/to/linear-mcp-server/build/index.js"
        ],
        "env": {
          "LINEAR_CLIENT_ID": "your-client-id",
          "LINEAR_CLIENT_SECRET": "your-client-secret",
          "LINEAR_REDIRECT_URI": "http://localhost:3000/callback",
          "LINEAR_REFRESH_TOKEN": "your-refresh-token"
        },
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "stedwick/codecov-mcp": {
    "mcpServers": {
      "codecov-mcp-server": {
        "command": "npx",
        "args": [
          "-y",
          "codecov-mcp-server"
        ],
        "env": {
          "CODECOV_API_KEY": "XXX",
          "GIT_URL": "XXX"
        }
      }
    }
  },
  "marcelmarais/obsidian-mcp-server": {
    "mcpServers": {
      "obsidian": {
        "command": "node",
        "args": [
          "obsidian-mcp-server/build/index.js",
          "/path/to/your/vault"
        ]
      }
    }
  },
  "arbuthnot-eth/PayPal-MCP-Backdated": {
    "mcpServers": {
      "paypal": {
        "command": "node",
        "args": [
          "path/to/paypal-mcp/build/index.js"
        ],
        "env": {
          "PAYPAL_CLIENT_ID": "your_client_id",
          "PAYPAL_CLIENT_SECRET": "your_client_secret",
          "PAYPAL_ENVIRONMENT": "sandbox"
        },
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "MobileVibe/notification-mcp": {
    "mcpServers": {
      "notification": {
        "command": "npx",
        "args": [
          "cline-notification-server"
        ],
        "env": {
          "TELEGRAM_BOT_TOKEN": "your_bot_token",
          "TELEGRAM_CHAT_ID": "your_chat_id"
        }
      }
    }
  },
  "jmanhype/MCPheonix": {
    "mcpServers": {
      "your_server_id": {
        "command": "/path/to/executable",
        "args": [
          "arg1",
          "arg2"
        ],
        "env": {
          "ENV_VAR1": "value1",
          "ENV_VAR2": "value2"
        },
        "tools": {
          "your_tool": {
            "description": "Description of your tool",
            "parameters": [
              {
                "name": "param1",
                "type": "string",
                "description": "Parameter description"
              }
            ]
          }
        }
      }
    }
  },
  "teamcurri/mcp-linear": {
    "mcpServers": {
      "curri-mcp-server": {
        "command": "/path/to/curri-mcp-server/build/index.js"
      }
    }
  },
  "FutureUnreal/mcp-pdf2md": {
    "mcpServers": {
      "pdf2md": {
        "command": "uv",
        "args": [
          "--directory",
          "/path/to/mcp-pdf2md",
          "run",
          "pdf2md",
          "--output-dir",
          "/path/to/output"
        ],
        "env": {
          "MINERU_API_KEY": "Bearer your_api_key_here"
        }
      }
    }
  },
  "spences10/mcp-svelte-docs": {
    "mcpServers": {
      "mcp-svelte-docs": {
        "command": "node",
        "args": [
          "/path/to/mcp-svelte-docs/dist/index.js"
        ],
        "env": {
          "DEBUG": "false"
        },
        "disabled": false,
        "autoApprove": [
          "svelte_pattern",
          "svelte5_feature",
          "svelte5_common_mistakes"
        ]
      }
    }
  },
  "Cam10001110101/mcp-server-browser-use-ollama": {
    "mcpServers": {
      "browser-use": {
        "command": "/path/to/.venv/bin/python",
        "args": [
          "/path/to/server.py"
        ]
      }
    }
  },
  "Lespernater/mcp-server-bold": {
    "mcpServers": {
      "bold": {
        "command": "/path/to/bin/python",
        "args": [
          "-m",
          "mcp_server_bold"
        ]
      }
    }
  },
  "chulanpro5/evm-mcp-server": {
    "mcpServers": {
      "evm-mcp-sse": {
        "url": "http://localhost:3001/sse"
      }
    }
  },
  "shreyaskarnik/huggingface-mcp-server": {
    "mcpServers": {
      "huggingface": {
        "command": "uv",
        "args": [
          "--directory",
          "/absolute/path/to/huggingface-mcp-server",
          "run",
          "huggingface_mcp_server.py"
        ],
        "env": {
          "HF_TOKEN": "your_token_here"
        }
      }
    }
  },
  "gotohuman/gotohuman-mcp-server": {
    "mcpServers": {
      "gotoHuman": {
        "command": "node",
        "args": [
          "/<absolute-path>/build/index.js"
        ],
        "env": {
          "GOTOHUMAN_API_KEY": "your-api-key"
        }
      }
    }
  },
  "pinecone-io/assistant-mcp": {
    "mcpServers": {
      "pinecone-assistant": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "-e",
          "PINECONE_API_KEY",
          "-e",
          "PINECONE_ASSISTANT_HOST",
          "pinecone/assistant-mcp"
        ],
        "env": {
          "PINECONE_API_KEY": "<YOUR_PINECONE_API_KEY_HERE>",
          "PINECONE_ASSISTANT_HOST": "<YOUR_PINECONE_ASSISTANT_HOST_HERE>"
        }
      }
    }
  },
  "portone-io/mcp-server": {
    "mcpServers": {
      "portone-mcp-server": {
        "command": "uv",
        "args": [
          "--directory",
          "/your/absolute/path/to/portone-mcp-server",
          "run",
          "portone-mcp-server"
        ]
      }
    }
  },
  "matthewdcage/pbs-mcp-server": {
    "mcpServers": {
      "pbs-api": {
        "command": "node",
        "args": [
          "path/to/pbs-mcp-standalone/build/index.js"
        ],
        "env": {
          "PBS_API_SUBSCRIPTION_KEY": "your-subscription-key-here"
        }
      }
    }
  },
  "ibraheem4/github-mcp": {
    "mcpServers": {
      "github-ibraheem4": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-github"
        ],
        "env": {
          "GITHUB_TOKEN": "your_github_personal_access_token"
        }
      },
      "github-pr-ibraheem4": {
        "command": "npx",
        "args": [
          "-y",
          "@ibraheem4/github-mcp"
        ],
        "env": {
          "GITHUB_TOKEN": "your_github_personal_access_token"
        },
        "disabled": false,
        "alwaysAllow": []
      }
    }
  },
  "Albiemark/dbx-mcp-server": {
    "mcpServers": {
      "dbx": {
        "command": "node",
        "args": [
          "/path/to/dbx-mcp-server/build/index.js"
        ]
      }
    }
  },
  "ramidecodes/mcp-server-notion": {
    "mcpServers": {
      "Notion": {
        "command": "npx",
        "args": [
          "@ramidecodes/mcp-server-notion@latest",
          "-y",
          "--api-key=your-notion-integration-key"
        ]
      }
    }
  },
  "kukapay/pancakeswap-poolspy-mcp": {
    "mcpServers": {
      "PancakeSwap-PoolSpy": {
        "command": "uv",
        "args": [
          "--directory",
          "path/to/pancakeswap-poolspy-mcp",
          "run",
          "main.py"
        ],
        "env": {
          "THEGRAPH_API_KEY": "your api key from The Graph"
        }
      }
    }
  },
  "9Ninety/MCPNotes": {
    "mcpServers": {
      "mcp-notes": {
        "command": "npx",
        "args": [
          "-y",
          "-p",
          "mcp-notes",
          "mcp-notes-server",
          "--dynamodb",
          "dynamodb://access_key:secret_key@region/table"
        ]
      }
    }
  },
  "yuiseki/gyazo-mcp-server": {
    "mcpServers": {
      "gyazo-mcp-server": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "-e",
          "GYAZO_ACCESS_TOKEN",
          "gyazo-mcp-server"
        ],
        "env": {
          "GYAZO_ACCESS_TOKEN": "your-access-token-here"
        }
      }
    }
  },
  "browsercat/browsercat-mcp-server": {
    "mcpServers": {
      "browsercat": {
        "command": "npx",
        "args": [
          "-y",
          "@browsercatco/mcp-server"
        ],
        "env": {
          "BROWSERCAT_API_KEY": "your-api-key-here"
        }
      }
    }
  },
  "MCP-Mirror/tengfone_supabase-nextjs-mcp-server": {
    "mcpServers": {
      "supabase-nextjs-server": {
        "command": "/path/to/supabase-nextjs-server/build/index.js"
      }
    }
  },
  "KS-GEN-AI/jira-mcp-server": {
    "mcpServers": {
      "Jira communication server": {
        "command": "node",
        "args": [
          "/PATH_TO_THE_PROJECT/build/index.js"
        ],
        "env": {
          "JIRA_URL": "https://XXXXXXXX.atlassian.net",
          "JIRA_API_MAIL": "Your email",
          "JIRA_API_KEY": "KEY_FROM : https://id.atlassian.com/manage-profile/security/api-tokens"
        }
      }
    }
  },
  "seanivore/mcp-file-preview": {
    "mcpServers": {
      "file-preview": {
        "command": "node",
        "args": [
          "/path/to/mcp-file-preview/build/index.js"
        ]
      }
    }
  },
  "captain-blue210/anki-mcp-server": {
    "mcpServers": {
      "anki": {
        "command": "node",
        "args": [
          "path/to/anki-mcp-server/dist/index.js"
        ]
      }
    }
  },
  "theronic/datomic-mcp": {
    "mcpServers": {
      "modex-datomic-mcp": {
        "command": "java",
        "args": [
          "-jar",
          "/Users/petrus/code/datomic-mcp/target/theronic-datomic-mcp-0.3.0.jar"
        ],
        "env": {
          "DATOMIC_URI": "<your datomic URI here>"
        }
      }
    },
    "globalShortcut": ""
  },
  "MCP-Mirror/scorzeth_anki-mcp-server": {
    "mcpServers": {
      "anki-server": {
        "command": "/path/to/anki-server/build/index.js"
      }
    }
  },
  "bsmi021/mcp-python-executor": {
    "mcpServers": {
      "mcp-python-executor": {
        "command": "node",
        "args": [
          "path/to/python-executor/build/index.js"
        ],
        "env": {
          "PREINSTALLED_PACKAGES": "numpy pandas matplotlib scikit-learn",
          "MAX_MEMORY_MB": "512",
          "EXECUTION_TIMEOUT_MS": "30000",
          "MAX_CONCURRENT_EXECUTIONS": "5",
          "LOG_LEVEL": "info",
          "LOG_FORMAT": "json"
        }
      }
    }
  },
  "r-huijts/xcode-mcp-server": {
    "mcpServers": {
      "xcode": {
        "command": "node",
        "args": [
          "/absolute/path/to/xcode-mcp-server/dist/index.js"
        ],
        "env": {
          "PROJECTS_BASE_DIR": "/path/to/your/xcode/projects"
        }
      }
    }
  },
  "bmorphism/nats-mcp-server": {
    "mcpServers": {
      "nats": {
        "command": "node",
        "args": [
          "/path/to/nats-mcp-server/build/index.js"
        ],
        "env": {
          "NATS_URL": "nats://localhost:4222"
        }
      }
    }
  },
  "zym9863/together-ai-image-server": {
    "mcpServers": {
      "Together AI Image Server": {
        "command": "/path/to/together-ai-image-server/build/index.js"
      }
    }
  },
  "MCP-Mirror/benborla_mcp-server-mysql": {
    "mcpServers": {
      "mcp_server_myqsl": {
        "command": "/path/to/npx/binary/npx",
        "args": [
          "-y",
          "@benborla29/mcp-server-mysql"
        ],
        "env": {
          "MYSQL_HOST": "127.0.0.1",
          "MYSQL_PORT": "3306",
          "MYSQL_USER": "root",
          "MYSQL_PASS": "",
          "MYSQL_DB": "db_name",
          "PATH": "/path/to/node/bin:/usr/bin:/bin"
        }
      }
    }
  },
  "MobileVibe/telegram-mcp": {
    "mcpServers": {
      "telegram-mcp": {
        "command": "node",
        "args": [
          "path/to/telegram-mcp/build/index.js"
        ],
        "env": {
          "TELEGRAM_BOT_TOKEN": "your_bot_token",
          "TELEGRAM_CHAT_ID": "your_chat_id"
        },
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "marcoeg/mcp-server-ntopng": {
    "mcpServers": {
      "mcp-ntopng": {
        "command": "/path/to/your/uv-binary",
        "args": [
          "run",
          "--with",
          "mcp-ntopng",
          "--python",
          "3.13",
          "mcp-ntopng"
        ],
        "env": {
          "NTOPNG_HOST": "<ntopng-host>",
          "NTOPNG_DBPORT": "<ntopng-dbport>",
          "NTOPNG_DBUSER": "<ntopng-dbuser>",
          "NTOPNG_DBPASSWORD": "<ntopng-dbpassword>",
          "NTOPNG_SECURE": "true",
          "NTOPNG_VERIFY": "true",
          "NTOPNG_CONNECT_TIMEOUT": "30",
          "NTOPNG_SEND_RECEIVE_TIMEOUT": "300",
          "NTOPNG_API_KEY": "NTOPNG_TOKEN"
        }
      }
    }
  },
  "kevinwatt/playwright-mcp-fetch": {
    "mcpServers": {
      "fetch-tools": {
        "enabled": true,
        "transport": "sse",
        "url": "http://localhost:3000/sse",
        "postUrl": "http://localhost:3000/messages"
      }
    }
  },
  "tatn/mcp-server-fetch-typescript": {
    "mcpServers": {
      "mcp-server-fetch-typescript": {
        "command": "node",
        "args": [
          "/path/to/mcp-server-fetch-typescript/build/index.js"
        ]
      }
    }
  },
  "tanevanwifferen/usescraper-mcp-server": {
    "mcpServers": {
      "usescraper-server": {
        "command": "node",
        "args": [
          "/path/to/usescraper-server/build/index.js"
        ],
        "env": {
          "USESCRAPER_API_KEY": "your-api-key-here"
        }
      }
    }
  },
  "charles-adedotun/Lilith-Shell": {
    "mcpServers": {
      "lilith-shell": {
        "command": "/path/to/cloned/Lilith-Shell/venv/bin/python",
        "args": [
          "/path/to/cloned/Lilith-Shell/src/lilith_shell/executor.py"
        ],
        "env": {
          "PYTHONPATH": "/path/to/cloned/Lilith-Shell/src"
        }
      }
    }
  },
  "MCP-Mirror/danielma-tic_fillout-mcp-server": {
    "mcpServers": {
      "fillout": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-fillout"
        ],
        "env": {
          "FILLOUT_API_KEY": "your-fillout-api-key"
        }
      }
    }
  },
  "AstroMined/pygithub-mcp-server": {
    "mcpServers": {
      "github": {
        "command": "/path/to/repo/.venv/bin/python",
        "args": [
          "-m",
          "pygithub_mcp_server"
        ],
        "env": {
          "GITHUB_PERSONAL_ACCESS_TOKEN": "your-token-here"
        }
      }
    }
  },
  "GongRzhe/TRAVEL-PLANNER-MCP-Server": {
    "mcpServers": {
      "travel-planner": {
        "command": "node",
        "args": [
          "path/to/dist/index.js"
        ],
        "env": {
          "GOOGLE_MAPS_API_KEY": "your_google_maps_api_key"
        }
      }
    }
  },
  "r-huijts/ns-mcp-server": {
    "mcpServers": {
      "ns-server": {
        "command": "node",
        "args": [
          "/path/to/ns-server/build/index.js"
        ],
        "env": {
          "NS_API_KEY": "your_api_key_here"
        }
      }
    }
  },
  "yangkyeongmo/mcp-server-apache-airflow": {
    "mcpServers": {
      "mcp-server-apache-airflow": {
        "command": "uv",
        "args": [
          "--directory",
          "/path/to/mcp-server-apache-airflow",
          "run",
          "mcp-server-apache-airflow"
        ],
        "env": {
          "AIRFLOW_HOST": "https://your-airflow-host",
          "AIRFLOW_USERNAME": "your-username",
          "AIRFLOW_PASSWORD": "your-password"
        }
      }
    }
  },
  "patruff/ollama-mcp-bridge": {
    "mcpServers": {
      "filesystem": {
        "command": "node",
        "args": [
          "path/to/server-filesystem/dist/index.js"
        ],
        "allowedDirectory": "workspace/path"
      }
    },
    "llm": {
      "model": "qwen2.5-coder:7b-instruct",
      "baseUrl": "http://localhost:11434"
    }
  },
  "SmallCloudCo/smallcloud-mcp-server": {
    "mcpServers": {
      "smallcloud-mcp-server": {
        "command": "/opt/homebrew/bin/node",
        "args": [
          "~/Git/smallcloud-mcp-server/index.js"
        ]
      }
    }
  },
  "ParasSolanki/jira-mcp-server": {
    "mcpServers": {
      "jira": {
        "command": "cmd /c npx",
        "args": [
          "-y",
          "@parassolanki/jira-mcp-server@latest"
        ],
        "env": {
          "JIRA_PERSONAL_ACCESS_TOKEN": "email@example.com:your_personal_jira_access_token",
          "JIRA_BASE_URL": "jira_base_url"
        }
      }
    }
  },
  "ttiimmaacc/cinema4d-mcp": {
    "mcpServers": {
      "cinema4d": {
        "command": "cinema4d-mcp-wrapper",
        "args": []
      }
    }
  },
  "amotivv/cloudflare-browser-rendering-mcp": {
    "mcpServers": {
      "cloudflare-browser-rendering": {
        "command": "node",
        "args": [
          "/path/to/cloudflare-browser-rendering/dist/index.js"
        ],
        "env": {
          "BROWSER_RENDERING_API": "https://your-worker-url.workers.dev"
        },
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "YuheiNakasaka/arithmetic-mcp-server": {
    "mcpServers": {
      "arithmetic": {
        "command": "node",
        "args": [
          "/Users/y_nakasaka/Documents/Cline/MCP/arithmetic-server/src/index.js"
        ],
        "disabled": false,
        "autoApprove": []
      }
    }
  },
  "rotexhawk/Mcp-Puppeteer-Server": {
    "mcpServers": {
      "puppeteer": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-puppeteer"
        ]
      }
    }
  },
  "ollama-tlms-golang/05-make-your-mcp-server": {
    "mcpServers": {
      "mcp-curl-with-docker": {
        "command": "docker",
        "args": [
          "run",
          "--rm",
          "-i",
          "mcp-curl"
        ]
      }
    }
  },
  "centralmind/gateway": {
    "mcpServers": {
      "gateway": {
        "command": "PATH_TO_GATEWAY_BINARY",
        "args": [
          "start",
          "--config",
          "PATH_TO_GATEWAY_YAML_CONFIG",
          "mcp-stdio"
        ]
      }
    }
  },
  "MCP-Mirror/kiliczsh_mcp-mongo-server": {
    "mcpServers": {
      "mongodb": {
        "command": "npx",
        "args": [
          "-y",
          "mcp-mongo-server",
          "mongodb://muhammed:kilic@mongodb.localhost/sample_namespace"
        ]
      }
    }
  },
  "ctvidic/whoop-mcp-server": {
    "mcpServers": {
      "Whoop": {
        "command": "python",
        "args": [
          "/path/to/whoop/src/whoop_server.py"
        ],
        "cwd": "/path/to/whoop",
        "env": {
          "WHOOP_EMAIL": "your.email@example.com",
          "WHOOP_PASSWORD": "your_password"
        }
      }
    }
  },
  "MCP-Mirror/MindscapeHQ_mcp-server-raygun": {
    "mcpServers": {
      "raygun": {
        "command": "/path/to/server-raygun/build/index.js",
        "env": {
          "RAYGUN_PAT_TOKEN": "your-pat-token-ken"
        }
      }
    }
  },
  "Nekzus/mcp-server": {
    "mcpServers": {
      "nekzus": {
        "transport": "stdio",
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "--init",
          "nekzus/mcp-server"
        ]
      }
    }
  },
  "Abiorh001/mcp_ev_assistant_server": {
    "mcpServers": {
      "ev_assistant": {
        "command": "/home/$USER/path/mcp_learning/.venv/bin/python",
        "args": [
          "/home/$USER/path/mcp_ev_assistant_server/ev_assistant_server.py"
        ],
        "env": {
          "OPENCHARGE_MAP_API_KEY": "your_opencharge_map_api_key",
          "GOOGLE_MAP_API_KEY": "your_google_map_api_key"
        }
      }
    }
  },
  "skydeckai/mcp-server-rememberizer": {
    "mcpServers": {
      "rememberizer": {
        "command": "uvx",
        "args": [
          "mcp-server-rememberizer"
        ],
        "env": {
          "REMEMBERIZER_API_TOKEN": "your_rememberizer_api_token"
        }
      }
    }
  },
  "Krekun/vrchat-mcp-osc": {
    "mcpServers": {
      "vrchat-mcp-osc": {
        "command": "npx",
        "args": [
          "vrchat-mcp-osc"
        ]
      }
    }
  },
  "Laksh-star/mcp-server-tmdb": {
    "mcpServers": {
      "tmdb": {
        "command": "/full/path/to/dist/index.js",
        "env": {
          "TMDB_API_KEY": "your_api_key_here"
        }
      }
    }
  },
  "gujord/OpenAPI-MCP": {
    "mcpServers": {
      "petstore3": {
        "command": "full_path_to_openapi_mcp/venv/bin/python",
        "args": [
          "full_path_to_openapi_mcp/src/server.py"
        ],
        "env": {
          "SERVER_NAME": "petstore3",
          "OPENAPI_URL": "https://petstore3.swagger.io/api/v3/openapi.json"
        },
        "transport": "stdio"
      }
    }
  }
}